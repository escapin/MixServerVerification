\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Mar 20 18:29:55 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Mar 20 18:29:55 CET 2016
name=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:setEquality([[B,[[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:setEquality([[B,[[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "248744")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "arr1,arr2,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "9") (term "0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "nonNull" (formula "5") (inst "i=i"))
(rule "greater_literals" (formula "5") (term "0,1"))
(builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "7")))
(rule "sub_literals" (formula "5") (term "2,1,0"))
(builtin "One Step Simplification" (formula "5"))
(rule "narrowSelectArrayType" (formula "5") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "7"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
(rule "nonNull" (formula "6") (inst "i=i"))
(rule "greater_literals" (formula "6") (term "0,1"))
(builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")))
(rule "sub_literals" (formula "6") (term "2,1,0"))
(builtin "One Step Simplification" (formula "6"))
(rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "8"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "5") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_notAnd" (formula "5") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "commute_or_2" (formula "5") (term "0"))
(rule "commute_or_2" (formula "6") (term "0"))
(rule "commute_or" (formula "5") (term "0,0"))
(rule "commute_or" (formula "6") (term "0,0"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_setEquality,savedHeapBefore_setEquality"))
(builtin "One Step Simplification" (formula "9"))
(rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
(rule "compound_inequality_comparison_2" (formula "9") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
(rule "assignment_read_length" (formula "9") (term "1"))
(branch "Normal Execution (_arr1 != null)"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
   (builtin "One Step Simplification" (formula "10"))
   (rule "false_right" (formula "9"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
   (rule "assignment_read_length" (formula "9") (term "1"))
   (branch "Normal Execution (_arr2 != null)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
      (rule "false_right" (formula "9"))
      (rule "inequality_comparison_simple" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "9") (term "0,0,1,0"))
      (rule "ifSplit" (formula "9"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "methodCallReturn" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "methodCallEmpty" (formula "10") (term "1"))
         (rule "tryEmpty" (formula "10") (term "1"))
         (rule "emptyModality" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "notRight" (formula "10") (userinteraction))
         (rule "array2seq2dDef" (formula "1") (term "0") (inst "u=u") (userinteraction))
         (rule "array2seq2dDef" (formula "1") (term "1") (inst "u=u") (userinteraction))
         (rule "seqPermDefLeft" (formula "1") (inst "s=s") (inst "iv=iv") (userinteraction))
         (rule "andLeft" (formula "1"))
         (rule "exLeft" (formula "2") (inst "sk=s_0"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "eqSymm" (formula "1"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "eqSymm" (formula "2"))
         (rule "lenOfSeqDef" (formula "1") (term "1"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1"))
         (rule "times_zero_2" (formula "1") (term "1,1,1"))
         (rule "add_zero_right" (formula "1") (term "1,1"))
         (rule "lenOfSeqDef" (formula "1") (term "0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,0"))
         (rule "add_zero_right" (formula "1") (term "1,0"))
         (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
         (rule "castDel" (formula "4") (term "1,0,1,0"))
         (rule "castDel" (formula "4") (term "2,0,1,0"))
         (rule "add_zero_right" (formula "4") (term "0,2,1,1,0,1,0"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
         (rule "lenOfSeqDef" (formula "2") (term "0"))
         (rule "polySimp_elimSub" (formula "2") (term "1,0"))
         (rule "times_zero_2" (formula "2") (term "1,1,0"))
         (rule "add_zero_right" (formula "2") (term "1,0"))
         (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
         (rule "castDel" (formula "4") (term "1,0,1,0"))
         (rule "castDel" (formula "4") (term "2,0,1,0"))
         (rule "add_zero_right" (formula "4") (term "0,2,1,1,0,1,0"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,1,1,0"))
         (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
         (rule "array2seqDef" (formula "5") (term "2,1") (inst "u=u_1"))
         (rule "array2seqDef" (formula "5") (term "2,0") (inst "u=u_1"))
         (rule "array2seqDef" (formula "4") (term "1,0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "4") (term "1,1,1,0") (inst "u=u"))
         (rule "nnf_imp2or" (formula "4") (term "0"))
         (rule "nnf_notAnd" (formula "4") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
         (rule "mul_literals" (formula "4") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
         (rule "commute_or_2" (formula "4") (term "0"))
         (rule "commute_or" (formula "4") (term "0,0"))
         (rule "ifthenelse_to_or_right" (formula "4") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "nnf_notAnd" (formula "4") (term "0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0,0,0"))
         (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0,0"))
         (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "4") (term "0,1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "4") (term "1,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,1,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,1,1,0,0,0"))
         (rule "add_literals" (formula "4") (term "0,0,0,1,0,1,1,0,0,0"))
         (rule "add_zero_left" (formula "4") (term "0,0,1,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "4") (term "0,0,1,1,0,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1,1,0,0,0"))
         (rule "add_zero_right" (formula "4") (term "0,0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "4") (term "1,0,0,1,1,0,0,0"))
         (rule "commute_or" (formula "4") (term "0,0"))
         (rule "commute_or_2" (formula "4") (term "0"))
         (rule "commute_or" (formula "4") (term "1,1,0"))
         (rule "commute_or_2" (formula "4") (term "0,1,0"))
         (rule "commute_or_2" (formula "4") (term "0,1,1,0"))
         (rule "commute_or" (formula "4") (term "0,0,1,0"))
         (rule "commute_or" (formula "4") (term "0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "4") (term "1,1,0"))
         (rule "commute_or_2" (formula "4") (term "0,1,1,0"))
         (rule "shift_paren_or" (formula "4") (term "1,1,1,0"))
         (rule "commute_or_2" (formula "4") (term "0,0,1,1,0"))
         (rule "shift_paren_or" (formula "4") (term "0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "4") (term "0"))
         (rule "distr_forallAnd" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "commute_or" (formula "5") (term "0"))
         (rule "commute_or_2" (formula "4") (term "0"))
         (rule "shift_paren_or" (formula "4") (term "0,0"))
         (rule "cnf_rightDist" (formula "5") (term "0"))
         (rule "distr_forallAnd" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "commute_or_2" (formula "6") (term "0"))
         (rule "shift_paren_or" (formula "5") (term "0"))
         (rule "commute_or_2" (formula "6") (term "0,0"))
         (rule "shift_paren_or" (formula "5") (term "0,0"))
         (rule "commute_or_2" (formula "5") (term "0,0,0"))
         (rule "shift_paren_or" (formula "4") (term "0,0,0"))
         (rule "commute_or" (formula "6") (term "0,0,0,0"))
         (rule "commute_or" (formula "4") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "shift_paren_or" (formula "6") (term "0,0,0"))
         (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
         (rule "commute_or" (formula "5") (term "0,0,0,0,0"))
         (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0,0,0,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
         (rule "qeq_literals" (formula "5") (term "1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "arr2.length >= 1 TRUE"
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "6") (term "1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
            (rule "ifthenelse_split" (formula "3") (term "0"))
            (branch "arr1.length >= 1 TRUE"
               (rule "eqSymm" (formula "4"))
               (rule "close" (formula "15") (ifseqformula "4"))
            )
            (branch "arr1.length >= 1 FALSE"
               (rule "eqSymm" (formula "3"))
               (rule "inEqSimp_geqRight" (formula "14"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "6") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "4"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,0,0,0,0"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
               (rule "seqDef_lower_equals_upper" (formula "8") (term "1"))
               (rule "seqPermEmpty2" (formula "8"))
               (rule "eqSymm" (formula "8"))
               (rule "eqSeqEmpty" (formula "8"))
               (rule "lenOfSeqDef" (formula "8") (term "0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_elimSub" (formula "8") (term "0,1"))
               (rule "times_zero_2" (formula "8") (term "1,0,1"))
               (rule "add_zero_right" (formula "8") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
               (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "inEqSimp_leqRight" (formula "14"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "8") (term "1,1,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "5"))
               (rule "qeq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch "arr2.length >= 1 FALSE"
            (rule "eqSymm" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "13"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "6") (term "1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_notGeq" (formula "3") (term "0"))
            (rule "mul_literals" (formula "3") (term "1,0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0"))
            (rule "add_zero_left" (formula "3") (term "0,0"))
            (rule "commute_or_2" (formula "5") (term "0"))
            (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0,0"))
            (rule "add_zero_right" (formula "5") (term "1,1,0,0"))
            (rule "qeq_literals" (formula "5") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "commute_or_2" (formula "5") (term "0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "1,1,0,0,0,0"))
            (rule "qeq_literals" (formula "5") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "5") (term "1,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "arrayLengthNotNegative" (formula "13") (term "0"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
            (rule "leq_literals" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "13"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
            (rule "seqDef_lower_equals_upper" (formula "5") (term "1"))
            (rule "seqPermEmpty2" (formula "5"))
            (rule "eqSymm" (formula "5"))
            (rule "eqSeqEmpty" (formula "5"))
            (rule "lenOfSeqDef" (formula "5") (term "0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_elimSub" (formula "5") (term "0,1"))
            (rule "mul_literals" (formula "5") (term "1,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,1"))
            (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "notLeft" (formula "5"))
            (rule "inEqSimp_ltRight" (formula "12"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0"))
            (rule "inEqSimp_invertInEq1" (formula "1"))
            (rule "times_zero_2" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "12"))
            (rule "add_zero_right" (formula "9") (term "1"))
            (rule "inEqSimp_contradEq7" (formula "12") (ifseqformula "9"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "leq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "false_right" (formula "12"))
            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "3"))
            (rule "qeq_literals" (formula "9") (term "0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "closeFalse" (formula "9"))
         )
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationAssign" (formula "10") (term "1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "a1"))
         (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_sort,result_0,exc_0,heapAfter_sort,anon_heap_sort") (contract "verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup::sort([[B)].JML normal_behavior operation contract.0"))
         (branch "Post (sort)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "9") (term "0,2,2,0,1,0,0,1,0,1,1"))
            (rule "andLeft" (formula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")))
            (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,2,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "a2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "13") (inst "i=i"))
            (rule "greater_literals" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
            (rule "sub_literals" (formula "13") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "13") (term "0"))
            (rule "commute_or" (formula "13") (term "0,0"))
            (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_sort_0,result_1,exc_1,heapAfter_sort_0,anon_heap_sort_0") (contract "verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup::sort([[B)].JML normal_behavior operation contract.0"))
            (branch "Post (sort)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0,1,1,0,1,1") (ifseqformula "9"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "16") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0") (ifseqformula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,1,0") (ifseqformula "9"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "notLeft" (formula "21"))
               (rule "notLeft" (formula "20"))
               (rule "orRight" (formula "22"))
               (rule "replace_known_right" (formula "17") (term "0,0,1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "23")))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,2,2,0,1,0"))
               (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
               (rule "assignment" (formula "29") (term "1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "20") (inst "i=i"))
               (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")))
               (rule "greater_literals" (formula "20") (term "0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or" (formula "20") (term "0,0"))
               (rule "returnUnfold" (formula "29") (term "1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "29") (term "1"))
               (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_3"))
               (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
               (builtin "Use Operation Contract" (formula "31") (newnames "heapBefore_equals,result_2,exc_2") (contract "verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup::equals([[B,[[B)].JML normal_behavior operation contract.0"))
               (branch "Post (equals)"
                  (builtin "One Step Simplification" (formula "24"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "25"))
                  (rule "eqSymm" (formula "25") (term "0,1"))
                  (rule "eqSymm" (formula "25"))
                  (rule "assignment" (formula "33") (term "1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "methodCallReturn" (formula "33") (term "1"))
                  (rule "assignment" (formula "33") (term "1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "methodCallEmpty" (formula "33") (term "1"))
                  (rule "tryEmpty" (formula "33") (term "1"))
                  (rule "emptyModality" (formula "33") (term "1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "andRight" (formula "33") (userinteraction))
                  (branch
                     (rule "ifthenelse_split" (formula "25") (term "0") (userinteraction))
                     (branch " array2seq2d(heapAfter_sort_0, result_1) = array2seq2d(heapAfter_sort_0, result_0) TRUE"
                        (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "26") (userinteraction))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "25") (userinteraction))
                        (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_sort, result_0)
= array2seq2d(heapAfter_sort_0, result_0)") (userinteraction))
                        (branch "CUT: array2seq2d(heapAfter_sort, result_0) = array2seq2d(heapAfter_sort_0, result_0) TRUE"
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "1") (userinteraction))
                           (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_sort_0, arr1)
= array2seq2d(heapAfter_sort, arr1)") (userinteraction))
                           (branch "CUT: array2seq2d(heapAfter_sort_0, arr1) = array2seq2d(heapAfter_sort, arr1) TRUE"
                              (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "1") (userinteraction))
                              (rule "seqPermSym" (formula "15") (userinteraction))
                              (rule "seqPermTrans" (formula "15") (ifseqformula "22") (userinteraction))
                              (rule "closeAntec" (formula "15") (ifseqformula "37") (userinteraction))
                           )
                           (branch "CUT: array2seq2d(heapAfter_sort_0, arr1) = array2seq2d(heapAfter_sort, arr1) FALSE"
                              (rule "array2seq2dDef" (formula "28") (term "0") (inst "u=u") (userinteraction))
                              (rule "array2seq2dDef" (formula "28") (term "1") (inst "u=u") (userinteraction))
                              (rule "eqSymm" (formula "27"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "1"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv"))
                              (rule "getOfSeqDef" (formula "27") (term "0,1,0,1"))
                              (rule "castDel" (formula "27") (term "2,0,1,0,1"))
                              (rule "castDel" (formula "27") (term "1,0,1,0,1"))
                              (rule "add_zero_right" (formula "27") (term "0,2,1,1,0,1,0,1"))
                              (rule "eqSymm" (formula "27") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "27") (term "0,0"))
                              (rule "eqSymm" (formula "27") (term "0"))
                              (rule "polySimp_elimSub" (formula "27") (term "1,1,0"))
                              (rule "mul_literals" (formula "27") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "27") (term "1,1,0"))
                              (rule "lenOfSeqDef" (formula "27") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "27") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,1"))
                              (rule "getOfSeqDef" (formula "27") (term "0,1,0,1"))
                              (rule "castDel" (formula "27") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "27") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "27") (term "0,2,1,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,1,0,1"))
                              (rule "times_zero_2" (formula "27") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "27") (term "1,1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "27") (term "1,0,1"))
                              (rule "lenOfSeqDef" (formula "27") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "27") (term "1,0,0"))
                              (rule "times_zero_2" (formula "27") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "allRight" (formula "27") (inst "sk=iv_21"))
                              (rule "impRight" (formula "27"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "29") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                              (rule "eqSymm" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "29"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "array2seqDef" (formula "29") (term "1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "29") (term "1,1") (inst "u=u"))
                              (rule "pullOutSelect" (formula "29") (term "1,2,1,0") (inst "selectSK=arr_1374"))
                              (rule "applyEq" (formula "30") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEq" (formula "30") (term "0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "1,2,1,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "30") (term "1,2,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "30") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "30") (term "0,1,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "30") (term "1,2,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "arr1.length >= 1 TRUE"
                                 (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "3")))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "eqSeqDef" (formula "29") (inst "iv=iv"))
                                 (rule "lenOfSeqDef" (formula "29") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "29") (term "1,1,0"))
                                 (rule "mul_literals" (formula "29") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "29") (term "1,1,0"))
                                 (rule "lenOfSeqDef" (formula "29") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "29") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "allRight" (formula "29") (inst "sk=iv_22"))
                                 (rule "impRight" (formula "29"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "getOfSeqDef" (formula "31") (term "1"))
                                 (rule "castDel" (formula "31") (term "2,1"))
                                 (rule "castDel" (formula "31") (term "1,1"))
                                 (rule "add_zero_right" (formula "31") (term "0,2,1,1"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,0,1"))
                                 (rule "times_zero_2" (formula "31") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "31") (term "1,0,1"))
                                 (rule "lenOfSeqDef" (formula "2") (term "1"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "31") (term "0"))
                                 (rule "castDel" (formula "31") (term "2,0"))
                                 (rule "castDel" (formula "31") (term "1,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,2,1,0"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "31") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "31") (term "1,0") (inst "selectSK=arr_1375"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                                 (rule "eqSymm" (formula "32"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1376"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "arrayLengthNotNegative" (formula "27") (term "1,1,1,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "20") (term "1,1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "allLeft" (formula "15") (inst "t=iv_21"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "allLeft" (formula "14") (inst "t=iv_21"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                 (rule "leq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "24") (ifseqformula "35"))
                                 (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "16") (ifseqformula "35"))
                                 (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "10") (ifseqformula "35"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "arr1[iv_21].length >= 1 TRUE"
                                    (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "5")))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "arr1[iv_21].<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "arr1[iv_21].<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "36") (ifseqformula "37"))
                                       (rule "close" (formula "36") (ifseqformula "11"))
                                    )
                                 )
                                 (branch "arr1[iv_21].length >= 1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "times_zero_2" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                              (branch "arr1.length >= 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "29"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "times_zero_2" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                        (branch "CUT: array2seq2d(heapAfter_sort, result_0) = array2seq2d(heapAfter_sort_0, result_0) FALSE"
                           (rule "array2seq2dDef" (formula "27") (term "0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "27") (term "1") (inst "u=u") (userinteraction))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                           (rule "array2seqDef" (formula "26") (term "2,1") (inst "u=u_1"))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSeqDef" (formula "26") (inst "iv=iv"))
                           (rule "getOfSeqDef" (formula "26") (term "0,1,0,1"))
                           (rule "castDel" (formula "26") (term "2,0,1,0,1"))
                           (rule "castDel" (formula "26") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "0,2,1,2,1,0,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "0,2,0,1,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_2" (formula "26") (term "1,1,1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "1,1,0,0,1,0,1"))
                           (rule "lenOfSeqDef" (formula "26") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0"))
                           (rule "times_zero_2" (formula "26") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "26") (term "1,1,0"))
                           (rule "lenOfSeqDef" (formula "26") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "26") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=iv_19"))
                           (rule "impRight" (formula "26"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "lenOfSeqDef" (formula "2") (term "1"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "1,1,1"))
                           (rule "add_zero_right" (formula "2") (term "1,1"))
                           (rule "getOfSeqDef" (formula "28") (term "1"))
                           (rule "castDel" (formula "28") (term "2,1"))
                           (rule "castDel" (formula "28") (term "1,1"))
                           (rule "add_zero_right" (formula "28") (term "0,2,1,1,1"))
                           (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
                           (rule "times_zero_2" (formula "28") (term "1,1,0,1"))
                           (rule "add_zero_right" (formula "28") (term "1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                           (rule "array2seqDef" (formula "28") (term "1,1") (inst "u=u"))
                           (rule "pullOutSelect" (formula "28") (term "1,2,1,0") (inst "selectSK=arr_1369"))
                           (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                           (rule "applyEqReverse" (formula "29") (term "1,2,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "28") (term "1,2,1,1") (inst "selectSK=arr_1370"))
                           (rule "applyEq" (formula "29") (term "0,1,1,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "replaceKnownSelect_taclet100000100_0" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100000100_1" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "29") (term "1,2,1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "28") (term "0"))
                           (branch "result_0.length >= 1 + iv_19 TRUE"
                              (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "eqSeqDef" (formula "29") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "29") (term "0,0"))
                              (rule "eqSymm" (formula "29") (term "0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,0"))
                              (rule "mul_literals" (formula "29") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "29") (term "1,1,0"))
                              (rule "getOfSeqDef" (formula "29") (term "0,1,0,1"))
                              (rule "castDel" (formula "29") (term "2,0,1,0,1"))
                              (rule "castDel" (formula "29") (term "1,0,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "29") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "29") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "29") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,1,0,0,1"))
                              (rule "times_zero_2" (formula "29") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "29") (term "1,1,1,0,0,1"))
                              (rule "lenOfSeqDef" (formula "29") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                              (rule "times_zero_2" (formula "29") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "allRight" (formula "29") (inst "sk=iv_20"))
                              (rule "impRight" (formula "29"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "31") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "getOfSeqDef" (formula "31") (term "0"))
                              (rule "castDel" (formula "31") (term "1,0"))
                              (rule "castDel" (formula "31") (term "2,0"))
                              (rule "add_zero_right" (formula "31") (term "0,2,1,0"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,0,0"))
                              (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "31") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "31") (term "1,1") (inst "selectSK=arr_1371"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_1372"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0100000100_4" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "ifthenelse_split" (formula "7") (term "0"))
                              (branch "result_0.length >= 1 TRUE"
                                 (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "arrayLengthIsAShort" (formula "20") (term "1,1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "allLeft" (formula "21") (inst "t=iv_19"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_1373"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "34") (term "0") (ifseqformula "16") (ifseqformula "39"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "9") (ifseqformula "34"))
                                 (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "16") (ifseqformula "34"))
                                 (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "23") (ifseqformula "34"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch " result_0[iv_19]@anon_heap_sort<<anonHeapFunction>>.length >= 1 TRUE"
                                    (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "5")))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " (result_0[iv_19]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "closeTrue" (formula "36"))
                                    )
                                    (branch " (result_0[iv_19]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " result_0[iv_19].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch " result_0[iv_19].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "36"))
                                          (rule "close" (formula "34") (ifseqformula "16"))
                                       )
                                    )
                                 )
                                 (branch " result_0[iv_19]@anon_heap_sort<<anonHeapFunction>>.length >= 1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "34"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                              (branch "result_0.length >= 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "33"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                           )
                           (branch "result_0.length >= 1 + iv_19 FALSE"
                              (rule "eqSymm" (formula "29"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
                              (rule "closeTrue" (formula "29"))
                           )
                        )
                     )
                     (branch " array2seq2d(heapAfter_sort_0, result_1) = array2seq2d(heapAfter_sort_0, result_0) FALSE"
                        (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "25") (userinteraction))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "notRight" (formula "34") (userinteraction))
                        (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_sort_0, arr1)
= array2seq2d(heapAfter_sort, arr1)") (userinteraction))
                        (branch "CUT: array2seq2d(heapAfter_sort_0, arr1) = array2seq2d(heapAfter_sort, arr1) TRUE"
                           (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "1") (userinteraction))
                           (rule "eqSymm" (formula "28") (userinteraction))
                           (rule "seqPermTrans" (formula "15") (ifseqformula "2") (userinteraction))
                           (rule "seqPermSym" (formula "23") (userinteraction))
                           (rule "seqPermTrans" (formula "15") (ifseqformula "23") (userinteraction))
                           (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_sort, result_0)
= array2seq2d(heapAfter_sort_0, result_0)") (userinteraction))
                           (branch "CUT: array2seq2d(heapAfter_sort, result_0) = array2seq2d(heapAfter_sort_0, result_0) TRUE"
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "1") (userinteraction))
                              (rule "cut" (inst "cutFormula=\\forall int i;
  (  leq(i, Z(neglit(1(#))))
   | geq(i, add(Z(neglit(1(#))), length(result_0)))
   | leq(verif.selectvoting.system.core.Utils::compare(heapAfter_sort_0,
                                                       byte[]::select(heapAfter_sort_0,
                                                                      result_0,
                                                                      arr(i)),
                                                       byte[]::select(heapAfter_sort_0,
                                                                      result_0,
                                                                      arr(add(Z(1(#)),
                                                                              i)))),
         Z(0(#))))") (userinteraction))
                              (branch "CUT: forall int i; ( i <= -1 | i >= -1 + result_0.length | verif.selectvoting.system.core.Utils.compare(result_0[i]@heapAfter_sort_0, result_0[ 1 + i]@heapAfter_sort_0) @heapAfter_sort_0 <= 0) TRUE"
                                 (rule "cut" (inst "cutFormula=  verif.selectvoting.system.core.MixServer::sortedPermIsEqual(heapAfter_sort_0,
                                                              heapAfter_sort_0,
                                                              result_0,
                                                              result_1)
= TRUE") (userinteraction))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer::sortedPermIsEqual(heapAfter_sort_0, heapAfter_sort_0, result_0, result_1) = TRUE TRUE"
                                    (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "1") (term "0") (inst "i=i") (inst "i_0=i_0") (userinteraction))
                                    (rule "impLeft" (formula "1") (userinteraction))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "18")))
                                       (rule "wellFormedAnonEQ" (formula "33") (term "1") (ifseqformula "25"))
                                       (rule "wellFormedAnonEQ" (formula "33") (term "0,1") (ifseqformula "16"))
                                       (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0,1,0"))
                                       (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0,0"))
                                       (rule "eqSymm" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_left" (formula "33") (term "1,1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "7")) (ifInst ""  (formula "15")))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,2,2,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,2,2,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "34") (term "1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1"))
                                       (rule "nonNull" (formula "32") (term "0,1,1") (inst "i=i"))
                                       (rule "greater_literals" (formula "32") (term "0,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "37")))
                                       (rule "sub_literals" (formula "32") (term "2,1,0,0,1,1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,1"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1"))
                                       (rule "nonNull" (formula "32") (term "1,1,1") (inst "i=i"))
                                       (rule "sub_literals" (formula "32") (term "2,1,0,1,1,1,1,1"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")))
                                       (rule "greater_literals" (formula "32") (term "0,1,1,1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,1"))
                                       (rule "nnf_imp2or" (formula "33") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "32") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "32") (term "0,0,1"))
                                       (rule "nnf_imp2or" (formula "32") (term "0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,1"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "nnf_imp2or" (formula "32") (term "0,1,1"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                                       (rule "andRight" (formula "32"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "32") (inst "sk=i_15"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "notRight" (formula "34"))
                                          (rule "inEqSimp_leqRight" (formula "33"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1368"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "39"))
                                          (rule "arrayLengthNotNegative" (formula "5") (term "1,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "31") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "arrayLengthNotNegative" (formula "31") (term "1,1,1,0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                          (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "lenNonNegative" (formula "37") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "lenNonNegative" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "cut_direct" (formula "39") (term "0"))
                                          (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "allRight" (formula "40") (inst "sk=iv_18"))
                                             (rule "orRight" (formula "40"))
                                             (rule "orRight" (formula "40"))
                                             (rule "inEqSimp_leqRight" (formula "40"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "29") (inst "t=i_15"))
                                             (rule "replaceKnownSelect_taclet00000010000100_1" (formula "29") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000010000100_2" (formula "29") (term "0,0,0,0"))
                                             (rule "narrowSelectArrayType" (formula "29") (term "0,0,0,0") (ifseqformula "22") (ifseqformula "46"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                             (rule "leq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                          (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "allLeft" (formula "27") (inst "t=i_15"))
                                             (rule "replaceKnownSelect_taclet00000010000100_1" (formula "27") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000010000100_2" (formula "27") (term "0,0,0,0"))
                                             (rule "narrowSelectArrayType" (formula "27") (term "0,0,0,0") (ifseqformula "20") (ifseqformula "44"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                             (rule "leq_literals" (formula "27") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "32") (inst "sk=i_14"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "notRight" (formula "34"))
                                          (rule "inEqSimp_leqRight" (formula "33"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1367"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "26") (ifseqformula "38"))
                                          (rule "arrayLengthNotNegative" (formula "5") (term "1,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "arrayLengthNotNegative" (formula "32") (term "1,1,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                          (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "allRight" (formula "38") (inst "sk=iv_17"))
                                             (rule "orRight" (formula "38"))
                                             (rule "orRight" (formula "38"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "39"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "allLeft" (formula "36") (inst "t=i_14"))
                                             (rule "replaceKnownSelect_taclet10000010000100_0" (formula "36") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000010000100_1" (formula "36") (term "0,0,0,0"))
                                             (rule "narrowSelectArrayType" (formula "36") (term "0,0,0,0") (ifseqformula "30") (ifseqformula "44"))
                                             (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "36") (term "0,0,1"))
                                             (rule "leq_literals" (formula "36") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "36") (term "0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "closeFalse" (formula "36"))
                                          )
                                          (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "allLeft" (formula "33") (inst "t=i_14"))
                                             (rule "replaceKnownSelect_taclet10000010000100_0" (formula "33") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000010000100_1" (formula "33") (term "0,0,0,0"))
                                             (rule "narrowSelectArrayType" (formula "33") (term "0,0,0,0") (ifseqformula "27") (ifseqformula "41"))
                                             (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "34") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer::sortedPermIsEqual(heapAfter_sort_0, heapAfter_sort_0, result_0, result_1) = TRUE FALSE"
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "31"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "notLeft" (formula "31"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "18") (term "1") (ifseqformula "3"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1"))
                                    (rule "nnf_imp2or" (formula "32") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0,0,1"))
                                    (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "31") (term "0") (inst "i=i") (inst "i_0=i_0"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                    (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "24"))
                                    (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                    (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "30") (term "1,1") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "6")) (ifInst ""  (formula "13")))
                                    (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "30") (term "1,1,1,0,0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "1,1,1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,2,2,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,2,2,0,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1,1"))
                                    (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "nonNull" (formula "30") (term "0,1,1") (inst "i=i"))
                                    (rule "greater_literals" (formula "30") (term "0,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "37")))
                                    (rule "sub_literals" (formula "30") (term "2,1,0,0,1,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,1"))
                                    (rule "nonNull" (formula "30") (term "1,1,1") (inst "i=i"))
                                    (rule "greater_literals" (formula "30") (term "0,1,1,1,1"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                    (rule "sub_literals" (formula "30") (term "2,1,0,1,1,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,1"))
                                    (rule "nnf_imp2or" (formula "30") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "nnf_imp2or" (formula "30") (term "0,1,1"))
                                    (rule "nnf_imp2or" (formula "30") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                    (rule "andRight" (formula "30"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "30") (inst "sk=i_13"))
                                       (rule "orRight" (formula "30"))
                                       (rule "notRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1366"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "16") (ifseqformula "39"))
                                       (rule "arrayLengthNotNegative" (formula "29") (term "1,1,1,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthNotNegative" (formula "22") (term "1,1,1,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                       (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "lenNonNegative" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "cut_direct" (formula "38") (term "0"))
                                       (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "allRight" (formula "39") (inst "sk=iv_16"))
                                          (rule "orRight" (formula "39"))
                                          (rule "orRight" (formula "39"))
                                          (rule "inEqSimp_geqRight" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "40"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "allLeft" (formula "28") (inst "t=i_13"))
                                          (rule "replaceKnownSelect_taclet0100010000100_1" (formula "28") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0100010000100_2" (formula "28") (term "0,0,0,0"))
                                          (rule "narrowSelectArrayType" (formula "28") (term "0,0,0,0") (ifseqformula "20") (ifseqformula "46"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "28") (term "0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "allLeft" (formula "25") (inst "t=i_13"))
                                          (rule "replaceKnownSelect_taclet0100010000100_1" (formula "25") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0100010000100_2" (formula "25") (term "0,0,0,0"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,0,0") (ifseqformula "17") (ifseqformula "43"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "30") (inst "sk=i_12"))
                                       (rule "orRight" (formula "30"))
                                       (rule "notRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1365"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "18"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "25") (ifseqformula "38"))
                                       (rule "arrayLengthNotNegative" (formula "29") (term "1,1,1,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthNotNegative" (formula "22") (term "1,1,1,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "31") (term "1,1,1,0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                       (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "cut_direct" (formula "37") (term "0"))
                                       (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "allRight" (formula "38") (inst "sk=iv_15"))
                                          (rule "orRight" (formula "38"))
                                          (rule "orRight" (formula "38"))
                                          (rule "inEqSimp_leqRight" (formula "38"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "35") (inst "t=i_12"))
                                          (rule "replaceKnownSelect_taclet1100010000100_0" (formula "35") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1100010000100_1" (formula "35") (term "0,0,0,0"))
                                          (rule "narrowSelectArrayType" (formula "35") (term "0,0,0,0") (ifseqformula "29") (ifseqformula "44"))
                                          (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "35") (term "0,0,1"))
                                          (rule "leq_literals" (formula "35") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "35") (term "0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "closeFalse" (formula "35"))
                                       )
                                       (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "allLeft" (formula "32") (inst "t=i_12"))
                                          (rule "replaceKnownSelect_taclet1100010000100_0" (formula "32") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1100010000100_1" (formula "32") (term "0,0,0,0"))
                                          (rule "narrowSelectArrayType" (formula "32") (term "0,0,0,0") (ifseqformula "26") (ifseqformula "41"))
                                          (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                          (rule "leq_literals" (formula "32") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "32") (term "0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "closeFalse" (formula "32"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: forall int i; ( i <= -1 | i >= -1 + result_0.length | verif.selectvoting.system.core.Utils.compare(result_0[i]@heapAfter_sort_0, result_0[ 1 + i]@heapAfter_sort_0) @heapAfter_sort_0 <= 0) FALSE"
                                 (rule "allRight" (formula "31") (inst "sk=i_8") (userinteraction))
                                 (rule "orRight" (formula "31") (userinteraction))
                                 (rule "orRight" (formula "31") (userinteraction))
                                 (builtin "Evaluate Query" (formula "33") (term "0") (newnames "a1_0,a2_0,callee,queryResult,res_compare"))
                                 (rule "notLeft" (formula "1") (userinteraction))
                                 (rule "variableDeclaration" (formula "31") (term "1") (newnames "queryResult") (userinteraction))
                                 (builtin "Use Operation Contract" (formula "31") (newnames "heapBefore_compare,result_3,exc_3") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                 (branch "Post (compare)"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "assignment" (formula "32") (term "1") (userinteraction))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "methodCallEmpty" (formula "32") (term "1") (userinteraction))
                                    (rule "emptyModality" (formula "32") (term "1") (userinteraction))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "notRight" (formula "32") (userinteraction))
                                    (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort_0,byte[]_select(heapAfter_sort_0,result_0,arr(i_8)),byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8))))_10010000100_0" (formula "35") (term "0") (userinteraction))
                                    (rule "applyEq" (formula "32") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
                                    (rule "replace_known_right" (formula "32") (term "1,0,1") (ifseqformula "35") (userinteraction))
                                    (rule "andLeft" (formula "32") (userinteraction))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                    (rule "notLeft" (formula "33") (userinteraction))
                                    (rule "orRight" (formula "33") (userinteraction))
                                    (rule "allLeft" (formula "20") (inst "t=i_8") (userinteraction))
                                    (rule "orLeft" (formula "20") (userinteraction))
                                    (branch "i_8 <= -1 | i_8 >= -1 + result_0.length"
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "eqSymm" (formula "35") (term "1,0,0"))
                                       (rule "eqSymm" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "eqSymm" (formula "34") (term "1,0,1,1,0"))
                                       (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch
                                       (builtin "Evaluate Query" (formula "20") (term "0") (newnames "a1_1,a2_1,callee,queryResult_0,res_compare_0"))
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "variableDeclaration" (formula "34") (term "1") (newnames "queryResult_0") (userinteraction))
                                       (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_compare_0,result_4,exc_4") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                       (branch "Post (compare)"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "assignment" (formula "35") (term "1") (userinteraction))
                                          (rule "methodCallEmpty" (formula "35") (term "1,1") (userinteraction))
                                          (rule "emptyModality" (formula "35") (term "1,1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35") (userinteraction))
                                          (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "21") (term "0") (userinteraction))
                                          (rule "replace_known_left" (formula "35") (term "1,0,1") (ifseqformula "21") (userinteraction))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "andLeft" (formula "35") (userinteraction))
                                          (rule "andLeft" (formula "36") (userinteraction))
                                          (builtin "Evaluate Query" (formula "36") (term "1,1,0,0,0") (newnames "a,b,callee,queryResult_1,res_min"))
                                          (rule "notLeft" (formula "1") (userinteraction))
                                          (rule "variableDeclaration" (formula "37") (term "1") (newnames "queryResult_1") (userinteraction))
                                          (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_min,result_5,exc_5") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                          (branch "Post (min)"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "assignment" (formula "38") (term "1") (userinteraction))
                                             (rule "methodCallEmpty" (formula "38") (term "1,1") (userinteraction))
                                             (rule "emptyModality" (formula "38") (term "1,1") (userinteraction))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "notRight" (formula "38") (userinteraction))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8)))))_01010010000100_2" (formula "37") (term "1,1,0,0,0") (userinteraction))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8)))))_01010010000100_2" (formula "37") (term "1,1,0,0,0,1") (userinteraction))
                                             (builtin "Evaluate Query" (formula "41") (term "1,1,0,0") (newnames "a_0,b_0,callee,queryResult_2,res_min_0"))
                                             (rule "notLeft" (formula "1") (userinteraction))
                                             (rule "variableDeclaration" (formula "41") (term "1") (newnames "queryResult_2") (userinteraction))
                                             (builtin "Use Operation Contract" (formula "41") (newnames "heapBefore_min_0,result_6,exc_6") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                             (branch "Post (min)"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "assignment" (formula "42") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "methodCallEmpty" (formula "42") (term "1") (userinteraction))
                                                (rule "emptyModality" (formula "42") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42") (userinteraction))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort_0,length(byte[]_select(heapAfter_sort_0,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8)))))_001010010000100_3" (formula "45") (term "1,1,0,0") (userinteraction))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort_0,length(byte[]_select(heapAfter_sort_0,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8)))))_001010010000100_3" (formula "46") (term "1,1,0,0,0") (userinteraction))
                                                (rule "orLeft" (formula "38") (userinteraction))
                                                (branch "exists int i; ( 0 <= i & i < res_min & ( result_0[i_8][i]@heapAfter_sort < result_0[1 + i_8][i]@heapAfter_sort & forall int j; ( 0 <= j & j < i -> result_0[i_8][j]@heapAfter_sort = result_0[1 + i_8][j]@heapAfter_sort)))"
                                                   (rule "exLeft" (formula "38") (inst "sk=i_11") (userinteraction))
                                                   (rule "instEx" (formula "38") (term "1,0,0") (ifseqformula "45") (userinteraction))
                                                   (rule "andRight" (formula "45") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "eqSymm" (formula "46") (term "1"))
                                                      (rule "eqSymm" (formula "47") (term "0,1"))
                                                      (rule "eqSymm" (formula "50") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "35"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "notLeft" (formula "35"))
                                                      (rule "eqSymm" (formula "46") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "43") (term "0,1"))
                                                      (rule "eqSymm" (formula "42") (term "1"))
                                                      (rule "eqSymm" (formula "5"))
                                                      (rule "eqSymm" (formula "43") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "49") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "eqSymm" (formula "40") (term "1,0"))
                                                      (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_leqRight" (formula "53"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "52"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "53"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "52") (term "0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "46") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "49") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "53") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "46") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "49") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "26") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "54") (term "1") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "49") (term "1,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "6"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "mul_literals" (formula "4") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "53") (inst "iv=iv"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "48") (term "0,0,1") (inst "selectSK=arr_1243"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "52") (term "1,1,1,0,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,1,1") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "53") (term "1,1,1,0,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "52") (term "1,1,1,0,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "48"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0") (ifseqformula "21"))
                                                      (rule "replace_known_left" (formula "48") (term "1,0,0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                      (rule "applyEq" (formula "45") (term "0,0,1") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "43") (term "1,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "42") (term "1,1,1") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "46") (term "0,1,0,1,1") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                                      (rule "applyEqReverse" (formula "53") (term "0,1,1") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "52") (term "1,1,1,0,1,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "49") (term "0,0,1") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "53") (term "1,1,1,0,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "50") (term "0,1,0,1,1") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "52") (term "1,1,1,0,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "49") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "50") (term "0,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "45") (term "0,0,1") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "43") (term "1,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,1,1,0") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "42") (term "1,1,1") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,1,0,1,1") (ifseqformula "48"))
                                                      (rule "applyEqReverse" (formula "45") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "pullOutSelect" (formula "49") (term "0,0,0,1") (inst "selectSK=arr_1244"))
                                                      (rule "applyEq" (formula "52") (term "1,0,1,0,1,1,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0,1,1") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "53") (term "1,0,1,0,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "52") (term "1,0,0,1,0") (ifseqformula "49"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0") (ifseqformula "21"))
                                                      (rule "eqSymm" (formula "52") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "50") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "53") (term "1,0,0"))
                                                      (rule "replace_known_left" (formula "49") (term "1,0,0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "59")))
                                                      (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "46") (term "0,0,0,1,1") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "46") (term "0,0,0,1") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "45") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                                      (rule "applyEqReverse" (formula "52") (term "1,1,1,0,1,1,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "53") (term "1,1,1,0,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "53") (term "0,0,1") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "50") (term "0,1,0,1,1") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "52") (term "1,0,0,1,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "50") (term "0,0,0,1") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "43") (term "1,0,1,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,0,0,1,1") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,0,0,1") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "49"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "hideAuxiliaryEq" (formula "49"))
                                                      (rule "eqSymm" (formula "51") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "52") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "49") (term "0,1,1"))
                                                      (rule "pullOutSelect" (formula "42") (term "1,1") (inst "selectSK=arr_1245"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_1246"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "nnf_imp2or" (formula "55") (term "0,1"))
                                                      (rule "nnf_ex2all" (formula "53"))
                                                      (rule "nnf_imp2or" (formula "46") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_imp2or" (formula "54") (term "0,0"))
                                                      (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "55") (term "0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1"))
                                                      (rule "mul_literals" (formula "55") (term "1,0,0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,0,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                                                      (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,0"))
                                                      (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                      (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                      (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "arrayLengthIsAShort" (formula "36") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "11") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "arrayLengthNotNegative" (formula "35") (term "1,1,1,0,0"))
                                                      (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                      (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "12"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "cut_direct" (formula "57") (term "0"))
                                                      (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "allRight" (formula "58") (inst "sk=iv_11"))
                                                         (rule "orRight" (formula "58"))
                                                         (rule "orRight" (formula "58"))
                                                         (rule "inEqSimp_geqRight" (formula "59"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "59"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "equiv_left" (formula "56"))
                                                         (branch "Case 1"
                                                            (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "allRight" (formula "60") (inst "sk=j_64"))
                                                            (rule "orRight" (formula "60"))
                                                            (rule "orRight" (formula "60"))
                                                            (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_geqRight" (formula "61"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "61"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "58") (term "1") (ifseqformula "59"))
                                                            (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "59"))
                                                            (rule "applyEq" (formula "59") (term "0") (ifseqformula "55"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "55"))
                                                            (rule "applyEq" (formula "56") (term "1,0,1,1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "inEqSimp_leqRight" (formula "60"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "60") (term "1,0,1,1") (ifseqformula "56"))
                                                            (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "59"))
                                                            (rule "applyEqRigid" (formula "3") (term "0,1,0") (ifseqformula "59"))
                                                            (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "59"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "59"))
                                                            (rule "applyEq" (formula "12") (term "1") (ifseqformula "59"))
                                                            (rule "applyEq" (formula "60") (term "1,0,1") (ifseqformula "59"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "notLeft" (formula "60"))
                                                            (rule "inEqSimp_leqRight" (formula "60"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "60"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "7"))
                                                            (rule "andLeft" (formula "49"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "49") (term "1,0"))
                                                            (rule "add_literals" (formula "49") (term "0"))
                                                            (rule "leq_literals" (formula "49"))
                                                            (rule "closeFalse" (formula "49"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "inEqSimp_geqRight" (formula "57"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "andLeft" (formula "54"))
                                                            (rule "notLeft" (formula "55"))
                                                            (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "57")))
                                                            (rule "applyEq" (formula "56") (term "0") (ifseqformula "54"))
                                                            (rule "eqSymm" (formula "56"))
                                                            (rule "applyEq" (formula "57") (term "0") (ifseqformula "54"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "54"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "56"))
                                                            (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "56"))
                                                            (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "56"))
                                                            (rule "applyEq" (formula "10") (term "1") (ifseqformula "56"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                                            (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "57") (term "0,0"))
                                                            (rule "leq_literals" (formula "57") (term "0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "48"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                      )
                                                      (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "false_right" (formula "58"))
                                                         (rule "equiv_left" (formula "53"))
                                                         (branch "Case 1"
                                                            (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "allRight" (formula "57") (inst "sk=j_63"))
                                                            (rule "orRight" (formula "57"))
                                                            (rule "orRight" (formula "57"))
                                                            (rule "inEqSimp_geqRight" (formula "58"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "58"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "56"))
                                                            (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "56"))
                                                            (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                                                            (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "56"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "52"))
                                                            (rule "applyEqRigid" (formula "3") (term "1,1,0,0") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "57") (term "1,0,1,1") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "notLeft" (formula "57"))
                                                            (rule "inEqSimp_leqRight" (formula "57"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "54") (term "1,0,1,1") (ifseqformula "57"))
                                                            (rule "applyEq" (formula "56") (term "1") (ifseqformula "53"))
                                                            (rule "applyEqRigid" (formula "54") (term "1,1,0") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "57") (term "1") (ifseqformula "53"))
                                                            (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "54") (term "1,0,1,1") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "notLeft" (formula "54"))
                                                            (rule "inEqSimp_leqRight" (formula "57"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "46"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "54"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "54"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "notLeft" (formula "50"))
                                                            (rule "inEqSimp_geqRight" (formula "54"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "andLeft" (formula "51"))
                                                            (rule "notLeft" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "54")))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "51"))
                                                            (rule "eqSymm" (formula "53"))
                                                            (rule "applyEq" (formula "54") (term "0") (ifseqformula "51"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "51"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "applyEqRigid" (formula "2") (term "1,1,0,0") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "53"))
                                                            (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "53"))
                                                            (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "53"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                                            (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                            (rule "add_literals" (formula "54") (term "0,0"))
                                                            (rule "leq_literals" (formula "54") (term "0"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "false_right" (formula "54"))
                                                            (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0"))
                                                            (rule "add_literals" (formula "45") (term "0"))
                                                            (rule "leq_literals" (formula "45"))
                                                            (rule "closeFalse" (formula "45"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "45") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "andLeft" (formula "38"))
                                                         (rule "andLeft" (formula "38"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "eqSymm" (formula "50") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "5"))
                                                         (rule "eqSymm" (formula "35"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "eqSymm" (formula "43") (term "0,1"))
                                                         (rule "eqSymm" (formula "46") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "43") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "eqSymm" (formula "49") (term "1,0,1,1,0"))
                                                         (rule "eqSymm" (formula "46") (term "0,1"))
                                                         (rule "eqSymm" (formula "45") (term "1"))
                                                         (rule "eqSymm" (formula "40") (term "1,0"))
                                                         (rule "inEqSimp_ltRight" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "52"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "52"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "53"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "50") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "49") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "53") (term "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "46") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "53") (term "1") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "25") (term "1") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "49") (term "1,0,1") (ifseqformula "5"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "53") (inst "iv=iv"))
                                                         (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1"))
                                                         (rule "pullOutSelect" (formula "52") (term "1,0,1,0,0") (inst "selectSK=arr_1247"))
                                                         (rule "applyEq" (formula "50") (term "0,0,0,1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "50") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "52") (term "1,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "52") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                         (rule "eqSymm" (formula "53") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "50") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "52") (term "1,0,1,1,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                         (rule "applyEq" (formula "47") (term "0,0,0,1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "47") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                                         (rule "applyEqReverse" (formula "50") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,1,0,1,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "53") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "52") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "53") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "52") (term "1,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0,1,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "44") (term "1,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "eqSymm" (formula "46") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "4"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "45") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "49") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1,0"))
                                                         (rule "pullOutSelect" (formula "45") (term "0,0,1") (inst "selectSK=arr_1248"))
                                                         (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "47") (term "0,0,0,1,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "45"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                                         (rule "applyEqReverse" (formula "46") (term "0,0,1") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "43") (term "1,0,1,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0,1,1") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "45"))
                                                         (rule "hideAuxiliaryEq" (formula "45"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "eqSymm" (formula "46") (term "0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "42"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                         (rule "pullOutSelect" (formula "48") (term "0,0,1") (inst "selectSK=arr_1249"))
                                                         (rule "applyEq" (formula "52") (term "1,0,0,1,0") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "53") (term "1,0,1,0,0") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "52") (term "1,0,1,0,1,1,0") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "50") (term "0,0,0,1,1") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                         (rule "replaceKnownSelect_taclet0100001010010000100_7" (formula "48") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100001010010000100_8" (formula "48") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0") (ifseqformula "21"))
                                                         (rule "eqSymm" (formula "53") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "52") (term "1,0,1,1,0"))
                                                         (rule "eqSymm" (formula "50") (term "0,1,1"))
                                                         (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "22")))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "52") (term "1,1,1,0,1,1,0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,1,0,1,1") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "53") (term "0,0,1") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "52") (term "1,0,0,1,0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "53") (term "1,1,1,0,0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,1") (ifseqformula "48"))
                                                         (rule "hideAuxiliaryEq" (formula "48"))
                                                         (rule "inEqSimp_commuteLeq" (formula "48") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,0"))
                                                         (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_1250"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                         (rule "mul_literals" (formula "43") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                         (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_1251"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replaceKnownSelect_taclet0100001010010000100_11" (formula "4") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "22"))
                                                         (rule "inEqSimp_commuteLeq" (formula "5"))
                                                         (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=arr_1252"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "22"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_1253"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replaceKnownSelect_taclet0100001010010000100_13" (formula "5") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,1,0,0") (ifseqformula "23"))
                                                         (rule "nnf_imp2or" (formula "57") (term "0,1"))
                                                         (rule "nnf_imp2or" (formula "47") (term "0"))
                                                         (rule "nnf_ex2all" (formula "55"))
                                                         (rule "nnf_imp2or" (formula "56") (term "0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "57") (term "0,0,1"))
                                                         (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1"))
                                                         (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,1"))
                                                         (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "57") (term "1,0,0,0,1"))
                                                         (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,0"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "1,0,0,0,0"))
                                                         (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                         (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                         (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "arrayLengthNotNegative" (formula "37") (term "1,1,1,0,0"))
                                                         (rule "arrayLengthNotNegative" (formula "30") (term "1,1,1,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "31") (term "1,1,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "arrayLengthIsAShort" (formula "40") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "13") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                         (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                         (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "13"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "lenNonNegative" (formula "59") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "lenNonNegative" (formula "60") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "cut_direct" (formula "61") (term "0"))
                                                         (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "allRight" (formula "62") (inst "sk=iv_12"))
                                                            (rule "orRight" (formula "62"))
                                                            (rule "orRight" (formula "62"))
                                                            (rule "inEqSimp_geqRight" (formula "63"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "63"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "60") (term "0,0,1"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "true_left" (formula "60"))
                                                            (rule "arrayLengthNotNegative" (formula "60") (term "0,0,1"))
                                                            (rule "equiv_left" (formula "56"))
                                                            (branch "Case 1"
                                                               (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "allRight" (formula "64") (inst "sk=j_66"))
                                                               (rule "orRight" (formula "64"))
                                                               (rule "orRight" (formula "64"))
                                                               (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "inEqSimp_geqRight" (formula "65"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "65"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "62") (term "0") (ifseqformula "59"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "applyEq" (formula "58") (term "1") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "60") (term "1,0,1,1") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "notLeft" (formula "60"))
                                                               (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "notLeft" (formula "63"))
                                                               (rule "inEqSimp_leqRight" (formula "64"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "applyEq" (formula "15") (term "1") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "64") (term "1,0,1") (ifseqformula "60"))
                                                               (rule "applyEqRigid" (formula "64") (term "1,0") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "false_right" (formula "64"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1282"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                                                               (rule "eqSymm" (formula "65"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1283"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=arr_1284"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1285"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "ifthenelse_split" (formula "57") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "57"))
                                                                  (rule "applyEqReverse" (formula "59") (term "1,1") (ifseqformula "57"))
                                                                  (rule "hideAuxiliaryEq" (formula "57"))
                                                                  (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "66")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "66")))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "ifthenelse_negated" (formula "14") (term "0"))
                                                                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "56") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "56"))
                                                                     (rule "notLeft" (formula "57"))
                                                                     (rule "notLeft" (formula "56"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "65")))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "64")))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "14") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "9") (term "1,0"))
                                                                     (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "notLeft" (formula "40"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1292"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "31") (ifseqformula "74"))
                                                                     (rule "allLeft" (formula "40") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "notLeft" (formula "40"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1293"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "31") (ifseqformula "74"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "39") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "true_left" (formula "39"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,0,1,0"))
                                                                     (rule "seqGetAlphaCast" (formula "69") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "69") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "13") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "14"))
                                                                        (rule "hideAuxiliaryEq" (formula "14"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "eqSymm" (formula "67"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "14"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "14"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                                        (rule "mul_literals" (formula "54") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                                        (rule "arrayLengthIsAShort" (formula "59") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "arrayLengthNotNegative" (formula "59") (term "0"))
                                                                        (rule "applyEq" (formula "59") (term "0") (ifseqformula "60"))
                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                                                                           (builtin "One Step Simplification" (formula "13"))
                                                                           (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                                                           (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "13"))
                                                                           (rule "hideAuxiliaryEq" (formula "13"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "53"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                                           (rule "add_literals" (formula "53") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "53") (term "1,0"))
                                                                           (rule "add_literals" (formula "53") (term "0"))
                                                                           (rule "qeq_literals" (formula "53"))
                                                                           (rule "closeFalse" (formula "53"))
                                                                        )
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "65"))
                                                                           (rule "close" (formula "64") (ifseqformula "30"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "63") (ifseqformula "67"))
                                                                        (rule "close" (formula "63") (ifseqformula "31"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "56"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ex_pull_out3" (formula "9") (term "1,0"))
                                                                     (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "notLeft" (formula "40"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1290"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "31") (ifseqformula "73"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "39") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "true_left" (formula "39"))
                                                                     (rule "allLeft" (formula "40") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "notLeft" (formula "40"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1291"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "31") (ifseqformula "73"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "notRight" (formula "64"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                                                     (rule "hideAuxiliaryEq" (formula "14"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,0,1,0"))
                                                                     (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "67") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "13") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "14"))
                                                                        (rule "hideAuxiliaryEq" (formula "14"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "eqSymm" (formula "65"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "13"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "53") (ifseqformula "13"))
                                                                        (rule "andLeft" (formula "53"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "53"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                                        (rule "add_literals" (formula "53") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "53") (term "1,0"))
                                                                        (rule "add_literals" (formula "53") (term "0"))
                                                                        (rule "leq_literals" (formula "53"))
                                                                        (rule "closeFalse" (formula "53"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "62") (ifseqformula "65"))
                                                                        (rule "close" (formula "62") (ifseqformula "30"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "57"))
                                                                  (rule "applyEqReverse" (formula "59") (term "1,1") (ifseqformula "57"))
                                                                  (rule "hideAuxiliaryEq" (formula "57"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "66"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "56") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "56"))
                                                                     (rule "notLeft" (formula "56"))
                                                                     (rule "notLeft" (formula "56"))
                                                                     (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "56"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                                     (rule "replace_known_right" (formula "14") (term "0,0,1,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "64")))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "14") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "9") (term "1,0"))
                                                                     (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "notLeft" (formula "40"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1288"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "31") (ifseqformula "73"))
                                                                     (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "66") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "notRight" (formula "66"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "67"))
                                                                     (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "13"))
                                                                     (rule "hideAuxiliaryEq" (formula "13"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "14"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "14"))
                                                                     (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                                     (rule "mul_literals" (formula "54") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1289"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "30") (ifseqformula "73"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "38") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "true_left" (formula "38"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,0,1,0"))
                                                                     (rule "seqGetAlphaCast" (formula "68") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "68") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "arrayLengthNotNegative" (formula "59") (term "0"))
                                                                     (rule "applyEq" (formula "59") (term "0") (ifseqformula "60"))
                                                                     (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "true_left" (formula "60"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                                                        (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "13"))
                                                                        (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                                                        (rule "hideAuxiliaryEq" (formula "13"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "53"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                                        (rule "add_literals" (formula "53") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "53") (term "1,0"))
                                                                        (rule "add_literals" (formula "53") (term "0"))
                                                                        (rule "qeq_literals" (formula "53"))
                                                                        (rule "closeFalse" (formula "53"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "67"))
                                                                        (rule "close" (formula "64") (ifseqformula "30"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "56"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ex_pull_out3" (formula "9") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "9") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "9") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "39") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "true_left" (formula "39"))
                                                                     (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "notLeft" (formula "40"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1286"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "31") (ifseqformula "72"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notRight" (formula "65"))
                                                                     (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "14"))
                                                                     (rule "hideAuxiliaryEq" (formula "14"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "65"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "14"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "14"))
                                                                     (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                                     (rule "mul_literals" (formula "54") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1287"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "30") (ifseqformula "72"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notRight" (formula "65"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "13"))
                                                                     (rule "hideAuxiliaryEq" (formula "13"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "53"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                                     (rule "add_literals" (formula "53") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "53") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "53") (term "0"))
                                                                     (rule "qeq_literals" (formula "53"))
                                                                     (rule "closeFalse" (formula "53"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "false_right" (formula "64"))
                                                               (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "inEqSimp_geqRight" (formula "61"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "andLeft" (formula "57"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "57"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "59") (term "0") (ifseqformula "57"))
                                                               (rule "applyEq" (formula "57") (term "0") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "61") (term "0") (ifseqformula "60"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "57"))
                                                               (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "57"))
                                                               (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "57"))
                                                               (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "57"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "61") (term "0,0"))
                                                               (rule "leq_literals" (formula "61") (term "0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "false_right" (formula "61"))
                                                               (rule "ifthenelse_split" (formula "52") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "52"))
                                                                  (rule "notLeft" (formula "53"))
                                                                  (rule "notLeft" (formula "52"))
                                                                  (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "52"))
                                                                  (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "replace_known_right" (formula "10") (term "0,0,1,0,0") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "60")))
                                                                  (rule "ifthenelse_negated" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "52") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "52"))
                                                                     (rule "notLeft" (formula "53"))
                                                                     (rule "notLeft" (formula "52"))
                                                                     (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "52"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "52"))
                                                                     (rule "hideAuxiliaryEq" (formula "52"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "60")))
                                                                     (rule "ifthenelse_negated" (formula "11") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "6") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1280"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "69"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1281"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "69"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "36") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "11"))
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "12"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                        (rule "seqGetAlphaCast" (formula "65") (term "0"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "seqGetAlphaCast" (formula "65") (term "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "ex_pull_out3" (formula "6") (term "0"))
                                                                        (rule "cnf_rightDist" (formula "6") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "6") (term "1,0,0"))
                                                                        (rule "commute_or" (formula "6") (term "0,1,0,0"))
                                                                        (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "6") (term "1,0,0,0"))
                                                                        (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                                        (rule "commute_or" (formula "6") (term "0,1,0,0,0"))
                                                                        (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                                                           (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                           (rule "hideAuxiliaryEq" (formula "12"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "52"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                                           (rule "add_literals" (formula "52") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "52") (term "1,0"))
                                                                           (rule "add_literals" (formula "52") (term "0"))
                                                                           (rule "qeq_literals" (formula "52"))
                                                                           (rule "closeFalse" (formula "52"))
                                                                        )
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "60") (ifseqformula "61"))
                                                                           (rule "close" (formula "60") (ifseqformula "28"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "62"))
                                                                        (rule "close" (formula "59") (ifseqformula "28"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "52"))
                                                                     (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "52"))
                                                                     (rule "hideAuxiliaryEq" (formula "52"))
                                                                     (rule "ex_pull_out3" (formula "6") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1278"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1279"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
                                                                     (rule "hideAuxiliaryEq" (formula "12"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "36") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "ex_pull_out3" (formula "7") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "7") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "7") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                        (rule "hideAuxiliaryEq" (formula "12"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "12"))
                                                                        (rule "andLeft" (formula "52"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "52"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                                        (rule "add_literals" (formula "52") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "52") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "52") (term "0"))
                                                                        (rule "leq_literals" (formula "52"))
                                                                        (rule "closeFalse" (formula "52"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "61"))
                                                                        (rule "close" (formula "59") (ifseqformula "28"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "52"))
                                                                  (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "52") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "52"))
                                                                     (rule "notLeft" (formula "53"))
                                                                     (rule "notLeft" (formula "52"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "52"))
                                                                     (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "52"))
                                                                     (rule "hideAuxiliaryEq" (formula "52"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "60")))
                                                                     (rule "ifthenelse_negated" (formula "11") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "6") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1276"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "36") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1277"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                                     (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "11"))
                                                                     (rule "hideAuxiliaryEq" (formula "11"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "12"))
                                                                     (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                                     (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "7") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "7") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "7") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                                                     (rule "seqGetAlphaCast" (formula "64") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "64") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                        (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                                                        (rule "hideAuxiliaryEq" (formula "12"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "52"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                                        (rule "add_literals" (formula "52") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "52") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "52") (term "0"))
                                                                        (rule "qeq_literals" (formula "52"))
                                                                        (rule "closeFalse" (formula "52"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "60") (ifseqformula "62"))
                                                                        (rule "close" (formula "60") (ifseqformula "28"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "52"))
                                                                     (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "52"))
                                                                     (rule "hideAuxiliaryEq" (formula "52"))
                                                                     (rule "ex_pull_out3" (formula "6") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "36") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1274"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "67"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
                                                                     (rule "hideAuxiliaryEq" (formula "12"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1275"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "28") (ifseqformula "67"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "notRight" (formula "61"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                     (rule "hideAuxiliaryEq" (formula "12"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "12"))
                                                                     (rule "andLeft" (formula "52"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "52"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                                     (rule "add_literals" (formula "52") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "52") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "52") (term "0"))
                                                                     (rule "leq_literals" (formula "52"))
                                                                     (rule "closeFalse" (formula "52"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "false_right" (formula "62"))
                                                            (rule "arrayLengthIsAShort" (formula "58") (term "0,0,1"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "arrayLengthNotNegative" (formula "58") (term "0,0,1"))
                                                            (rule "equiv_left" (formula "54"))
                                                            (branch "Case 1"
                                                               (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "allRight" (formula "62") (inst "sk=j_65"))
                                                               (rule "orRight" (formula "62"))
                                                               (rule "orRight" (formula "62"))
                                                               (rule "inEqSimp_geqRight" (formula "63"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "63"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "56") (term "1") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "57"))
                                                               (rule "applyEq" (formula "60") (term "0") (ifseqformula "57"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "applyEq" (formula "58") (term "1,0,1,1") (ifseqformula "57"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "inEqSimp_leqRight" (formula "62"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "applyEq" (formula "62") (term "1,0,1,1") (ifseqformula "58"))
                                                               (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "60"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,1,0") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "57") (term "1") (ifseqformula "60"))
                                                               (rule "applyEqRigid" (formula "6") (term "1,1,0,0") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "13") (term "1") (ifseqformula "60"))
                                                               (rule "applyEqRigid" (formula "62") (term "1,0,1") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "inEqSimp_leqRight" (formula "62"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_1262"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                                                               (rule "eqSymm" (formula "63"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1263"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1264"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1265"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "ifthenelse_split" (formula "55") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "notLeft" (formula "55"))
                                                                  (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "55"))
                                                                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "64")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,1,0,0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "65")))
                                                                  (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "ifthenelse_negated" (formula "12") (term "0"))
                                                                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "54") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "54"))
                                                                     (rule "notLeft" (formula "55"))
                                                                     (rule "notLeft" (formula "54"))
                                                                     (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "54"))
                                                                     (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "54"))
                                                                     (rule "hideAuxiliaryEq" (formula "54"))
                                                                     (rule "replace_known_right" (formula "13") (term "0,0,1,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "62")))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "63")))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_negated" (formula "12") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "7") (term "1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1272"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "72"))
                                                                     (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1273"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "72"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,0,1,0"))
                                                                     (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "12"))
                                                                        (rule "hideAuxiliaryEq" (formula "12"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "eqSymm" (formula "65"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "12"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                        (rule "arrayLengthNotNegative" (formula "57") (term "0"))
                                                                        (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                                                        (rule "arrayLengthIsAShort" (formula "58") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "58"))
                                                                        (rule "true_left" (formula "58"))
                                                                        (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                                                           (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                           (rule "hideAuxiliaryEq" (formula "12"))
                                                                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                                           (rule "add_literals" (formula "51") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "51") (term "1,0"))
                                                                           (rule "add_literals" (formula "51") (term "0"))
                                                                           (rule "qeq_literals" (formula "51"))
                                                                           (rule "closeFalse" (formula "51"))
                                                                        )
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "62") (ifseqformula "63"))
                                                                           (rule "close" (formula "62") (ifseqformula "28"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "61") (ifseqformula "65"))
                                                                        (rule "close" (formula "61") (ifseqformula "29"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "54"))
                                                                     (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "54"))
                                                                     (rule "hideAuxiliaryEq" (formula "54"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ex_pull_out3" (formula "7") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1270"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "71"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1271"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "71"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
                                                                     (rule "hideAuxiliaryEq" (formula "12"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,0,1,0"))
                                                                     (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                        (rule "hideAuxiliaryEq" (formula "12"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "eqSymm" (formula "63"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "11"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "51"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_literals" (formula "11") (term "0"))
                                                                        (rule "leq_literals" (formula "11"))
                                                                        (rule "closeFalse" (formula "11"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "60") (ifseqformula "63"))
                                                                        (rule "close" (formula "60") (ifseqformula "28"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "55"))
                                                                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "54") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "54"))
                                                                     (rule "notLeft" (formula "54"))
                                                                     (rule "notLeft" (formula "54"))
                                                                     (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "54"))
                                                                     (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "54"))
                                                                     (rule "hideAuxiliaryEq" (formula "54"))
                                                                     (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "62")))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                                     (rule "ifthenelse_negated" (formula "12") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "7") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1268"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "71"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1269"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "71"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "notRight" (formula "64"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "12"))
                                                                     (rule "hideAuxiliaryEq" (formula "12"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "64"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "12"))
                                                                     (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                                     (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,0,1,0"))
                                                                     (rule "arrayLengthNotNegative" (formula "57") (term "0"))
                                                                     (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                                                     (rule "arrayLengthIsAShort" (formula "58") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "true_left" (formula "58"))
                                                                     (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                                                                        (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                                                        (rule "hideAuxiliaryEq" (formula "12"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                                        (rule "add_literals" (formula "51") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "51") (term "1,0"))
                                                                        (rule "add_literals" (formula "51") (term "0"))
                                                                        (rule "qeq_literals" (formula "51"))
                                                                        (rule "closeFalse" (formula "51"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "62") (ifseqformula "65"))
                                                                        (rule "close" (formula "62") (ifseqformula "28"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "54"))
                                                                     (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "54"))
                                                                     (rule "hideAuxiliaryEq" (formula "54"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ex_pull_out3" (formula "7") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "7") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "7") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1266"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "70"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                                                     (rule "hideAuxiliaryEq" (formula "13"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "notLeft" (formula "37"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1267"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "28") (ifseqformula "69"))
                                                                     (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "63"))
                                                                     (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "11"))
                                                                     (rule "hideAuxiliaryEq" (formula "11"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "11"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "51") (ifseqformula "11"))
                                                                     (rule "andLeft" (formula "51"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "51"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                                     (rule "add_literals" (formula "51") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "51") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "51") (term "0"))
                                                                     (rule "leq_literals" (formula "51"))
                                                                     (rule "closeFalse" (formula "51"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "false_right" (formula "62"))
                                                               (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "notLeft" (formula "56"))
                                                               (rule "inEqSimp_geqRight" (formula "59"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "andLeft" (formula "55"))
                                                               (rule "notLeft" (formula "56"))
                                                               (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "58"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "58"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "59") (term "0") (ifseqformula "58"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                                               (rule "applyEqRigid" (formula "4") (term "1,1,0,0") (ifseqformula "55"))
                                                               (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "55"))
                                                               (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "55"))
                                                               (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "55"))
                                                               (rule "applyEq" (formula "11") (term "1") (ifseqformula "55"))
                                                               (rule "applyEq" (formula "59") (term "1") (ifseqformula "55"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                                               (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "59") (term "0,0"))
                                                               (rule "leq_literals" (formula "59") (term "0"))
                                                               (builtin "One Step Simplification" (formula "59"))
                                                               (rule "false_right" (formula "59"))
                                                               (rule "ifthenelse_split" (formula "50") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "50"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "notLeft" (formula "50"))
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "50"))
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "50"))
                                                                  (rule "hideAuxiliaryEq" (formula "50"))
                                                                  (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "59")))
                                                                  (rule "ifthenelse_negated" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "50") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "50"))
                                                                     (rule "notLeft" (formula "51"))
                                                                     (rule "notLeft" (formula "50"))
                                                                     (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "50"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "58")))
                                                                     (rule "ifthenelse_negated" (formula "9") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "4") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1260"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "67"))
                                                                     (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1261"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "67"))
                                                                     (rule "ex_pull_out3" (formula "4") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "4") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "4") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "4") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "10"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "10"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                        (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "10"))
                                                                           (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "10"))
                                                                           (rule "hideAuxiliaryEq" (formula "10"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                                           (rule "add_literals" (formula "50") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "50") (term "1,0"))
                                                                           (rule "add_literals" (formula "50") (term "0"))
                                                                           (rule "qeq_literals" (formula "50"))
                                                                           (rule "closeFalse" (formula "50"))
                                                                        )
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "59"))
                                                                           (rule "close" (formula "58") (ifseqformula "26"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "60"))
                                                                        (rule "close" (formula "57") (ifseqformula "26"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "ex_pull_out3" (formula "4") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1258"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "notRight" (formula "58"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1259"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "10"))
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "50"))
                                                                        (rule "andLeft" (formula "10"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "leq_literals" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "59"))
                                                                        (rule "close" (formula "57") (ifseqformula "26"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "50"))
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "50"))
                                                                  (rule "hideAuxiliaryEq" (formula "50"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "50") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "50"))
                                                                     (rule "notLeft" (formula "51"))
                                                                     (rule "notLeft" (formula "50"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,1,0,0") (ifseqformula "58"))
                                                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "57")))
                                                                     (rule "ifthenelse_negated" (formula "9") (term "0"))
                                                                     (rule "ex_pull_out3" (formula "4") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1256"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                                     (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "10"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "10"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1257"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "26") (ifseqformula "67"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "10"))
                                                                        (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "10"))
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                                        (rule "add_literals" (formula "50") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "50") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "50") (term "0"))
                                                                        (rule "qeq_literals" (formula "50"))
                                                                        (rule "closeFalse" (formula "50"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "60"))
                                                                        (rule "close" (formula "58") (ifseqformula "26"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "ex_pull_out3" (formula "4") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "4") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "4") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1254"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "65"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "notRight" (formula "58"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1255"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "26") (ifseqformula "65"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "notRight" (formula "59"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "10"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "50") (ifseqformula "10"))
                                                                     (rule "andLeft" (formula "50"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                                     (rule "add_literals" (formula "50") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "50") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "50") (term "0"))
                                                                     (rule "leq_literals" (formula "50"))
                                                                     (rule "closeFalse" (formula "50"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andLeft" (formula "38") (userinteraction))
                                                         (rule "andLeft" (formula "39") (userinteraction))
                                                         (rule "allRight" (formula "47") (inst "sk=j_67") (userinteraction))
                                                         (rule "instAll" (formula "47") (term "1,0,0") (ifseqformula "40") (userinteraction))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "impRight" (formula "49"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "eqSymm" (formula "47") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "50") (term "0,1"))
                                                         (rule "eqSymm" (formula "8"))
                                                         (rule "eqSymm" (formula "52") (term "1,0,1,1,0"))
                                                         (rule "eqSymm" (formula "3") (term "1"))
                                                         (rule "eqSymm" (formula "38"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "eqSymm" (formula "46") (term "0,1"))
                                                         (rule "eqSymm" (formula "49") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "45") (term "1"))
                                                         (rule "eqSymm" (formula "53") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "48") (term "1"))
                                                         (rule "eqSymm" (formula "51"))
                                                         (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_leqRight" (formula "56"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "56"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "56"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "49") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "52") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "48") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43"))
                                                         (rule "inEqSimp_commuteLeq" (formula "4"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "56") (term "1") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "48") (term "1,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "51") (term "1,0,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "8"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "56") (inst "iv=iv"))
                                                         (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,1"))
                                                         (rule "pullOutSelect" (formula "45") (term "1,0,1,0") (inst "selectSK=arr_1294"))
                                                         (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0,1,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "23"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                                         (rule "applyEqReverse" (formula "46") (term "1,0,1,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0,1") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0,1,1") (ifseqformula "45"))
                                                         (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "hideAuxiliaryEq" (formula "45"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "eqSymm" (formula "6"))
                                                         (rule "eqSymm" (formula "48") (term "0,1,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                         (rule "mul_literals" (formula "44") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0"))
                                                         (rule "pullOutSelect" (formula "51") (term "0,0,0,1") (inst "selectSK=arr_1295"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "56") (term "0,0,1") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "55") (term "1,0,0,1,0") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "52") (term "0,0,0,1,1") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "applyEq" (formula "55") (term "1,0,1,0,1,1,0") (ifseqformula "51"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "61")))
                                                         (rule "replaceKnownSelect_taclet1100001010010000100_4" (formula "51") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1100001010010000100_5" (formula "51") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "23"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "eqSymm" (formula "52") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "56") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "55") (term "1,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "51") (term "1,0,0,0") (ifseqformula "24"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "62")))
                                                         (rule "applyEqReverse" (formula "55") (term "1,1,1,0,1,1,0") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "56") (term "0,0,1") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "52") (term "0,1,0,1,1") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "52") (term "0,0,0,1") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "56") (term "1,1,1,0,0") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "50") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0"))
                                                         (rule "pullOutSelect" (formula "47") (term "0,0,1") (inst "selectSK=arr_1296"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "49") (term "0,0,0,1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "45") (term "1,0,1,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "47"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "23"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                                         (rule "applyEqReverse" (formula "48") (term "0,0,1") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0,1,1") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "45") (term "1,0,1,0") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "47"))
                                                         (rule "hideAuxiliaryEq" (formula "47"))
                                                         (rule "eqSymm" (formula "48") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "eqSymm" (formula "6"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                         (rule "mul_literals" (formula "44") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0,1") (inst "selectSK=arr_1297"))
                                                         (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "52") (term "0,0,0,1,1") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "55") (term "1,0,0,1,0") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "55") (term "1,0,1,0,1,1,0") (ifseqformula "50"))
                                                         (rule "applyEq" (formula "56") (term "0,0,1") (ifseqformula "50"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                         (rule "replaceKnownSelect_taclet1100001010010000100_8" (formula "50") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1100001010010000100_9" (formula "50") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0") (ifseqformula "23"))
                                                         (rule "eqSymm" (formula "52") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "56") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "eqSymm" (formula "55") (term "1,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "24"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                         (rule "applyEqReverse" (formula "55") (term "1,1,1,0,1,1,0") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "56") (term "1,1,1,0,0") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "56") (term "0,0,1") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "52") (term "0,1,0,1,1") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "50"))
                                                         (rule "applyEqReverse" (formula "51") (term "0,0,1") (ifseqformula "50"))
                                                         (rule "hideAuxiliaryEq" (formula "50"))
                                                         (rule "inEqSimp_commuteLeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "50") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0"))
                                                         (rule "pullOutSelect" (formula "6") (term "1") (inst "selectSK=arr_1298"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "24"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "24"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_1299"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "24"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                         (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_1300"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "1") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                         (rule "times_zero_1" (formula "5") (term "0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "mul_literals" (formula "5") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "5"))
                                                         (rule "leq_literals" (formula "45") (term "0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1301"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1302"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "1") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                                         (rule "nnf_imp2or" (formula "61") (term "0,1"))
                                                         (rule "nnf_imp2or" (formula "50") (term "0"))
                                                         (rule "nnf_ex2all" (formula "59"))
                                                         (rule "nnf_imp2or" (formula "60") (term "0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "61") (term "0,0,1"))
                                                         (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "61") (term "0,0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "61") (term "1,0,0,0,1"))
                                                         (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "61") (term "0,0,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,1"))
                                                         (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "60") (term "0,0,0,0"))
                                                         (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "60") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "60") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "60") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "60") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                         (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                         (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "34") (term "1,1,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "arrayLengthNotNegative" (formula "42") (term "1,1,1,0,0"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                         (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "18"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cut_direct" (formula "63") (term "0"))
                                                         (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "allRight" (formula "64") (inst "sk=iv_13"))
                                                            (rule "orRight" (formula "64"))
                                                            (rule "orRight" (formula "64"))
                                                            (rule "inEqSimp_geqRight" (formula "65"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "65"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "59") (term "0,0,1"))
                                                            (rule "arrayLengthIsAShort" (formula "60") (term "0,0,1"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "true_left" (formula "60"))
                                                            (rule "equiv_left" (formula "58"))
                                                            (branch "Case 1"
                                                               (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "allRight" (formula "67") (inst "sk=j_69"))
                                                               (rule "orRight" (formula "67"))
                                                               (rule "orRight" (formula "67"))
                                                               (rule "inEqSimp_leqRight" (formula "67"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "68"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "66") (term "1,1,0") (ifseqformula "65"))
                                                               (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "61"))
                                                               (rule "applyEq" (formula "61") (term "0") (ifseqformula "65"))
                                                               (rule "applyEq" (formula "60") (term "1") (ifseqformula "65"))
                                                               (rule "applyEq" (formula "60") (term "1") (ifseqformula "61"))
                                                               (rule "applyEqRigid" (formula "6") (term "1,1,0,0") (ifseqformula "61"))
                                                               (rule "applyEqRigid" (formula "66") (term "1,1,0") (ifseqformula "61"))
                                                               (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "61"))
                                                               (rule "applyEq" (formula "66") (term "1,0,1,1") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "notLeft" (formula "66"))
                                                               (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "66"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "notLeft" (formula "63"))
                                                               (rule "inEqSimp_leqRight" (formula "66"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "applyEqRigid" (formula "65") (term "1") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "18") (term "1") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "false_right" (formula "66"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "pullOutSelect" (formula "67") (term "1") (inst "selectSK=arr_1331"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                                               (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=arr_1332"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_1333"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "36"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1334"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "ifthenelse_split" (formula "59") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "notLeft" (formula "59"))
                                                                  (rule "applyEqReverse" (formula "61") (term "1,1") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                                                  (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "67")))
                                                                  (rule "replace_known_right" (formula "19") (term "0,0,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "67")))
                                                                  (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "19"))
                                                                  (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
                                                                  (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "19"))
                                                                  (rule "hideAuxiliaryEq" (formula "19"))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "ifthenelse_negated" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "58"))
                                                                  (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "18") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "notLeft" (formula "18"))
                                                                     (rule "notLeft" (formula "18"))
                                                                     (rule "eqSymm" (formula "18"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "67"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "66")))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,1,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "66")))
                                                                     (rule "replace_known_right" (formula "56") (term "0,1,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "66")))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "64")))
                                                                     (rule "ifthenelse_negated" (formula "9") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "17"))
                                                                     (rule "ex_pull_out3" (formula "8") (term "1,0"))
                                                                     (rule "allLeft" (formula "40") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "40") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "true_left" (formula "40"))
                                                                     (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1341"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "76"))
                                                                     (rule "allLeft" (formula "42") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1342"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "76"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "7") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "lenNonNegative" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                                                                     (rule "seqGetAlphaCast" (formula "72") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "72") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "11"))
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "eqSymm" (formula "69"))
                                                                        (rule "arrayLengthNotNegative" (formula "63") (term "0"))
                                                                        (rule "applyEq" (formula "63") (term "0") (ifseqformula "64"))
                                                                        (rule "arrayLengthIsAShort" (formula "64") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "64"))
                                                                        (rule "true_left" (formula "64"))
                                                                        (rule "allLeft" (formula "57") (inst "t=j_67"))
                                                                        (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "57") (term "0,1"))
                                                                        (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "57") (term "1,1"))
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (rule "true_left" (formula "57"))
                                                                        (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "70")))
                                                                           (rule "closeFalse" (formula "10"))
                                                                        )
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "65") (ifseqformula "67"))
                                                                           (rule "close" (formula "65") (ifseqformula "33"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "65") (ifseqformula "69"))
                                                                        (rule "close" (formula "65") (ifseqformula "34"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "18"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "66"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "9") (term "2,0") (ifseqformula "17"))
                                                                     (rule "ex_pull_out3" (formula "8") (term "1,0"))
                                                                     (rule "allLeft" (formula "40") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "40") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "true_left" (formula "40"))
                                                                     (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1339"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "75"))
                                                                     (rule "allLeft" (formula "42") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1340"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "75"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notRight" (formula "65"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "69"))
                                                                     (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "7") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "lenNonNegative" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                                                                     (rule "seqGetAlphaCast" (formula "70") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "eqSymm" (formula "69"))
                                                                        (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "68")))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "67"))
                                                                        (rule "close" (formula "64") (ifseqformula "33"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "61") (term "1,1") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "19"))
                                                                  (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "19"))
                                                                  (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
                                                                  (rule "hideAuxiliaryEq" (formula "19"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "58"))
                                                                  (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "18") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "notLeft" (formula "19"))
                                                                     (rule "notLeft" (formula "18"))
                                                                     (rule "eqSymm" (formula "18"))
                                                                     (rule "replace_known_right" (formula "57") (term "0,1,0,0") (ifseqformula "67"))
                                                                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "66")))
                                                                     (rule "applyEqReverse" (formula "58") (term "1,1") (ifseqformula "57"))
                                                                     (rule "hideAuxiliaryEq" (formula "57"))
                                                                     (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "66")))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "66")))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "ifthenelse_negated" (formula "9") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "applyEq" (formula "10") (term "2,0") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "17"))
                                                                     (rule "ex_pull_out3" (formula "8") (term "1,0"))
                                                                     (rule "allLeft" (formula "42") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1337"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "75"))
                                                                     (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1338"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "75"))
                                                                     (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "67") (term "0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                     (rule "notRight" (formula "67"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "eqSymm" (formula "67"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "39") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "38"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "true_left" (formula "39"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                                                     (rule "lenNonNegative" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                     (rule "seqGetAlphaCast" (formula "70") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "arrayLengthNotNegative" (formula "63") (term "0"))
                                                                     (rule "applyEq" (formula "63") (term "0") (ifseqformula "64"))
                                                                     (rule "arrayLengthIsAShort" (formula "64") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "true_left" (formula "64"))
                                                                     (rule "allLeft" (formula "57") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "57") (term "1,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "57") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "true_left" (formula "57"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "69")))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "65") (ifseqformula "67"))
                                                                        (rule "close" (formula "65") (ifseqformula "33"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "18"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "66"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "applyEq" (formula "9") (term "2,0") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "10") (term "2,0") (ifseqformula "17"))
                                                                     (rule "ex_pull_out3" (formula "8") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "8") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "40") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "40") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "true_left" (formula "40"))
                                                                     (rule "allLeft" (formula "42") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "notLeft" (formula "42"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_1335"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "33") (ifseqformula "74"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notRight" (formula "65"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "68"))
                                                                     (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "10"))
                                                                     (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "11"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "41") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "notLeft" (formula "41"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_1336"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "32") (ifseqformula "73"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notRight" (formula "65"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "67")))
                                                                     (rule "closeFalse" (formula "10"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "false_right" (formula "67"))
                                                               (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "inEqSimp_geqRight" (formula "63"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "andLeft" (formula "62"))
                                                               (rule "notLeft" (formula "63"))
                                                               (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "63")))
                                                               (rule "applyEq" (formula "59") (term "0") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "60") (term "0") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "63") (term "0") (ifseqformula "62"))
                                                               (rule "eqSymm" (formula "63"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "62"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "62") (term "1") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "63") (term "1") (ifseqformula "60"))
                                                               (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "60"))
                                                               (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "60"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "63") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                               (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                               (rule "add_literals" (formula "63") (term "0,0"))
                                                               (rule "leq_literals" (formula "63") (term "0"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "false_right" (formula "63"))
                                                               (rule "ifthenelse_split" (formula "54") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "notLeft" (formula "54"))
                                                                  (rule "applyEqReverse" (formula "56") (term "1,1") (ifseqformula "54"))
                                                                  (rule "hideAuxiliaryEq" (formula "54"))
                                                                  (rule "replace_known_right" (formula "15") (term "0,1,0,0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "63")))
                                                                  (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "15"))
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "15"))
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "15"))
                                                                  (rule "hideAuxiliaryEq" (formula "15"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "61")))
                                                                  (rule "ifthenelse_negated" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "54"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "14") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "14"))
                                                                     (rule "notLeft" (formula "14"))
                                                                     (rule "notLeft" (formula "14"))
                                                                     (rule "eqSymm" (formula "14"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "62")))
                                                                     (rule "replace_known_right" (formula "53") (term "0,1,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "62")))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                                     (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1329"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "71"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1330"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "71"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                                     (rule "lenNonNegative" (formula "5") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "5"))
                                                                     (rule "seqGetAlphaCast" (formula "67") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "allLeft" (formula "55") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "55") (term "1,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "55") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "true_left" (formula "55"))
                                                                     (rule "ex_pull_out3" (formula "6") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "6") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "6") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "6") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "6") (term "0,1,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                        (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "close" (formula "67") (ifseqformula "9"))
                                                                        )
                                                                        (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "61") (ifseqformula "65"))
                                                                           (rule "close" (formula "61") (ifseqformula "31"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "61") (ifseqformula "63"))
                                                                        (rule "close" (formula "61") (ifseqformula "31"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "14"))
                                                                     (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "applyEq" (formula "6") (term "2,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1327"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "70"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1328"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "70"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "notRight" (formula "61"))
                                                                     (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "5") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "5"))
                                                                     (rule "lenNonNegative" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "6"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                                                     (rule "seqGetAlphaCast" (formula "66") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "allLeft" (formula "55") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "55") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "55") (term "1,1"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "true_left" (formula "55"))
                                                                     (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "close" (formula "66") (ifseqformula "9"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "61") (ifseqformula "64"))
                                                                        (rule "close" (formula "61") (ifseqformula "31"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "56") (term "1,1") (ifseqformula "54"))
                                                                  (rule "hideAuxiliaryEq" (formula "54"))
                                                                  (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "15"))
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "15"))
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "15"))
                                                                  (rule "hideAuxiliaryEq" (formula "15"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "54"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "14") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "14"))
                                                                     (rule "notLeft" (formula "15"))
                                                                     (rule "notLeft" (formula "14"))
                                                                     (rule "eqSymm" (formula "14"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "62")))
                                                                     (rule "replace_known_right" (formula "53") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "62")))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                                     (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1325"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "70"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "notRight" (formula "63"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "eqSymm" (formula "64"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1326"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "70"))
                                                                     (rule "cnf_rightDist" (formula "6") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "5"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                                                     (rule "lenNonNegative" (formula "6") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "6"))
                                                                     (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "seqGetAlphaCast" (formula "66") (term "1"))
                                                                     (rule "castDel" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "allLeft" (formula "55") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "55") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "55") (term "1,1"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "true_left" (formula "55"))
                                                                     (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "close" (formula "66") (ifseqformula "9"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "61") (ifseqformula "63"))
                                                                        (rule "close" (formula "61") (ifseqformula "31"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "14"))
                                                                     (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "6") (term "2,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1323"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "69"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "eqSymm" (formula "63"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1324"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "30") (ifseqformula "69"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "64")))
                                                                     (rule "closeFalse" (formula "8"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "false_right" (formula "64"))
                                                            (rule "arrayLengthNotNegative" (formula "56") (term "0,0,1"))
                                                            (rule "arrayLengthIsAShort" (formula "57") (term "0,0,1"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "true_left" (formula "57"))
                                                            (rule "equiv_left" (formula "55"))
                                                            (branch "Case 1"
                                                               (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "allRight" (formula "64") (inst "sk=j_68"))
                                                               (rule "orRight" (formula "64"))
                                                               (rule "orRight" (formula "64"))
                                                               (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "inEqSimp_geqRight" (formula "65"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "65"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "62") (term "0") (ifseqformula "58"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "applyEq" (formula "57") (term "1") (ifseqformula "58"))
                                                               (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "58"))
                                                               (rule "applyEqRigid" (formula "60") (term "1,1,0") (ifseqformula "62"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "62"))
                                                               (rule "applyEqRigid" (formula "3") (term "1,1,0,0") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "60") (term "1,0,1,1") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "notLeft" (formula "60"))
                                                               (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "inEqSimp_leqRight" (formula "63"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "62"))
                                                               (rule "applyEq" (formula "63") (term "1,0,1") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "false_right" (formula "63"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "pullOutSelect" (formula "64") (term "1") (inst "selectSK=arr_1311"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                                                               (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=arr_1312"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_1313"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1314"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "ifthenelse_split" (formula "56") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "56"))
                                                                  (rule "notLeft" (formula "57"))
                                                                  (rule "notLeft" (formula "56"))
                                                                  (rule "applyEqReverse" (formula "58") (term "1,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "65")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                                  (rule "replace_known_right" (formula "16") (term "0,1,0,0") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "64")))
                                                                  (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "16"))
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "16"))
                                                                  (rule "hideAuxiliaryEq" (formula "16"))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "ifthenelse_negated" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "15") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "15"))
                                                                     (rule "notLeft" (formula "15"))
                                                                     (rule "notLeft" (formula "15"))
                                                                     (rule "eqSymm" (formula "15"))
                                                                     (rule "replace_known_right" (formula "54") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "63")))
                                                                     (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "54"))
                                                                     (rule "hideAuxiliaryEq" (formula "54"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "62")))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                                     (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1321"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "73"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1322"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "73"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "68") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "lenNonNegative" (formula "69") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "3"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "eqSymm" (formula "67"))
                                                                        (rule "arrayLengthNotNegative" (formula "58") (term "0"))
                                                                        (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
                                                                        (rule "arrayLengthIsAShort" (formula "59") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "allLeft" (formula "55") (inst "t=j_67"))
                                                                        (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "55") (term "1,1"))
                                                                        (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "55") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "true_left" (formula "55"))
                                                                        (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "4"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "68")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                        (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "63") (ifseqformula "65"))
                                                                           (rule "close" (formula "63") (ifseqformula "31"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "63") (ifseqformula "66"))
                                                                        (rule "close" (formula "63") (ifseqformula "32"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "15"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "6") (term "2,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1319"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "72"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1320"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "72"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "65"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "36") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "66") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "lenNonNegative" (formula "67") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                                        (rule "hideAuxiliaryEq" (formula "5"))
                                                                        (rule "eqSymm" (formula "67"))
                                                                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "4"))
                                                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "66")))
                                                                        (rule "closeFalse" (formula "8"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "62") (ifseqformula "64"))
                                                                        (rule "close" (formula "62") (ifseqformula "31"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "58") (term "1,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "17"))
                                                                  (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "17"))
                                                                  (rule "hideAuxiliaryEq" (formula "17"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "15") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "15"))
                                                                     (rule "notLeft" (formula "15"))
                                                                     (rule "notLeft" (formula "15"))
                                                                     (rule "eqSymm" (formula "15"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "63")))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "63")))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_right" (formula "53") (term "0,1,0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "63")))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1317"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "72"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1318"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "72"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "notRight" (formula "64"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "eqSymm" (formula "65"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                                     (rule "lenNonNegative" (formula "66") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "lenNonNegative" (formula "67") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "arrayLengthNotNegative" (formula "58") (term "0"))
                                                                     (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
                                                                     (rule "arrayLengthIsAShort" (formula "59") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "true_left" (formula "59"))
                                                                     (rule "allLeft" (formula "55") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "55") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "55") (term "1,1"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "true_left" (formula "55"))
                                                                     (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                                        (rule "hideAuxiliaryEq" (formula "5"))
                                                                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "4"))
                                                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "67")))
                                                                        (rule "closeFalse" (formula "8"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "63") (ifseqformula "66"))
                                                                        (rule "close" (formula "63") (ifseqformula "31"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "15"))
                                                                     (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "54"))
                                                                     (rule "hideAuxiliaryEq" (formula "54"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "applyEq" (formula "6") (term "2,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "14"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                                     (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "37") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1315"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "30") (ifseqformula "71"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "notRight" (formula "63"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "eqSymm" (formula "64"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "notLeft" (formula "38"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1316"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "60") (term "0") (ifseqformula "29") (ifseqformula "70"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "notRight" (formula "62"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "63")))
                                                                     (rule "closeFalse" (formula "6"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "false_right" (formula "64"))
                                                               (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "inEqSimp_geqRight" (formula "60"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "andLeft" (formula "57"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "60")))
                                                               (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                                               (rule "applyEq" (formula "60") (term "0") (ifseqformula "57"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "applyEq" (formula "59") (term "0") (ifseqformula "57"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "57"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "1,1,0,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "60") (term "1") (ifseqformula "59"))
                                                               (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "59"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                                               (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "60") (term "0,0"))
                                                               (rule "leq_literals" (formula "60") (term "0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "false_right" (formula "60"))
                                                               (rule "ifthenelse_split" (formula "51") (term "0"))
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "51"))
                                                                  (rule "hideAuxiliaryEq" (formula "51"))
                                                                  (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "12"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "12"))
                                                                  (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                                                  (rule "hideAuxiliaryEq" (formula "12"))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,1,0,0") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "59")))
                                                                  (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "11"))
                                                                     (rule "notLeft" (formula "12"))
                                                                     (rule "notLeft" (formula "11"))
                                                                     (rule "eqSymm" (formula "11"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                                     (rule "replace_known_right" (formula "50") (term "0,1,0,0") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "58")))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "11"))
                                                                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "11"))
                                                                     (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1309"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "68"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1310"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "68"))
                                                                     (rule "ex_pull_out3" (formula "2") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "2") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "allLeft" (formula "51") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "51") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "51") (term "1,1"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "true_left" (formula "51"))
                                                                     (rule "lenNonNegative" (formula "63") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "lenNonNegative" (formula "64") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "6"))
                                                                        (rule "hideAuxiliaryEq" (formula "6"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                           (rule "close" (formula "65") (ifseqformula "7"))
                                                                        )
                                                                        (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                           (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "63"))
                                                                           (rule "close" (formula "59") (ifseqformula "29"))
                                                                        )
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "60"))
                                                                        (rule "close" (formula "59") (ifseqformula "29"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "11"))
                                                                     (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "58"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "11"))
                                                                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "11"))
                                                                     (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1307"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "67"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1308"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "67"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "notRight" (formula "58"))
                                                                     (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "ex_pull_out3" (formula "3") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                                     (rule "allLeft" (formula "51") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "51") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "51") (term "1,1"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "true_left" (formula "51"))
                                                                     (rule "lenNonNegative" (formula "62") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "lenNonNegative" (formula "63") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "close" (formula "64") (ifseqformula "7"))
                                                                     )
                                                                     (branch " result_0[1 + i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "62"))
                                                                        (rule "close" (formula "59") (ifseqformula "29"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "51"))
                                                                  (rule "hideAuxiliaryEq" (formula "51"))
                                                                  (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "12"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "12"))
                                                                  (rule "hideAuxiliaryEq" (formula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                  (rule "ifthenelse_split" (formula "11") (term "0"))
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "11"))
                                                                     (rule "notLeft" (formula "12"))
                                                                     (rule "notLeft" (formula "11"))
                                                                     (rule "eqSymm" (formula "11"))
                                                                     (rule "replace_known_right" (formula "50") (term "0,0,0,0") (ifseqformula "58"))
                                                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "59")))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "11"))
                                                                     (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "11"))
                                                                     (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1305"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "67"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "eqSymm" (formula "61"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1306"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "67"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "ex_pull_out3" (formula "3") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                                     (rule "allLeft" (formula "51") (inst "t=j_67"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_12" (formula "51") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet1100001010010000100_13" (formula "51") (term "1,1"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "true_left" (formula "51"))
                                                                     (rule "lenNonNegative" (formula "62") (term "1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "lenNonNegative" (formula "63") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                        (rule "close" (formula "64") (ifseqformula "7"))
                                                                     )
                                                                     (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "61"))
                                                                        (rule "close" (formula "59") (ifseqformula "29"))
                                                                     )
                                                                  )
                                                                  (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "eqSymm" (formula "11"))
                                                                     (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "58"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                                     (rule "hideAuxiliaryEq" (formula "50"))
                                                                     (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "11"))
                                                                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "11"))
                                                                     (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                                     (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_8)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1303"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "66"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "notRight" (formula "59"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "eqSymm" (formula "60"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_8"))
                                                                     (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "34") (term "0,1"))
                                                                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_8"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "36") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "notLeft" (formula "36"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1304"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "27") (ifseqformula "66"))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "notRight" (formula "59"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "61")))
                                                                     (rule "closeFalse" (formula "5"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " forall int j; ( 0 <= j & j < res_min -> result_0[i_8][j]@heapAfter_sort = result_0[1 + i_8][j]@heapAfter_sort) & result_0[i_8]@heapAfter_sort.length <= result_0[1 + i_8]@heapAfter_sort.length"
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "eqSymm" (formula "45") (term "0,1,1"))
                                                   (rule "eqSymm" (formula "42") (term "0,1"))
                                                   (rule "eqSymm" (formula "47") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "45") (term "0,1"))
                                                   (rule "eqSymm" (formula "51"))
                                                   (rule "eqSymm" (formula "42") (term "0,1,1"))
                                                   (rule "eqSymm" (formula "46") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "35"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "eqSymm" (formula "5"))
                                                   (rule "eqSymm" (formula "43") (term "1"))
                                                   (rule "eqSymm" (formula "40") (term "1"))
                                                   (rule "eqSymm" (formula "37") (term "1,0"))
                                                   (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_leqRight" (formula "48"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "50"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "50"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "44") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "47") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "50") (term "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "46") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "50") (term "1") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "42") (term "1") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "5"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "43") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "50") (inst "iv=iv"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1"))
                                                   (rule "pullOutSelect" (formula "45") (term "0,1,0,1,1") (inst "selectSK=arr_1343"))
                                                   (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "44") (term "0,0,1") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "49") (term "1,1,1,0,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "50") (term "1,1,1,0,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "50") (term "0,1,1") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "49") (term "1,1,1,0,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "45"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "55")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "20"))
                                                   (rule "replace_known_right" (formula "45") (term "0,0,0,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "21")))
                                                   (rule "applyEq" (formula "40") (term "0,1") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "45"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                                                   (rule "applyEqReverse" (formula "50") (term "1,1,1,0,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "49") (term "1,1,1,0,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "50") (term "0,1,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "49") (term "1,1,1,0,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,1,0,1,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "39") (term "1,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "47") (term "0,1,0,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "applyEq" (formula "40") (term "1") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "42"))
                                                   (rule "eqSymm" (formula "44") (term "1"))
                                                   (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "45") (term "1,0,1,1") (ifseqformula "42"))
                                                   (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "pullOutSelect" (formula "45") (term "0,0,0,1,1") (inst "selectSK=arr_1344"))
                                                   (rule "applyEq" (formula "48") (term "1,0,0,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "46") (term "0,0,0,1") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "44") (term "0,0,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "48") (term "1,0,1,0,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "49") (term "1,0,1,0,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "49") (term "0,0,1") (ifseqformula "45"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "54")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "20"))
                                                   (rule "eqSymm" (formula "48") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "49") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "45") (term "0,0,0,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "21")))
                                                   (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "45"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "54")) (ifInst ""  (formula "55")))
                                                   (rule "applyEqReverse" (formula "48") (term "1,1,1,0,1,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,0,0,1,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "49") (term "1,1,1,0,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "48") (term "1,0,0,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,0,0,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "49") (term "0,0,1") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "39") (term "1,0,1,0") (ifseqformula "45"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "eqSymm" (formula "47") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "48") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "allRight" (formula "48") (inst "sk=j_70"))
                                                   (rule "impRight" (formula "48"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "49") (term "1,1,1,0,0") (ifseqformula "46"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "46"))
                                                   (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "inEqSimp_leqRight" (formula "47"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "47"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_1345"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                                   (rule "eqSymm" (formula "50"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1346"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_1347"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1348"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "nnf_imp2or" (formula "54") (term "0,1"))
                                                   (rule "nnf_ex2all" (formula "52"))
                                                   (rule "nnf_imp2or" (formula "46") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "54") (term "0,0,1"))
                                                   (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1"))
                                                   (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1"))
                                                   (rule "mul_literals" (formula "54") (term "1,0,0,0,1"))
                                                   (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1"))
                                                   (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                   (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                   (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "arrayLengthIsAShort" (formula "34") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "arrayLengthIsAShort" (formula "40") (term "1,1,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "arrayLengthNotNegative" (formula "34") (term "1,1,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                   (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "arrayLengthNotNegative" (formula "42") (term "1,1,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                   (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "lenNonNegative" (formula "56") (term "0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "lenNonNegative" (formula "57") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "cut_direct" (formula "58") (term "0"))
                                                   (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "allRight" (formula "59") (inst "sk=iv_14"))
                                                      (rule "orRight" (formula "59"))
                                                      (rule "orRight" (formula "59"))
                                                      (rule "inEqSimp_geqRight" (formula "60"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "60"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "55") (term "0"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "true_left" (formula "55"))
                                                      (rule "arrayLengthNotNegative" (formula "55") (term "0"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "56"))
                                                      (rule "ifthenelse_split" (formula "8") (term "0"))
                                                      (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "notLeft" (formula "9"))
                                                         (rule "notLeft" (formula "8"))
                                                         (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "replace_known_right" (formula "8") (term "0,0,1,0,0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "58")))
                                                         (rule "ifthenelse_negated" (formula "8") (term "0"))
                                                         (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                         (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "notLeft" (formula "7"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "57")))
                                                            (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "52") (term "0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "35") (term "0,1"))
                                                            (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1363"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "69"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1364"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "69"))
                                                            (rule "ex_pull_out3" (formula "5") (term "0"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                            (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "50") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "50") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0010001010010000100_14" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00010001010010000100_15" (formula "50") (term "1,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "50") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "50"))
                                                            (rule "ifthenelse_split" (formula "6") (term "0"))
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "seqGetAlphaCast" (formula "65") (term "0"))
                                                               (rule "castDel" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "seqGetAlphaCast" (formula "65") (term "1"))
                                                               (rule "castDel" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "commute_and_2" (formula "5") (term "0,0"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0,0") (ifseqformula "28"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "60")))
                                                               (rule "true_left" (formula "56"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0,0") (ifseqformula "28"))
                                                               (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "53"))
                                                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "65")))
                                                               (rule "closeFalse" (formula "7"))
                                                            )
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "60"))
                                                               (rule "close" (formula "59") (ifseqformula "28"))
                                                            )
                                                         )
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "arrayLengthIsAShort" (formula "51") (term "0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                                            (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1361"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1362"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "59"))
                                                            (rule "notRight" (formula "59"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "35") (term "0,1"))
                                                            (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "ex_pull_out3" (formula "6") (term "0"))
                                                            (rule "cnf_rightDist" (formula "6") (term "0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "1,0,0"))
                                                            (rule "commute_or" (formula "6") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "6") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "50") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "50") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10010001010010000100_15" (formula "50") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0010001010010000100_14" (formula "50") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "50") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "50"))
                                                            (rule "seqGetAlphaCast" (formula "64") (term "0"))
                                                            (rule "castDel" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "seqGetAlphaCast" (formula "64") (term "1"))
                                                            (rule "castDel" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "commute_and_2" (formula "6") (term "0,0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0,0") (ifseqformula "28"))
                                                            (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0,0") (ifseqformula "28"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "62"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "65")))
                                                            (rule "closeFalse" (formula "7"))
                                                         )
                                                      )
                                                      (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                         (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "notLeft" (formula "7"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "57")))
                                                            (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "52") (term "0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "35") (term "0,1"))
                                                            (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1359"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                            (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notRight" (formula "61"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "eqSymm" (formula "62"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1360"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "68"))
                                                            (rule "ex_pull_out3" (formula "6") (term "0"))
                                                            (rule "cnf_rightDist" (formula "6") (term "0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "1,0,0"))
                                                            (rule "commute_or" (formula "6") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "6") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "50") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "50") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1010001010010000100_14" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01010001010010000100_15" (formula "50") (term "1,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "50") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEq" (formula "63") (term "0") (ifseqformula "50"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "close" (formula "64") (ifseqformula "8"))
                                                            )
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "61"))
                                                               (rule "close" (formula "59") (ifseqformula "28"))
                                                            )
                                                         )
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "52") (term "0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1357"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "67"))
                                                            (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "notRight" (formula "60"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "eqSymm" (formula "61"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "35") (term "0,1"))
                                                            (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "37") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1358"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "28") (ifseqformula "67"))
                                                            (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "notRight" (formula "60"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "ex_pull_out3" (formula "7") (term "0"))
                                                            (rule "cnf_rightDist" (formula "7") (term "0,0"))
                                                            (rule "commute_or_2" (formula "7") (term "1,0,0"))
                                                            (rule "commute_or" (formula "7") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "50") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "50") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1010001010010000100_14" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11010001010010000100_15" (formula "50") (term "1,1"))
                                                            (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "62"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "50"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0"))
                                                            (rule "add_zero_right" (formula "9") (term "0"))
                                                            (rule "leq_literals" (formula "9"))
                                                            (rule "closeFalse" (formula "9"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "arrayLengthNotNegative" (formula "53") (term "0"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                                                      (rule "arrayLengthIsAShort" (formula "54") (term "0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "notLeft" (formula "7"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "56")))
                                                         (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                         (rule "ex_pull_out3" (formula "3") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "3") (term "0,1,0"))
                                                         (rule "commute_or" (formula "3") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "3") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "3") (term "1,0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "4") (term "0"))
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "notLeft" (formula "5"))
                                                            (rule "notLeft" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,1,0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "55")))
                                                            (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "50") (term "0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1355"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "67"))
                                                            (rule "allLeft" (formula "33") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "33") (term "0,1"))
                                                            (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1356"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "67"))
                                                            (rule "ex_pull_out3" (formula "3") (term "0"))
                                                            (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                            (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                            (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "48") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "48") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0110001010010000100_14" (formula "48") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00110001010010000100_15" (formula "48") (term "1,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "48") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "48") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "48"))
                                                            (rule "ifthenelse_split" (formula "4") (term "0"))
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "commute_and_2" (formula "3") (term "0,0"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0,0") (ifseqformula "26"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "58")))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0,0") (ifseqformula "26"))
                                                               (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "63")))
                                                               (rule "closeFalse" (formula "5"))
                                                            )
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "58"))
                                                               (rule "close" (formula "57") (ifseqformula "26"))
                                                            )
                                                         )
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "50") (term "0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1353"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "notRight" (formula "57"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "allLeft" (formula "33") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "33") (term "0,1"))
                                                            (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1354"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                            (rule "ex_pull_out3" (formula "4") (term "0"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "1,0,0"))
                                                            (rule "commute_or" (formula "4") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "48") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "48") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10110001010010000100_15" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0110001010010000100_14" (formula "48") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "48") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "48"))
                                                            (rule "commute_and_2" (formula "4") (term "0,0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0,0") (ifseqformula "26"))
                                                            (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0,0") (ifseqformula "26"))
                                                            (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "63")))
                                                            (rule "closeFalse" (formula "5"))
                                                         )
                                                      )
                                                      (branch " ! result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[1 + i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "ex_pull_out3" (formula "3") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "3") (term "0,1,0"))
                                                         (rule "commute_or" (formula "3") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "3") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "3") (term "1,0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "4") (term "0"))
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "notLeft" (formula "4"))
                                                            (rule "notLeft" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,1,0,0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                                            (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "49") (term "0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "true_left" (formula "49"))
                                                            (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                                            (rule "allLeft" (formula "33") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "33") (term "0,1"))
                                                            (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1351"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                            (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1352"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                            (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "59"))
                                                            (rule "notRight" (formula "59"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "eqSymm" (formula "60"))
                                                            (rule "ex_pull_out3" (formula "4") (term "0"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "1,0,0"))
                                                            (rule "commute_or" (formula "4") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "48") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "48") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01110001010010000100_15" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1110001010010000100_14" (formula "48") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "48") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "61") (term "0") (ifseqformula "48"))
                                                            (rule "ifthenelse_split" (formula "5") (term "0"))
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "close" (formula "62") (ifseqformula "6"))
                                                            )
                                                            (branch " result_0[i_8].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "60"))
                                                               (rule "close" (formula "57") (ifseqformula "26"))
                                                            )
                                                         )
                                                         (branch " ! result_0[i_8]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[i_8]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "arrayLengthIsAShort" (formula "49") (term "0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "true_left" (formula "49"))
                                                            (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1349"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "65"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "notRight" (formula "57"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_1350"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                                                            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "26") (ifseqformula "65"))
                                                            (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notRight" (formula "58"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "allLeft" (formula "33") (inst "t=i_8"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "33") (term "0,1"))
                                                            (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "ex_pull_out3" (formula "5") (term "0"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                            (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "48") (inst "t=j_70"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_13" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10001010010000100_11" (formula "48") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11110001010010000100_15" (formula "48") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1110001010010000100_14" (formula "48") (term "0,1"))
                                                            (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "48") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "48") (term "0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "closeFalse" (formula "48"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Exceptional Post (min)"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0") (ifseqformula "27"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0") (ifseqformula "17"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort_0,length(byte[]_select(heapAfter_sort_0,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8)))))_001010010000100_3" (formula "43") (term "1,1,0,0"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort_0,length(byte[]_select(heapAfter_sort_0,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8)))))_001010010000100_3" (formula "44") (term "1,1,0,0,0"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "notLeft" (formula "41"))
                                                (rule "close" (formula "44") (ifseqformula "43"))
                                             )
                                             (branch "Pre (min)"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "wellFormedAnonEQ" (formula "41") (ifseqformula "27"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0") (ifseqformula "17"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort_0,length(byte[]_select(heapAfter_sort_0,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8)))))_001010010000100_3" (formula "42") (term "1,1,0,0"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort_0,length(byte[]_select(heapAfter_sort_0,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8)))))_001010010000100_3" (formula "43") (term "1,1,0,0,0"))
                                                (rule "eqSymm" (formula "40") (term "0,1,1"))
                                                (rule "eqSymm" (formula "39") (term "1"))
                                                (rule "eqSymm" (formula "34"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "notLeft" (formula "34"))
                                                (rule "eqSymm" (formula "36") (term "1,0,1,1,0,0"))
                                                (rule "eqSymm" (formula "47"))
                                                (rule "eqSymm" (formula "36") (term "1,0,0,1"))
                                                (rule "eqSymm" (formula "43") (term "1,0,0"))
                                                (rule "eqSymm" (formula "39") (term "0,1"))
                                                (rule "eqSymm" (formula "42") (term "1,0,1,1,0"))
                                                (rule "eqSymm" (formula "4"))
                                                (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "16")) (ifInst ""  (formula "26")))
                                                (rule "closeTrue" (formula "41"))
                                             )
                                          )
                                          (branch "Exceptional Post (min)"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "16"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8)))))_01010010000100_2" (formula "36") (term "1,1,0,0,0"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8)))))_01010010000100_2" (formula "36") (term "1,1,0,0,0,1"))
                                             (rule "andLeft" (formula "37"))
                                             (rule "andLeft" (formula "37"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "notLeft" (formula "37"))
                                             (rule "close" (formula "40") (ifseqformula "39"))
                                          )
                                          (branch "Pre (min)"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "16"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8)))))_01010010000100_2" (formula "36") (term "1,1,0,0,0"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_0,arr(i_8))),length(byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8)))))_01010010000100_2" (formula "36") (term "1,1,0,0,0,1"))
                                             (rule "eqSymm" (formula "39") (term "1,0,0"))
                                             (rule "eqSymm" (formula "38") (term "1,0,1,1,0"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "eqSymm" (formula "33"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "eqSymm" (formula "35") (term "1,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "eqSymm" (formula "35") (term "1,0,0,1"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "7")))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                       )
                                       (branch "Exceptional Post (compare)"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "20") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "15"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "notLeft" (formula "34"))
                                          (rule "close" (formula "37") (ifseqformula "36"))
                                       )
                                       (branch "Pre (compare)"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "20") (term "0"))
                                          (rule "wellFormedAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "15"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,1") (ifseqformula "15"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,0,1") (ifseqformula "15"))
                                          (rule "eqSymm" (formula "36") (term "1,0,0"))
                                          (rule "eqSymm" (formula "32"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "eqSymm" (formula "35") (term "1,0,1,1,0"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "replace_known_left" (formula "34") (term "1,0,0,1") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "6")))
                                          (rule "inEqSimp_leqRight" (formula "37"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "38"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "39"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "22") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "40") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "39") (inst "iv=iv"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1"))
                                          (rule "pullOutSelect" (formula "38") (term "1,1,1,0,0") (inst "selectSK=arr_353"))
                                          (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "1,1,1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "39") (term "0,1,1,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                          (rule "applyEq" (formula "37") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "39") (term "0,1,1,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "38") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "38") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "38") (term "1,1,1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "39") (term "0,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "39") (term "1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "38") (term "1,0,1,0,0") (inst "selectSK=arr_354"))
                                          (rule "applyEq" (formula "39") (term "0,2,1,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "39") (term "0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "0,2,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                          (rule "eqSymm" (formula "39") (term "1,0,0"))
                                          (rule "eqSymm" (formula "38") (term "1,0,1,1,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                          (rule "applyEq" (formula "37") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "1,0,0,1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "38") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "38") (term "0,2,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "39") (term "0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "39") (term "0,2,1,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "39") (term "1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "1,0,0,1,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "37") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "37") (term "1,0,1,1,0"))
                                          (rule "eqSymm" (formula "38") (term "1,0,0"))
                                          (rule "nnf_ex2all" (formula "37"))
                                          (rule "nnf_imp2or" (formula "39") (term "0,1"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_imp2or" (formula "38") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                          (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "shift_paren_or" (formula "37") (term "0,1"))
                                          (rule "shift_paren_or" (formula "37") (term "1,1"))
                                          (rule "shift_paren_and" (formula "37"))
                                          (rule "arrayLengthIsAShort" (formula "24") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "33") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                          (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "arrayLengthNotNegative" (formula "32") (term "1,1,1,0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                          (rule "applyEq" (formula "7") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                          (rule "lenNonNegative" (formula "41") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "lenNonNegative" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "cut_direct" (formula "43") (term "0"))
                                          (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "allRight" (formula "44") (inst "sk=iv_8"))
                                             (rule "orRight" (formula "44"))
                                             (rule "orRight" (formula "44"))
                                             (rule "inEqSimp_geqRight" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "45"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "44") (term "1,1"))
                                             (rule "arrayLengthIsAShort" (formula "45") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "ex_pull_out3" (formula "6") (term "0"))
                                             (rule "cnf_rightDist" (formula "6") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "1,0,0"))
                                             (rule "commute_or" (formula "6") (term "0,1,0,0"))
                                             (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "6") (term "1,0,0,0"))
                                             (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "6") (term "0,1,0,0,0"))
                                             (rule "allLeft" (formula "31") (inst "t=i_8"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_357"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "22") (ifseqformula "51"))
                                             (rule "replace_known_right" (formula "45") (term "0,0,1,0") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "43")))
                                             (rule "allLeft" (formula "29") (inst "t=i_8"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "29") (term "0,1"))
                                             (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_8)"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_358"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "22") (ifseqformula "52"))
                                             (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "43")))
                                             (rule "arrayLengthIsAShort" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "arrayLengthNotNegative" (formula "47") (term "0,1"))
                                             (rule "commute_and_2" (formula "7") (term "0,0"))
                                             (rule "seqGetAlphaCast" (formula "49") (term "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_and" (formula "7") (term "0,0,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0,1,1") (ifseqformula "23"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "45"))
                                             (rule "close" (formula "49") (ifseqformula "24"))
                                          )
                                          (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "false_right" (formula "44"))
                                             (rule "arrayLengthNotNegative" (formula "42") (term "1,1"))
                                             (rule "arrayLengthIsAShort" (formula "43") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "ex_pull_out3" (formula "4") (term "0"))
                                             (rule "cnf_rightDist" (formula "4") (term "0,0"))
                                             (rule "commute_or_2" (formula "4") (term "1,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,1,0,0"))
                                             (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "4") (term "1,0,0,0"))
                                             (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                                             (rule "allLeft" (formula "27") (inst "t=i_8"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_0,arr(i_8)),byte[]_select(heapAfter_sort,result_0,arr(add(Z(1(#)),i_8))))_1010010000100_1" (formula "27") (term "0,1"))
                                             (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "allLeft" (formula "29") (inst "t=i_8"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                             (rule "leq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "notLeft" (formula "29"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_355"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "41") (term "0") (ifseqformula "20") (ifseqformula "49"))
                                             (rule "replace_known_right" (formula "43") (term "0,0,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "41")))
                                             (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_8)"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                             (rule "leq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "notLeft" (formula "29"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_356"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "41") (term "0") (ifseqformula "20") (ifseqformula "50"))
                                             (rule "replace_known_right" (formula "44") (term "0,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "41")))
                                             (rule "arrayLengthIsAShort" (formula "45") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "arrayLengthNotNegative" (formula "45") (term "0,1"))
                                             (rule "commute_and_2" (formula "5") (term "0,0"))
                                             (rule "commute_and" (formula "5") (term "0,0,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0,1,1") (ifseqformula "21"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "46") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "orRight" (formula "46"))
                                             (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "43"))
                                             (rule "close" (formula "47") (ifseqformula "22"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (compare)"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort_0,byte[]_select(heapAfter_sort_0,result_0,arr(i_8)),byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8))))_10010000100_0" (formula "35") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "23"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "14"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "notLeft" (formula "31"))
                                    (rule "close" (formula "34") (ifseqformula "33"))
                                 )
                                 (branch "Pre (compare)"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort_0,byte[]_select(heapAfter_sort_0,result_0,arr(i_8)),byte[]_select(heapAfter_sort_0,result_0,arr(add(Z(1(#)),i_8))))_10010000100_0" (formula "34") (term "0"))
                                    (rule "wellFormedAnonEQ" (formula "31") (term "0,0,1") (ifseqformula "23"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,1") (ifseqformula "23"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0,1") (ifseqformula "23"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,1,1") (ifseqformula "14"))
                                    (rule "wellFormedAnonEQ" (formula "31") (term "0,0,0,1") (ifseqformula "14"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,1,0,1") (ifseqformula "14"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "eqSymm" (formula "30"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "replace_known_left" (formula "31") (term "1,0,0,0,1") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "5")) (ifInst ""  (formula "22")))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "34"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "20") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "34") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "33") (term "1,0,0,0,1,0,1") (inst "selectSK=arr_201"))
                                    (rule "applyEq" (formula "34") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                    (rule "applyEqReverse" (formula "34") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "1,0,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "33") (term "0,0,1,1") (inst "selectSK=arr_202"))
                                    (rule "applyEq" (formula "34") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                    (rule "applyEqReverse" (formula "34") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_imp2or" (formula "34") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1"))
                                    (rule "shift_paren_or" (formula "33") (term "0,1"))
                                    (rule "shift_paren_or" (formula "33") (term "1,1"))
                                    (rule "shift_paren_or" (formula "33") (term "0,0,1"))
                                    (rule "shift_paren_or" (formula "33") (term "0,1,1"))
                                    (rule "shift_paren_and" (formula "33"))
                                    (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                    (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_8)"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                    (rule "leq_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_203"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "34") (term "0") (ifseqformula "15") (ifseqformula "41"))
                                    (rule "replace_known_right" (formula "36") (term "0,0,0,1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                                    (rule "allLeft" (formula "21") (inst "t=i_8"))
                                    (rule "replaceKnownSelect_taclet210010000100_2" (formula "21") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet210010000100_5" (formula "21") (term "2,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet210010000100_3" (formula "21") (term "1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet210010000100_6" (formula "21") (term "2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "21") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "24") (inst "t=i_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                    (rule "leq_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_204"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "35") (term "0") (ifseqformula "15") (ifseqformula "43"))
                                    (rule "replace_known_right" (formula "38") (term "0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "35")))
                                    (rule "lenNonNegative" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "cut_direct" (formula "40") (term "0"))
                                    (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length TRUE"
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "allRight" (formula "41") (inst "sk=iv_7"))
                                       (rule "orRight" (formula "41"))
                                       (rule "orRight" (formula "41"))
                                       (rule "inEqSimp_leqRight" (formula "41"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "andRight" (formula "42"))
                                       (branch "Case 1"
                                          (rule "orRight" (formula "42"))
                                          (rule "orRight" (formula "42"))
                                          (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "39"))
                                          (rule "close" (formula "43") (ifseqformula "19"))
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "42"))
                                          (rule "orRight" (formula "42"))
                                          (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "40"))
                                          (rule "close" (formula "43") (ifseqformula "19"))
                                       )
                                    )
                                    (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort, result_0).length FALSE"
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "false_right" (formula "41"))
                                       (rule "andRight" (formula "39"))
                                       (branch "Case 1"
                                          (rule "orRight" (formula "39"))
                                          (rule "orRight" (formula "39"))
                                          (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "36"))
                                          (rule "close" (formula "40") (ifseqformula "16"))
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "39"))
                                          (rule "orRight" (formula "39"))
                                          (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "37"))
                                          (rule "close" (formula "40") (ifseqformula "16"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: array2seq2d(heapAfter_sort, result_0) = array2seq2d(heapAfter_sort_0, result_0) FALSE"
                              (rule "array2seq2dDef" (formula "30") (term "0") (inst "u=u") (userinteraction))
                              (rule "array2seq2dDef" (formula "30") (term "1") (inst "u=u") (userinteraction))
                              (rule "eqSymm" (formula "31"))
                              (rule "eqSymm" (formula "30"))
                              (rule "eqSymm" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "notLeft" (formula "29"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "30") (inst "iv=iv"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1"))
                              (rule "array2seqDef" (formula "29") (term "2,0") (inst "u=u_1"))
                              (rule "array2seqDef" (formula "29") (term "2,1") (inst "u=u_1"))
                              (rule "eqSeqDef" (formula "29") (inst "iv=iv"))
                              (rule "getOfSeqDef" (formula "29") (term "1,1,0,1"))
                              (rule "castDel" (formula "29") (term "2,1,1,0,1"))
                              (rule "castDel" (formula "29") (term "1,1,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "0,2,1,2,1,1,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "0,2,0,1,1,1,1,0,1"))
                              (rule "eqSymm" (formula "29") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0,1,0,1"))
                              (rule "times_zero_2" (formula "29") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,0,1"))
                              (rule "lenOfSeqDef" (formula "29") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "29") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "29") (term "1,1,1,0,0,1"))
                              (rule "lenOfSeqDef" (formula "29") (term "0,0"))
                              (rule "eqSymm" (formula "29") (term "0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,0"))
                              (rule "mul_literals" (formula "29") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "29") (term "1,1,0"))
                              (rule "getOfSeqDef" (formula "29") (term "1,1,0,1"))
                              (rule "castDel" (formula "29") (term "2,1,1,0,1"))
                              (rule "castDel" (formula "29") (term "1,1,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "0,2,1,2,1,1,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "0,2,0,1,1,1,1,0,1"))
                              (rule "eqSymm" (formula "29") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0,1,0,1"))
                              (rule "times_zero_2" (formula "29") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,0,1"))
                              (rule "lenOfSeqDef" (formula "29") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                              (rule "times_zero_2" (formula "29") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "allRight" (formula "29") (inst "sk=iv_4"))
                              (rule "impRight" (formula "29"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "31") (term "0,1,1,1") (inst "selectSK=arr_118"))
                              (rule "applyEq" (formula "32") (term "1,2,1,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "1,2,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "31") (term "1,2,1,0") (inst "selectSK=arr_119"))
                              (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                              (rule "replaceKnownSelect_taclet1010000100_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1010000100_1" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                              (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                              (rule "applyEqReverse" (formula "32") (term "1,2,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "nnf_imp2or" (formula "32") (term "0,1"))
                              (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,0,1"))
                              (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "arrayLengthNotNegative" (formula "26") (term "1,1,1,0,0"))
                              (rule "arrayLengthIsAShort" (formula "19") (term "1,1,1,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "arrayLengthNotNegative" (formula "19") (term "1,1,1,0,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "3") (inst "iv=iv"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "ifthenelse_split" (formula "33") (term "1"))
                              (branch "result_0.length >= 1 + iv_4 TRUE"
                                 (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "eqSeqDef" (formula "34") (inst "iv=iv"))
                                 (rule "getOfSeqDef" (formula "34") (term "1,1,0,1"))
                                 (rule "castDel" (formula "34") (term "1,1,1,0,1"))
                                 (rule "castDel" (formula "34") (term "2,1,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,2,1,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0,1,1,0,1"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,1,0,1,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,0,1,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                                 (rule "eqSymm" (formula "34") (term "0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                 (rule "lenOfSeqDef" (formula "34") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,1,0,0,1"))
                                 (rule "getOfSeqDef" (formula "34") (term "0,1,0,1"))
                                 (rule "castDel" (formula "34") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "34") (term "1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "allRight" (formula "34") (inst "sk=iv_5"))
                                 (rule "impRight" (formula "34"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "36") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "1,1") (inst "selectSK=arr_120"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=arr_121"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet01010000100_4" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
                                 (rule "lenNonNegative" (formula "39") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "cut_direct" (formula "40") (term "0"))
                                 (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort_0, result_0).length TRUE"
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "allRight" (formula "41") (inst "sk=iv_6"))
                                    (rule "orRight" (formula "41"))
                                    (rule "orRight" (formula "41"))
                                    (rule "inEqSimp_geqRight" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "42"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "ifthenelse_split" (formula "11") (term "0"))
                                    (branch "result_0.length >= 1 TRUE"
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "ifthenelse_split" (formula "8") (term "0"))
                                       (branch " result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>.length >= 1 TRUE"
                                          (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "9")))
                                          (rule "ifthenelse_split" (formula "6") (term "0"))
                                          (branch " ! result_0[iv_4]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "6"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "40")))
                                             (rule "ifthenelse_negated" (formula "5") (term "0"))
                                             (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "22") (ifseqformula "41"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "narrowSelectArrayType" (formula "5") (term "1,0") (ifseqformula "22") (ifseqformula "41"))
                                             (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "31") (ifseqformula "41"))
                                             (rule "allLeft" (formula "29") (inst "t=iv_4"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                             (rule "leq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "notLeft" (formula "29"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_124"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "22") (ifseqformula "49"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch " result_0[iv_4].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "closeTrue" (formula "44"))
                                             )
                                             (branch " result_0[iv_4].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                                (rule "close" (formula "40") (ifseqformula "22"))
                                             )
                                          )
                                          (branch " ! result_0[iv_4]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "eqSymm" (formula "42"))
                                             (rule "allLeft" (formula "29") (inst "t=iv_4"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                             (rule "leq_literals" (formula "29") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "notLeft" (formula "29"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_123"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "50")))
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "22") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "43")))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch " result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>.length >= 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "40"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "times_zero_2" (formula "9") (term "1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                    )
                                    (branch "result_0.length >= 1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "41"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "times_zero_2" (formula "12") (term "1,0"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "closeFalse" (formula "11"))
                                    )
                                 )
                                 (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort_0, result_0).length FALSE"
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "false_right" (formula "41"))
                                    (rule "ifthenelse_split" (formula "8") (term "0"))
                                    (branch "result_0.length >= 1 TRUE"
                                       (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch " result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>.length >= 1 TRUE"
                                          (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "6")))
                                          (rule "allLeft" (formula "27") (inst "t=iv_4"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "notLeft" (formula "27"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_122"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "20") (ifseqformula "45"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "ifthenelse_negated" (formula "3") (term "0"))
                                          (rule "ifthenelse_negated" (formula "2") (term "0"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "13") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "20") (ifseqformula "38"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " (result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "closeTrue" (formula "40"))
                                          )
                                          (branch " (result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " result_0[iv_4].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "closeTrue" (formula "41"))
                                             )
                                             (branch " result_0[iv_4].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "39"))
                                                (rule "close" (formula "37") (ifseqformula "19"))
                                             )
                                          )
                                       )
                                       (branch " result_0[iv_4]@anon_heap_sort<<anonHeapFunction>>.length >= 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "37"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "result_0.length >= 1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "38"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                 )
                              )
                              (branch "result_0.length >= 1 + iv_4 FALSE"
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                                 (rule "closeTrue" (formula "34"))
                              )
                           )
                        )
                        (branch "CUT: array2seq2d(heapAfter_sort_0, arr1) = array2seq2d(heapAfter_sort, arr1) FALSE"
                           (rule "array2seq2dDef" (formula "27") (term "0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "27") (term "1") (inst "u=u") (userinteraction))
                           (rule "eqSymm" (formula "26"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                           (rule "eqSeqDef" (formula "26") (inst "iv=iv"))
                           (rule "getOfSeqDef" (formula "26") (term "1,1,0,1"))
                           (rule "castDel" (formula "26") (term "2,1,1,0,1"))
                           (rule "castDel" (formula "26") (term "1,1,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "0,2,1,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0,1"))
                           (rule "getOfSeqDef" (formula "26") (term "0,1,0,1"))
                           (rule "castDel" (formula "26") (term "1,0,1,0,1"))
                           (rule "castDel" (formula "26") (term "2,0,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "0,2,1,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_2" (formula "26") (term "1,1,1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "26") (term "1,1,0,0,1,0,1"))
                           (rule "lenOfSeqDef" (formula "26") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,1,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "26") (term "1,1,1,0,0,1"))
                           (rule "lenOfSeqDef" (formula "26") (term "0,0"))
                           (rule "eqSymm" (formula "26") (term "0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0"))
                           (rule "times_zero_2" (formula "26") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "26") (term "1,1,0"))
                           (rule "lenOfSeqDef" (formula "26") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "26") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=iv_1"))
                           (rule "impRight" (formula "26"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                           (rule "eqSymm" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                           (rule "eqSymm" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                           (rule "eqSymm" (formula "28"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "eqSymm" (formula "28"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "29") (inst "iv=iv"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1"))
                           (rule "array2seqDef" (formula "28") (term "1,1") (inst "u=u"))
                           (rule "eqSymm" (formula "28"))
                           (rule "array2seqDef" (formula "28") (term "1,1") (inst "u=u"))
                           (rule "eqSymm" (formula "28"))
                           (rule "pullOutSelect" (formula "28") (term "0,1,1,0") (inst "selectSK=arr_115"))
                           (rule "applyEq" (formula "29") (term "1,2,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "29") (term "0,1,1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "29") (term "1,2,1,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "7")))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "29") (term "1,2,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "29") (term "1,2,1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "29") (term "0,1"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "arr1.length >= 1 TRUE"
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "3")))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "eqSeqDef" (formula "28") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "28") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "28") (term "1,1,0"))
                              (rule "mul_literals" (formula "28") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "28") (term "1,1,0"))
                              (rule "lenOfSeqDef" (formula "28") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "28") (term "1,1,1,0,0,1"))
                              (rule "times_zero_2" (formula "28") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "28") (term "1,1,1,0,0,1"))
                              (rule "lenOfSeqDef" (formula "28") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "28") (term "1,0,0"))
                              (rule "times_zero_2" (formula "28") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "allRight" (formula "28") (inst "sk=iv_2"))
                              (rule "impRight" (formula "28"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqDef" (formula "30") (term "1"))
                              (rule "castDel" (formula "30") (term "1,1"))
                              (rule "castDel" (formula "30") (term "2,1"))
                              (rule "add_zero_right" (formula "30") (term "0,2,1,1"))
                              (rule "replace_known_left" (formula "30") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polySimp_elimSub" (formula "30") (term "1,0,1"))
                              (rule "mul_literals" (formula "30") (term "1,1,0,1"))
                              (rule "add_zero_right" (formula "30") (term "1,0,1"))
                              (rule "getOfSeqDef" (formula "30") (term "0"))
                              (rule "castDel" (formula "30") (term "1,0"))
                              (rule "castDel" (formula "30") (term "2,0"))
                              (rule "add_zero_right" (formula "30") (term "0,2,1,0"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polySimp_elimSub" (formula "30") (term "1,0,0"))
                              (rule "times_zero_2" (formula "30") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                              (rule "eqSymm" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "30"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=arr_116"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "eqSymm" (formula "31"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_117"))
                              (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "arrayLengthIsAShort" (formula "27") (term "1,1,1,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "arrayLengthNotNegative" (formula "20") (term "1,1,1,0,0"))
                              (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "lenNonNegative" (formula "35") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "cut_direct" (formula "36") (term "0"))
                              (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort_0, result_0).length TRUE"
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "allRight" (formula "37") (inst "sk=iv_3"))
                                 (rule "orRight" (formula "37"))
                                 (rule "orRight" (formula "37"))
                                 (rule "inEqSimp_leqRight" (formula "37"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "ifthenelse_split" (formula "8") (term "0"))
                                 (branch "arr1[iv_1].length >= 1 TRUE"
                                    (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "9")))
                                    (rule "allLeft" (formula "19") (inst "t=iv_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "ifthenelse_negated" (formula "6") (term "0"))
                                    (rule "ifthenelse_negated" (formula "5") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "29") (ifseqformula "38"))
                                    (rule "narrowSelectArrayType" (formula "5") (term "1,0") (ifseqformula "15") (ifseqformula "38"))
                                    (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "21") (ifseqformula "38"))
                                    (rule "allLeft" (formula "20") (inst "t=iv_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "arr1[iv_1].<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "closeTrue" (formula "41"))
                                    )
                                    (branch "arr1[iv_1].<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "40"))
                                       (rule "close" (formula "38") (ifseqformula "15"))
                                    )
                                 )
                                 (branch "arr1[iv_1].length >= 1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "37"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                              )
                              (branch "CUT: array2seq2d(heapAfter_sort_0, result_1).length = array2seq2d(heapAfter_sort_0, result_0).length FALSE"
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "ifthenelse_split" (formula "5") (term "0"))
                                 (branch "arr1[iv_1].length >= 1 TRUE"
                                    (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "6")))
                                    (rule "allLeft" (formula "16") (inst "t=iv_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                    (rule "leq_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "12") (ifseqformula "35"))
                                    (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "18") (ifseqformula "35"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "26") (ifseqformula "35"))
                                    (rule "allLeft" (formula "17") (inst "t=iv_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "arr1[iv_1].<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "arr1[iv_1].<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "37"))
                                       (rule "close" (formula "35") (ifseqformula "12"))
                                    )
                                 )
                                 (branch "arr1[iv_1].length >= 1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "34"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "times_zero_2" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                              )
                           )
                           (branch "arr1.length >= 1 FALSE"
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "33") (inst "sk=f_1"))
                     (rule "allRight" (formula "33") (inst "sk=o_1"))
                     (rule "orRight" (formula "33"))
                     (rule "eqSymm" (formula "34"))
                     (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                     (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_1_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                     (rule "eqSymm" (formula "34"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "25") (term "0"))
                     (branch " array2seq2d(heapAfter_sort_0, result_1) = array2seq2d(heapAfter_sort_0, result_0) TRUE"
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "25"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "27"))
                           (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "37"))
                           (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "28")))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "36") (ifseqformula "1"))
                        )
                     )
                     (branch " array2seq2d(heapAfter_sort_0, result_1) = array2seq2d(heapAfter_sort_0, result_0) FALSE"
                        (rule "eqSymm" (formula "25"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "notLeft" (formula "25"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                        (rule "nnf_imp2or" (formula "26") (term "0,1"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "26"))
                           (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "37"))
                           (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "36") (ifseqformula "1"))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (equals)"
                  (builtin "One Step Simplification" (formula "32"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,0") (ifseqformula "18"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1,0") (ifseqformula "11"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "24"))
                  (rule "notLeft" (formula "24"))
                  (rule "close" (formula "27") (ifseqformula "26"))
               )
               (branch
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "27")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "26")))
                  (rule "andRight" (formula "31") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "31") (userinteraction))
                     (branch "Case 1"
                        (rule "array2seq2dDef" (formula "20") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "20") (term "1") (inst "u=u") (userinteraction))
                        (rule "seqPermDefLeft" (formula "20") (inst "s=s") (inst "iv=iv") (userinteraction))
                        (rule "array2seq2dDef" (formula "13") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "13") (term "1") (inst "u=u") (userinteraction))
                        (rule "seqPermDefLeft" (formula "13") (inst "s=s") (inst "iv=iv") (userinteraction))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "22"))
                        (rule "exLeft" (formula "14") (inst "sk=s_1"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "exLeft" (formula "25") (inst "sk=s_2"))
                        (rule "andLeft" (formula "25"))
                        (rule "andLeft" (formula "25"))
                        (rule "eqSymm" (formula "39"))
                        (rule "eqSymm" (formula "14"))
                        (rule "eqSymm" (formula "25"))
                        (rule "lenOfSeqDef" (formula "13") (term "1"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                        (rule "times_zero_2" (formula "13") (term "1,1,1"))
                        (rule "add_zero_right" (formula "13") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "13") (term "0"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0"))
                        (rule "add_zero_right" (formula "13") (term "1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "1"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1"))
                        (rule "add_zero_right" (formula "24") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "24") (term "0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,0"))
                        (rule "getOfSeqDef" (formula "16") (term "0,1,0"))
                        (rule "castDel" (formula "16") (term "1,0,1,0"))
                        (rule "castDel" (formula "16") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "16") (term "0,2,1,1,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0"))
                        (rule "getOfSeqDef" (formula "27") (term "1,1,0"))
                        (rule "castDel" (formula "27") (term "1,1,1,0"))
                        (rule "castDel" (formula "27") (term "2,1,1,0"))
                        (rule "add_zero_right" (formula "27") (term "0,2,1,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0"))
                        (rule "getOfSeqDef" (formula "27") (term "0,1,0"))
                        (rule "castDel" (formula "27") (term "1,0,1,0"))
                        (rule "castDel" (formula "27") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "27") (term "0,2,1,1,0,1,0"))
                        (rule "eqSymm" (formula "27") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "14") (term "0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                        (rule "times_zero_2" (formula "14") (term "1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                        (rule "getOfSeqDef" (formula "16") (term "0,1,0"))
                        (rule "castDel" (formula "16") (term "1,0,1,0"))
                        (rule "castDel" (formula "16") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "16") (term "0,2,1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "27") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "27") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                        (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "0,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEqRigid" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "23") (term "1") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "16") (term "2,0") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "16") (term "2,1") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "27") (term "2,1") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "27") (term "2,0") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "15") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "15") (term "1,0"))
                        (rule "array2seqDef" (formula "26") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "26") (term "1,0"))
                        (rule "array2seqDef" (formula "15") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "15") (term "1,0"))
                        (rule "array2seqDef" (formula "26") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "26") (term "1,0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "26") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "arrayLengthNotNegative" (formula "28") (term "1,1,1,0,0"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthIsAShort" (formula "27") (term "1,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,0"))
                        (rule "lenNonNegative" (formula "13") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "ifthenelse_to_or_right" (formula "16") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,1,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,1,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,1,0,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0,0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0,1,0"))
                        (rule "commute_or" (formula "16") (term "1,1,0"))
                        (rule "commute_or" (formula "16") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
                        (rule "commute_or" (formula "16") (term "0,0,1,1,0"))
                        (rule "cnf_rightDist" (formula "16") (term "1,1,0"))
                        (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
                        (rule "shift_paren_or" (formula "16") (term "1,1,1,0"))
                        (rule "commute_or_2" (formula "16") (term "0,0,1,1,0"))
                        (rule "ifthenelse_to_or_left" (formula "28") (term "0,0,0"))
                        (rule "eqSymm" (formula "28") (term "1,0,0,0,0"))
                        (rule "eqSymm" (formula "28") (term "1,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,1,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,1,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "0,0,1,1,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0,0"))
                        (rule "commute_or" (formula "28") (term "0,0"))
                        (rule "commute_or_2" (formula "28") (term "0"))
                        (rule "commute_or_2" (formula "28") (term "0,1,0"))
                        (rule "commute_or" (formula "28") (term "1,1,0"))
                        (rule "commute_or" (formula "28") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "28") (term "0,1,1,0"))
                        (rule "shift_paren_or" (formula "16") (term "0,1,1,1,0"))
                        (rule "cnf_rightDist" (formula "16") (term "0"))
                        (rule "distr_forallAnd" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "commute_or" (formula "17") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "shift_paren_or" (formula "16") (term "0,0"))
                        (rule "cnf_rightDist" (formula "17") (term "0"))
                        (rule "distr_forallAnd" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "shift_paren_or" (formula "17") (term "0"))
                        (rule "commute_or_2" (formula "18") (term "0,0"))
                        (rule "shift_paren_or" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "16") (term "0,0,0"))
                        (rule "commute_or" (formula "18") (term "0,0,0,0"))
                        (rule "commute_or" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                        (rule "ifthenelse_split" (formula "12") (term "0"))
                        (branch "result_0.length >= 1 TRUE"
                           (rule "eqSymm" (formula "13"))
                           (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "14") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "12"))
                           (rule "leq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "commute_or" (formula "29") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "0,1,0,0,0"))
                           (rule "leq_literals" (formula "18") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "ifthenelse_split" (formula "25") (term "0"))
                           (branch "result_1.length >= 1 TRUE"
                              (rule "close" (formula "42") (ifseqformula "26"))
                           )
                           (branch "result_1.length >= 1 FALSE"
                              (rule "eqSymm" (formula "25"))
                              (rule "inEqSimp_geqRight" (formula "34"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "26"))
                              (rule "seqDef_lower_equals_upper" (formula "19") (term "0"))
                              (rule "seqPermEmpty1" (formula "19"))
                              (rule "eqSymm" (formula "19"))
                              (rule "eqSeqEmpty" (formula "19"))
                              (rule "lenOfSeqDef" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "polySimp_elimSub" (formula "19") (term "0,1"))
                              (rule "times_zero_2" (formula "19") (term "1,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                        )
                        (branch "result_0.length >= 1 FALSE"
                           (rule "eqSymm" (formula "12"))
                           (rule "inEqSimp_geqRight" (formula "36"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "18") (term "1,1,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0,0") (ifseqformula "18"))
                           (rule "add_zero_right" (formula "17") (term "1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                           (rule "seqDef_lower_equals_upper" (formula "19") (term "0"))
                           (rule "seqPermEmpty1" (formula "19"))
                           (rule "eqSymm" (formula "19"))
                           (rule "eqSeqEmpty" (formula "19"))
                           (rule "lenOfSeqDef" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "polySimp_elimSub" (formula "19") (term "0,1"))
                           (rule "mul_literals" (formula "19") (term "1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "18"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "applyEq" (formula "42") (term "1") (ifseqformula "18"))
                           (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "inEqSimp_geqRight" (formula "34"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "41"))
                           (rule "add_zero_right" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "41") (ifseqformula "1"))
                           (rule "mul_literals" (formula "41") (term "1,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0"))
                           (rule "qeq_literals" (formula "41") (term "0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "false_right" (formula "41"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "30"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                        (rule "nonNull" (formula "30") (term "0") (inst "i=i"))
                        (rule "sub_literals" (formula "30") (term "2,1,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
                        (rule "greater_literals" (formula "30") (term "0,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                        (rule "nonNull" (formula "30") (term "1") (inst "i=i"))
                        (rule "greater_literals" (formula "30") (term "0,1,1"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "25")))
                        (rule "sub_literals" (formula "30") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1"))
                        (rule "nnf_imp2or" (formula "30") (term "0,0"))
                        (rule "nnf_imp2or" (formula "30") (term "0,1"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0,1"))
                        (rule "andRight" (formula "30"))
                        (branch "Case 1"
                           (rule "allRight" (formula "30") (inst "sk=i_7"))
                           (rule "orRight" (formula "30"))
                           (rule "orRight" (formula "30"))
                           (rule "notRight" (formula "32"))
                           (rule "inEqSimp_leqRight" (formula "31"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_114"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "14"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "29"))
                           (rule "allLeft" (formula "17") (inst "t=i_7"))
                           (rule "replaceKnownSelect_taclet010200100_1" (formula "17") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010200100_2" (formula "17") (term "0,0,0,0"))
                           (rule "narrowSelectArrayType" (formula "17") (term "0,0,0,0") (ifseqformula "12") (ifseqformula "30"))
                           (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "30") (inst "sk=i_6"))
                           (rule "orRight" (formula "30"))
                           (rule "orRight" (formula "30"))
                           (rule "notRight" (formula "32"))
                           (rule "inEqSimp_leqRight" (formula "31"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_113"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "28"))
                           (rule "allLeft" (formula "24") (inst "t=i_6"))
                           (rule "replaceKnownSelect_taclet110200100_0" (formula "24") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110200100_1" (formula "24") (term "0,0,0,0"))
                           (rule "narrowSelectArrayType" (formula "24") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "29"))
                           (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "24"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1") (ifseqformula "11"))
                     (rule "wellFormedAnonEQ" (formula "31") (term "0,0") (ifseqformula "18"))
                     (rule "wellFormedAnonEQ" (formula "31") (term "0,0,0") (ifseqformula "11"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "31") (term "1,1") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "2")) (ifInst ""  (formula "10")) (ifInst ""  (formula "17")) (ifInst ""  (formula "28")) (ifInst ""  (formula "12")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                     (rule "closeTrue" (formula "31"))
                  )
               )
            )
            (branch "Exceptional Post (sort)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0,1,1,0,1,1") (ifseqformula "9"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "16") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0") (ifseqformula "9"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "17"))
               (rule "close" (formula "20") (ifseqformula "19"))
            )
            (branch
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,1") (ifseqformula "9"))
               (rule "wellFormedAnonEQ" (formula "19") (term "0,1") (ifseqformula "9"))
               (rule "replace_known_left" (formula "19") (term "0,1,1") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "2")) (ifInst ""  (formula "8")))
               (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
               (rule "nonNull" (formula "19") (inst "i=i"))
               (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
               (rule "greater_literals" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "allRight" (formula "19") (inst "sk=i_5"))
               (rule "impRight" (formula "19"))
               (rule "notRight" (formula "20"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "4"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_112"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "8")))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "5") (ifseqformula "21"))
               (rule "allLeft" (formula "10") (inst "t=i_5"))
               (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "10") (term "0,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "3"))
               (rule "andLeft" (formula "10"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "leq_literals" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
         )
         (branch "Exceptional Post (sort)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "9") (term "0,2,2,0,1,0,0,1,0,1,1"))
            (rule "andLeft" (formula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "10"))
            (rule "close" (formula "13") (ifseqformula "12"))
         )
         (branch "Pre (sort)"
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "2")) (ifInst ""  (formula "8")) (ifInst ""  (formula "3")))
            (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
            (rule "nonNull" (formula "10") (inst "i=i"))
            (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
            (rule "greater_literals" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "allRight" (formula "10") (inst "sk=i_2"))
            (rule "impRight" (formula "10"))
            (rule "notRight" (formula "11"))
            (rule "andLeft" (formula "2"))
            (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "5") (ifseqformula "11"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "allLeft" (formula "9") (inst "t=i_2"))
            (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "9") (term "0,0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
   )
   (branch "Null Reference (_arr2 = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (_arr1 = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
   (rule "closeFalse" (formula "1"))
)
)

}
