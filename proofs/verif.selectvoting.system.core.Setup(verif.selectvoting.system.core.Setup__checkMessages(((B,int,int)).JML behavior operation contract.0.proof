\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 11 13:29:15 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jul 11 13:29:15 CEST 2017
name=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:checkMessages([[B,int,int)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:checkMessages([[B,int,int)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "1947")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "msg,numberOfMessages,lengthOfMessages,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,1,1,0,0,1"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,1,1,0,0,1"))
(rule "mul_literals" (formula "4") (term "0,1,1,0,0,1,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,1,1,0,0,1"))
(rule "nnf_imp2or" (formula "4") (term "0,1,1,1,0,0,1"))
(rule "nnf_notAnd" (formula "4") (term "0,0,1,1,1,0,0,1"))
(rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,1,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1,1,1,0,0,1"))
(rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,1,1,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,1,1,1,0,0,1"))
(rule "add_literals" (formula "4") (term "0,0,0,1,0,0,1,1,1,0,0,1"))
(rule "add_zero_left" (formula "4") (term "0,0,1,0,0,1,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,1,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,1,1,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,1,1,1,0,0,1"))
(rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,1,1,1,0,0,1"))
(rule "add_zero_right" (formula "4") (term "0,0,0,0,0,1,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1,1,1,0,0,1"))
(rule "mul_literals" (formula "4") (term "1,0,0,0,1,1,1,0,0,1"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_checkMessages,savedHeapBefore_checkMessages,_lengthOfMessagesBefore_checkMessages,_msgBefore_checkMessages,_numberOfMessagesBefore_checkMessages"))
(builtin "One Step Simplification" (formula "4"))
(rule "ifUnfold" (formula "4") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x"))
(rule "compound_assignment_5_nonsimple" (formula "4") (term "1"))
(rule "ifElseUnfold" (formula "4") (term "1") (inst "#boolv=x_1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
(rule "equality_comparison_simple" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "ifElseSplit" (formula "4"))
(branch "if x_1 true"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "ifEnterThen" (formula "4") (term "1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "blockThrow" (formula "4") (term "1"))
   (rule "throwUnfold" (formula "4") (term "1") (inst "#v0=t"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "t_3"))
   (builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_Throwable_2,self_2,exc_4,heapAfter_Throwable_2,anon_heap_Throwable_2") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
   (branch "Post (Throwable)"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "6"))
      (rule "notLeft" (formula "6"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=java_lang_Throwable_message_3"))
      (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
      (rule "hideAuxiliaryEq" (formula "8"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "8") (term "0"))
      (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=java_lang_Throwable_cause_3"))
      (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
      (rule "hideAuxiliaryEq" (formula "9"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "9") (term "0"))
      (rule "commuteUnion" (formula "5") (term "1,0"))
      (rule "methodCallThrow" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "tryCatchThrow" (formula "14") (term "1"))
      (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_15"))
      (rule "equality_comparison_simple" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "replace_known_right" (formula "14") (term "0,0,1,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "ifElseSplit" (formula "14"))
      (branch "if x_15 true"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_15 false"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "14"))
         (branch "if t_3 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "e_7"))
            (rule "reference_type_cast" (formula "14") (term "1"))
            (branch "Normal Execution (t_3 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "emptyModality" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
               (rule "allRight" (formula "14") (inst "sk=f_0"))
               (rule "allRight" (formula "14") (inst "sk=o_0"))
               (rule "orRight" (formula "14"))
               (rule "eqSymm" (formula "15"))
               (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "eqSymm" (formula "16"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "commute_and" (formula "1") (term "1,0,0,0"))
               (rule "commute_and" (formula "1") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
               (rule "commute_or" (formula "1") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
               (rule "commute_and" (formula "1") (term "1,0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "commute_or" (formula "1") (term "1,0,0,0"))
               (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
               (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
               (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self_2 ∧ ( f_0 = java.lang.Throwable::$cause ∨ f_0 = java.lang.Throwable::$message) ∧ (f_0 = java.lang.Throwable::$cause ∨ o_0 = self_2) ∧ (f_0 = java.lang.Throwable::$message ∨ o_0 = self_2) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "eqSymm" (formula "20"))
                  (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "notRight" (formula "17"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "close" (formula "17") (ifseqformula "1"))
               )
               (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self_2 ∧ ( f_0 = java.lang.Throwable::$cause ∨ f_0 = java.lang.Throwable::$message) ∧ (f_0 = java.lang.Throwable::$cause ∨ o_0 = self_2) ∧ (f_0 = java.lang.Throwable::$message ∨ o_0 = self_2) FALSE"
                  (rule "close" (formula "17") (ifseqformula "1"))
               )
            )
            (branch "ClassCastException (!(t_3 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "closeTrue" (formula "14"))
            )
         )
         (branch "if t_3 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (Throwable)"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0,0") (ifseqformula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "6"))
      (rule "close" (formula "14") (ifseqformula "13"))
   )
   (branch "Pre (Throwable)"
      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
      (rule "closeTrue" (formula "4"))
   )
)
(branch "if x_1 false"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "compound_inequality_comparison_1" (formula "5") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
   (rule "assignment_read_length" (formula "5") (term "1"))
   (branch "Normal Execution (_msg != null)"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
      (rule "false_right" (formula "5"))
      (rule "inequality_comparison_simple" (formula "5") (term "1"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "blockEmpty" (formula "5") (term "1"))
      (rule "ifSplit" (formula "5"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "blockThrow" (formula "6") (term "1"))
         (rule "throwUnfold" (formula "6") (term "1") (inst "#v0=t"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "t_2"))
         (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_Throwable_1,self_1,exc_3,heapAfter_Throwable_1,anon_heap_Throwable_1") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
         (branch "Post (Throwable)"
            (builtin "One Step Simplification" (formula "5"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0,1,0") (ifseqformula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "assignment" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_lang_Throwable_cause_2"))
            (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
            (rule "hideAuxiliaryEq" (formula "10"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_1" (formula "10") (term "0"))
            (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=java_lang_Throwable_message_2"))
            (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
            (rule "hideAuxiliaryEq" (formula "9"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_3" (formula "9") (term "0"))
            (rule "commuteUnion" (formula "5") (term "1,0"))
            (rule "methodCallThrow" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "tryCatchThrow" (formula "16") (term "1"))
            (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_14"))
            (rule "equality_comparison_simple" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "ifElseSplit" (formula "16"))
            (branch "if x_14 true"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_14 false"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "16"))
               (branch "if t_2 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "e_6"))
                  (rule "reference_type_cast" (formula "16") (term "1"))
                  (branch "Normal Execution (t_2 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "emptyModality" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                     (rule "allRight" (formula "16") (inst "sk=f_1"))
                     (rule "allRight" (formula "16") (inst "sk=o_1"))
                     (rule "orRight" (formula "16"))
                     (rule "eqSymm" (formula "17"))
                     (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_1_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "eqSymm" (formula "18"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and" (formula "1") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                     (rule "commute_and" (formula "1") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                     (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0"))
                     (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_1 ∧ ( f_1 = java.lang.Throwable::$cause ∨ f_1 = java.lang.Throwable::$message) ∧ (f_1 = java.lang.Throwable::$cause ∨ o_1 = self_1) ∧ (f_1 = java.lang.Throwable::$message ∨ o_1 = self_1) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "22"))
                        (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                        (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "16") (ifseqformula "1"))
                     )
                     (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_1 ∧ ( f_1 = java.lang.Throwable::$cause ∨ f_1 = java.lang.Throwable::$message) ∧ (f_1 = java.lang.Throwable::$cause ∨ o_1 = self_1) ∧ (f_1 = java.lang.Throwable::$message ∨ o_1 = self_1) FALSE"
                        (rule "close" (formula "19") (ifseqformula "1"))
                     )
                  )
                  (branch "ClassCastException (!(t_2 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "closeTrue" (formula "16"))
                  )
               )
               (branch "if t_2 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (Throwable)"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0,0") (ifseqformula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0,1,0") (ifseqformula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "6"))
            (rule "close" (formula "13") (ifseqformula "12"))
         )
         (branch "Pre (Throwable)"
            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "6"))
         )
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "for_to_while" (formula "6") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "i"))
         (rule "assignment" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "Loop Invariant" (formula "6") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "eqSymm" (formula "6") (term "1,0"))
            (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1"))
            (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1"))
            (rule "mul_literals" (formula "6") (term "1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "6") (term "0,1"))
            (rule "nnf_notAnd" (formula "6") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0,1"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "arrayLengthNotNegative" (formula "2") (term "0"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Body Preserves Invariant"
            (builtin "One Step Simplification" (formula "6"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "translateJavaSubInt" (formula "8") (term "0,1,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "8") (term "0,1,1,1,0,1"))
            (rule "andLeft" (formula "6"))
            (rule "impRight" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "eqSymm" (formula "12") (term "1,0,0,0,1,1,0,1"))
            (rule "eqSymm" (formula "12") (term "1,0,0,1,0,1,1,0,1"))
            (rule "eqSymm" (formula "9"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "exc_1"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "thrownExc"))
            (rule "blockThrow" (formula "11") (term "1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "11") (term "0,1,0,0,1,1,0,1"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "cnf_rightDist" (formula "8") (term "0"))
            (rule "distr_forallAnd" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "commute_or" (formula "9") (term "0"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "less_than_comparison_simple" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "notRight" (formula "10"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
            (rule "less_than_comparison_simple" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0"))
            (rule "replace_known_left" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "arrayLengthIsAShort" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "arrayLengthNotNegative" (formula "2") (term "0"))
            (rule "ifSplit" (formula "12"))
            (branch "if x_3 true"
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_4"))
               (rule "compound_equality_comparison_1" (formula "12") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "12") (term "1"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr"))
               (rule "assignment_array2" (formula "12") (term "1"))
               (branch "Normal Execution (_msg != null)"
                  (builtin "One Step Simplification" (formula "13"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                  (rule "orRight" (formula "12"))
                  (rule "inEqSimp_leqRight" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "13") (term "0,1,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "7")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001101_1" (formula "13") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "equality_comparison_simple" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "ifSplit" (formula "13"))
                  (branch "if x_4 true"
                     (builtin "One Step Simplification" (formula "14"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "blockThrow" (formula "14") (term "1"))
                     (rule "blockThrow" (formula "14") (term "1"))
                     (rule "throwUnfold" (formula "14") (term "1") (inst "#v0=t"))
                     (rule "variableDeclarationAssign" (formula "14") (term "1"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "t_1"))
                     (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_Throwable_0,self_0,exc_2,heapAfter_Throwable_0,anon_heap_Throwable_0") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
                     (branch "Post (Throwable)"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0,1,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "19"))
                        (rule "notLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "orRight" (formula "21"))
                        (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
                        (rule "assignment" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=java_lang_Throwable_cause_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00001101_3" (formula "19") (term "0"))
                        (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=java_lang_Throwable_message_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
                        (rule "hideAuxiliaryEq" (formula "18"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00001101_5" (formula "18") (term "0"))
                        (rule "commuteUnion" (formula "14") (term "1,0"))
                        (rule "tryCatchThrow" (formula "25") (term "1"))
                        (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_12"))
                        (rule "equality_comparison_simple" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "ifElseSplit" (formula "25"))
                        (branch "if x_12 true"
                           (builtin "One Step Simplification" (formula "26"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_12 false"
                           (builtin "One Step Simplification" (formula "26"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "25"))
                           (branch "if t_1 instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "e_4"))
                              (rule "reference_type_cast" (formula "25") (term "1"))
                              (branch "Normal Execution (t_1 instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "assignment" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "methodCallEmpty" (formula "25") (term "1"))
                                 (rule "emptyModality" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "methodCallThrow" (formula "25") (term "1"))
                                 (rule "tryCatchThrow" (formula "25") (term "1"))
                                 (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_13"))
                                 (rule "equality_comparison_simple" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "ifElseSplit" (formula "25"))
                                 (branch "if x_13 true"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_13 false"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "25"))
                                    (branch "if thrownExc instanceof java.lang.Throwable true"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "25") (term "1") (newnames "e_5"))
                                       (rule "reference_type_cast" (formula "25") (term "1"))
                                       (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "assignment" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "emptyModality" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                          (rule "allRight" (formula "25") (inst "sk=f_2"))
                                          (rule "allRight" (formula "25") (inst "sk=o_2"))
                                          (rule "orRight" (formula "25"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_2_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "1") (term "1,0,0,0,0"))
                                          (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0,0,0"))
                                          (rule "commute_and" (formula "1") (term "1,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                          (rule "commute_and" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬f_2 = java.lang.Object::<created> ∧ o_2 = self_0 ∧ ( f_2 = java.lang.Throwable::$cause ∨ f_2 = java.lang.Throwable::$message) ∧ (f_2 = java.lang.Throwable::$cause ∨ o_2 = self_0) ∧ (f_2 = java.lang.Throwable::$message ∨ o_2 = self_0) ∨ ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "orLeft" (formula "1"))
                                             (branch " ¬f_2 = java.lang.Object::<created> ∧ o_2 = self_0 ∧ ( f_2 = java.lang.Throwable::$cause ∨ f_2 = java.lang.Throwable::$message) ∧ (f_2 = java.lang.Throwable::$cause ∨ o_2 = self_0) ∧ (f_2 = java.lang.Throwable::$message ∨ o_2 = self_0)"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "27") (term "1,0,0,1") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "notRight" (formula "27"))
                                                (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2"))
                                                (rule "close" (formula "26") (ifseqformula "2"))
                                             )
                                             (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE)"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "21"))
                                                (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "20")))
                                                (rule "closeTrue" (formula "27"))
                                             )
                                          )
                                          (branch " ¬f_2 = java.lang.Object::<created> ∧ o_2 = self_0 ∧ ( f_2 = java.lang.Throwable::$cause ∨ f_2 = java.lang.Throwable::$message) ∧ (f_2 = java.lang.Throwable::$cause ∨ o_2 = self_0) ∧ (f_2 = java.lang.Throwable::$message ∨ o_2 = self_0) ∨ ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "27") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeTrue" (formula "25"))
                                       )
                                    )
                                    (branch "if thrownExc instanceof java.lang.Throwable false"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "ClassCastException (!(t_1 instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeTrue" (formula "25"))
                              )
                           )
                           (branch "if t_1 instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Exceptional Post (Throwable)"
                        (builtin "One Step Simplification" (formula "14"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "andLeft" (formula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0,1,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "19"))
                        (rule "notLeft" (formula "15"))
                        (rule "close" (formula "22") (ifseqformula "21"))
                     )
                     (branch "Pre (Throwable)"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "wellFormedAnon" (formula "14"))
                        (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "6")))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
                  (branch "if x_4 false"
                     (builtin "One Step Simplification" (formula "14"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_7"))
                     (rule "compound_inequality_comparison_1" (formula "14") (term "1") (inst "#v0=x_8"))
                     (rule "variableDeclarationAssign" (formula "14") (term "1"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_8"))
                     (rule "eval_order_access2" (formula "14") (term "1") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "14") (term "1"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr_1"))
                     (rule "assignment_array2" (formula "14") (term "1"))
                     (branch "Normal Execution (_msg != null)"
                        (builtin "One Step Simplification" (formula "15"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
                        (rule "replaceKnownSelect_taclet001101_0" (formula "15") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet001101_1" (formula "15") (term "0,1,0"))
                        (rule "orRight" (formula "14"))
                        (rule "inEqSimp_ltRight" (formula "15"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "assignment_read_length" (formula "15") (term "1"))
                        (branch "Normal Execution (x_arr_1 != null)"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "13")))
                           (rule "false_right" (formula "15"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inequality_comparison_simple" (formula "14") (term "1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "ifSplit" (formula "14"))
                           (branch "if x_7 true"
                              (builtin "One Step Simplification" (formula "15"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "blockThrow" (formula "15") (term "1"))
                              (rule "throwUnfold" (formula "15") (term "1") (inst "#v0=t"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "t"))
                              (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_Throwable,self,exc_0,heapAfter_Throwable,anon_heap_Throwable") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
                              (branch "Post (Throwable)"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0,1,0") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "orRight" (formula "20"))
                                 (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "20")))
                                 (rule "assignment" (formula "26") (term "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "23")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00001001101_3" (formula "16") (term "0"))
                                 (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00001001101_5" (formula "17") (term "0"))
                                 (rule "commuteUnion" (formula "13") (term "1,0"))
                                 (rule "tryCatchThrow" (formula "26") (term "1"))
                                 (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_10"))
                                 (rule "equality_comparison_simple" (formula "26") (term "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,1,0") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "ifElseSplit" (formula "26"))
                                 (branch "if x_10 true"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_10 false"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "26"))
                                    (branch "if t instanceof java.lang.Throwable true"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "26") (term "1") (newnames "e_2"))
                                       (rule "reference_type_cast" (formula "26") (term "1"))
                                       (branch "Normal Execution (t instanceof java.lang.Throwable)"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "assignment" (formula "26") (term "1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "assignment" (formula "26") (term "1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "methodCallEmpty" (formula "26") (term "1"))
                                          (rule "emptyModality" (formula "26") (term "1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "methodCallThrow" (formula "26") (term "1"))
                                          (rule "tryCatchThrow" (formula "26") (term "1"))
                                          (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_11"))
                                          (rule "equality_comparison_simple" (formula "26") (term "1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "replace_known_right" (formula "26") (term "0,0,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "ifElseSplit" (formula "27"))
                                          (branch "if x_11 true"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_11 false"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "ifElseSplit" (formula "27"))
                                             (branch "if thrownExc instanceof java.lang.Throwable true"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                (rule "true_left" (formula "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "e_3"))
                                                (rule "reference_type_cast" (formula "27") (term "1"))
                                                (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "27") (term "1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "emptyModality" (formula "27") (term "1"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "23")))
                                                   (rule "allRight" (formula "27") (inst "sk=f_3"))
                                                   (rule "allRight" (formula "27") (inst "sk=o_3"))
                                                   (rule "orRight" (formula "27"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                                   (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_3_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "commute_and" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                   (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or" (formula "1") (term "0,1,0,0,0,0"))
                                                   (rule "commute_and" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "commute_or" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "1") (term "0,0,0,0,0,0"))
                                                   (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                   (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                   (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                   (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "commute_and" (formula "1") (term "0,0,0,0,0,0"))
                                                   (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " ¬f_3 = java.lang.Object::<created> ∧ o_3 = self ∧ ( f_3 = java.lang.Throwable::$cause ∨ f_3 = java.lang.Throwable::$message) ∧ (f_3 = java.lang.Throwable::$cause ∨ o_3 = self) ∧ (f_3 = java.lang.Throwable::$message ∨ o_3 = self) ∨ ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "orLeft" (formula "1"))
                                                      (branch " ¬f_3 = java.lang.Object::<created> ∧ o_3 = self ∧ ( f_3 = java.lang.Throwable::$cause ∨ f_3 = java.lang.Throwable::$message) ∧ (f_3 = java.lang.Throwable::$cause ∨ o_3 = self) ∧ (f_3 = java.lang.Throwable::$message ∨ o_3 = self)"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "25"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "notRight" (formula "29"))
                                                         (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                         (rule "close" (formula "24") (ifseqformula "1"))
                                                      )
                                                      (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE)"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "21"))
                                                         (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                                                         (rule "closeTrue" (formula "29"))
                                                      )
                                                   )
                                                   (branch " ¬f_3 = java.lang.Object::<created> ∧ o_3 = self ∧ ( f_3 = java.lang.Throwable::$cause ∨ f_3 = java.lang.Throwable::$message) ∧ (f_3 = java.lang.Throwable::$cause ∨ o_3 = self) ∧ (f_3 = java.lang.Throwable::$message ∨ o_3 = self) ∨ ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                      (rule "close" (formula "29") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeTrue" (formula "27"))
                                                )
                                             )
                                             (branch "if thrownExc instanceof java.lang.Throwable false"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "ClassCastException (!(t instanceof java.lang.Throwable))"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "closeTrue" (formula "26"))
                                       )
                                    )
                                    (branch "if t instanceof java.lang.Throwable false"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Exceptional Post (Throwable)"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0,1,0") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "close" (formula "20") (ifseqformula "19"))
                              )
                              (branch "Pre (Throwable)"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "wellFormedAnon" (formula "15"))
                                 (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "5")))
                                 (rule "closeTrue" (formula "15"))
                              )
                           )
                           (branch "if x_7 false"
                              (builtin "One Step Simplification" (formula "15"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "preincrement" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_9"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "assignmentAdditionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "tryEmpty" (formula "15") (term "1"))
                              (rule "methodCallEmpty" (formula "15") (term "1"))
                              (rule "emptyModality" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "5")))
                              (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                              (rule "precOfInt" (formula "15") (term "1"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1"))
                              (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,1,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,1,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,1,1"))
                              (rule "add_zero_right" (formula "15") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,1"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,1"))
                              (rule "add_literals" (formula "15") (term "1,0,1,1"))
                              (rule "times_zero_1" (formula "15") (term "0,1,1"))
                              (rule "leq_literals" (formula "15") (term "1,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0"))
                              (rule "replace_known_left" (formula "15") (term "1,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                              (rule "times_zero_2" (formula "15") (term "1,0,1"))
                              (rule "add_zero_right" (formula "15") (term "0,1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                              (rule "mul_literals" (formula "14") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                              (rule "leq_literals" (formula "14") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "andRight" (formula "14"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "14") (inst "sk=j_0"))
                                 (rule "orRight" (formula "14"))
                                 (rule "orRight" (formula "14"))
                                 (rule "inEqSimp_leqRight" (formula "14"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "15"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "pullOutSelect" (formula "16") (term "0,0,0") (inst "selectSK=arr_1"))
                                 (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "9")))
                                 (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "17") (term "0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "2") (term "0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                 (rule "cut_direct" (formula "17") (term "0,0"))
                                 (branch "CUT: msg[j_0] = null TRUE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "false_right" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "allLeft" (formula "16") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet01001001101_2" (formula "16") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01001001101_3" (formula "16") (term "0,0,1"))
                                    (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "arrayLengthNotNegative" (formula "16") (term "0,1"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "cut_direct" (formula "17") (term "0"))
                                    (branch "CUT: j_0 ≥ i_0 TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,0"))
                                       (rule "times_zero_1" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEqRigid" (formula "1") (term "0,2,0") (ifseqformula "16"))
                                       (rule "close" (formula "18") (ifseqformula "1"))
                                    )
                                    (branch "CUT: j_0 ≥ i_0 FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_geqRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "allLeft" (formula "15") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet01001001101_2" (formula "15") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet01001001101_3" (formula "15") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                       (rule "leq_literals" (formula "15") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                 )
                                 (branch "CUT: msg[j_0] = null FALSE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0,0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "17") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet01001001101_2" (formula "17") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01001001101_3" (formula "17") (term "0,0,1"))
                                    (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "17") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "3"))
                                    (rule "applyEq" (formula "23") (term "0,2,0,0") (ifseqformula "17"))
                                    (rule "close" (formula "23") (ifseqformula "7"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "14") (inst "sk=f_4"))
                                 (rule "allRight" (formula "14") (inst "sk=o_4"))
                                 (rule "orRight" (formula "14"))
                                 (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=f_4_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                 (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "closeTrue" (formula "16"))
                              )
                           )
                        )
                        (branch "Null Reference (x_arr_1 = null)"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (_msg = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_msg != null, but i Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "blockThrow" (formula "15") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (_msg = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (_msg != null, but i Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "blockThrow" (formula "13") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "3") (term "0,0"))
                  (rule "add_zero_left" (formula "3") (term "0"))
                  (rule "methodCallThrow" (formula "13") (term "1,0,0,1"))
                  (rule "tryCatchThrow" (formula "13") (term "1,0,0,1"))
                  (rule "ifElseUnfold" (formula "13") (term "1,0,0,1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "13") (term "1,0,0,1") (newnames "x_5"))
                  (rule "equality_comparison_simple" (formula "13") (term "1,0,0,1"))
                  (rule "throwUnfold" (formula "13") (term "1") (inst "#v0=a"))
                  (rule "variableDeclarationAssign" (formula "13") (term "1"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "a"))
                  (rule "instanceCreationAssignment" (formula "13") (term "1") (inst "#v0=a_1"))
                  (rule "variableDeclarationAssign" (formula "13") (term "1"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "a_1"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=a_2"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "a_2"))
                  (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "__NEW__"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=a_3"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "a_3"))
                  (rule "allocateInstance" (formula "13"))
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "13"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "assignment" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallWithinClass" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "castDel" (formula "17") (term "1,0,1,0"))
                  (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "castDel" (formula "17") (term "1,0,1,0"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "methodCallReturnIgnoreResult" (formula "17") (term "1"))
                  (rule "methodCallReturn" (formula "17") (term "1"))
                  (rule "assignment" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "assignment" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallSuper" (formula "17") (term "1"))
                  (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "castDel" (formula "17") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "castDel" (formula "17") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "assignment_write_attribute" (formula "17") (term "1"))
                  (branch "Normal Execution (a_1 != null)"
                     (builtin "One Step Simplification" (formula "18"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")))
                     (rule "false_right" (formula "17"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "tryCatchThrow" (formula "17") (term "1"))
                     (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_6"))
                     (rule "equality_comparison_simple" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "ifElseSplit" (formula "17"))
                     (branch "if x_6 true"
                        (builtin "One Step Simplification" (formula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_6 false"
                        (builtin "One Step Simplification" (formula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseSplit" (formula "17"))
                        (branch "if a instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "17") (term "1") (newnames "e"))
                           (rule "reference_type_cast" (formula "17") (term "1"))
                           (branch "Normal Execution (a instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "assignment" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "methodCallEmpty" (formula "17") (term "1"))
                              (rule "emptyModality" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "ifElseSplit" (formula "17"))
                              (branch "if x_5 true"
                                 (builtin "One Step Simplification" (formula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_5 false"
                                 (builtin "One Step Simplification" (formula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "17"))
                                 (branch "if thrownExc instanceof java.lang.Throwable true"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "e_1"))
                                    (rule "reference_type_cast" (formula "17") (term "1"))
                                    (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "emptyModality" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")))
                                       (rule "allRight" (formula "17") (inst "sk=f_5"))
                                       (rule "allRight" (formula "17") (inst "sk=o_5"))
                                       (rule "orRight" (formula "17"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeTrue" (formula "17"))
                                    )
                                 )
                                 (branch "if thrownExc instanceof java.lang.Throwable false"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "18"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "closeTrue" (formula "17"))
                           )
                        )
                        (branch "if a instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (a_1 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "if x_3 false"
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "eqSymm" (formula "8"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "b_1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0"))
            (rule "distr_forallAnd" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or" (formula "9") (term "0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "less_than_comparison_simple" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "11") (term "1"))
            (rule "emptyModality" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "impRight" (formula "11"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "10"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
            (rule "methodCallEmpty" (formula "13") (term "1"))
            (rule "tryEmpty" (formula "13") (term "1"))
            (rule "emptyModality" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "2")))
            (rule "eqSymm" (formula "13") (term "1,0,0,1"))
            (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
            (rule "add_literals" (formula "8") (term "1,0"))
            (rule "times_zero_1" (formula "8") (term "0"))
            (rule "leq_literals" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "applyEq" (formula "11") (term "1,1,0,0,0") (ifseqformula "7"))
            (rule "applyEq" (formula "1") (term "1") (ifseqformula "7"))
            (rule "andRight" (formula "11"))
            (branch "Case 1"
               (rule "allRight" (formula "11") (inst "sk=i_1"))
               (rule "orRight" (formula "11"))
               (rule "orRight" (formula "11"))
               (rule "inEqSimp_geqRight" (formula "12"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_leqRight" (formula "12"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,0") (inst "selectSK=arr_2"))
               (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
               (rule "leq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "allLeft" (formula "10") (inst "t=i_1"))
               (rule "replaceKnownSelect_taclet02101_0" (formula "10") (term "0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02101_1" (formula "10") (term "0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "10") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "10") (term "0,0,1"))
               (rule "leq_literals" (formula "10") (term "0,1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "notLeft" (formula "10"))
               (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "allLeft" (formula "11") (inst "t=i_1"))
               (rule "replaceKnownSelect_taclet02101_0" (formula "11") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02101_1" (formula "11") (term "0,0,1"))
               (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "11") (term "0,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "11"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "11") (inst "sk=f_6"))
               (rule "allRight" (formula "11") (inst "sk=o_6"))
               (rule "orRight" (formula "11"))
               (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=f_6_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
               (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "closeTrue" (formula "13"))
            )
         )
      )
   )
   (branch "Null Reference (_msg = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
