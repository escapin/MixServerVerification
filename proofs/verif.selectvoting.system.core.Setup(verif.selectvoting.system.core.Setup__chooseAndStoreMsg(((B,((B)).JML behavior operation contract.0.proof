\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 11 19:53:44 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jul 11 19:53:44 CEST 2017
name=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:chooseAndStoreMsg([[B,[[B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:chooseAndStoreMsg([[B,[[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "22608")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "msg1,msg2,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(builtin "One Step Simplification" (formula "8"))
(rule "assignment" (formula "8") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "8") (term "1,1") (newnames "heapBefore_chooseAndStoreMsg,savedHeapBefore_chooseAndStoreMsg") (userinteraction))
(builtin "One Step Simplification" (formula "8"))
(rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x") (userinteraction))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x") (userinteraction))
(rule "compound_assignment_2" (formula "8") (term "1") (inst "#v=x_1") (userinteraction))
(rule "variableDeclarationAssign" (formula "8") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1") (userinteraction))
(builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_setEquality,result_0,exc_0,heapAfter_setEquality,anon_heap_setEquality") (contract "verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup::setEquality([[B,[[B)].JML normal_behavior operation contract.0"))
(branch "Post (setEquality)"
   (rule "assignment" (formula "10") (term "1,1") (userinteraction))
   (rule "compound_assignment_1_new" (formula "10") (term "1,1,1") (userinteraction))
   (rule "if" (formula "10") (term "1,1,1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "10"))
   (rule "ifthenelse_negated_for" (formula "10") (userinteraction))
   (rule "ifthenelse_split_for" (formula "10") (userinteraction))
   (branch "result_0 = TRUE TRUE"
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "eqSymm" (formula "12") (userinteraction))
      (rule "applyEq" (formula "12") (term "1") (ifseqformula "1") (userinteraction))
      (builtin "One Step Simplification" (formula "12"))
      (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_storeMessages,exc_2,heapAfter_storeMessages,anon_heap_storeMessages") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::storeMessages([[B)].JML normal_behavior operation contract.0"))
      (branch "Post (storeMessages)"
         (rule "variableDeclarationAssign" (formula "15") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "15") (term "1,1") (newnames "chosen") (userinteraction))
         (builtin "One Step Simplification" (formula "15"))
         (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_chooseMsg,result_1,exc_3,heapAfter_chooseMsg,anon_heap_chooseMsg") (contract "verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup::chooseMsg([[B,[[B)].JML normal_behavior operation contract.0"))
         (branch "Post (chooseMsg)"
            (rule "assignment" (formula "17") (term "1,1") (userinteraction))
            (rule "methodCallReturn" (formula "17") (term "1,1,1") (userinteraction))
            (rule "assignment" (formula "17") (term "1,1,1") (userinteraction))
            (rule "methodCallEmpty" (formula "17") (term "1,1,1,1") (userinteraction))
            (rule "tryEmpty" (formula "17") (term "1,1,1,1") (userinteraction))
            (rule "emptyModality" (formula "17") (term "1,1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "19"))
            (rule "notLeft" (formula "18"))
            (rule "notLeft" (formula "25"))
            (rule "notLeft" (formula "24"))
            (rule "andRight" (formula "29"))
            (branch "Case 1"
               (rule "andRight" (formula "29"))
               (branch "Case 1"
                  (rule "notRight" (formula "29"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "11"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "eqSymm" (formula "7") (term "1,0"))
                  (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "9") (inst "i=i"))
                  (rule "greater_literals" (formula "9") (term "0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "26"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "8") (inst "i=i"))
                  (rule "greater_literals" (formula "8") (term "0,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "notLeft" (formula "8"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "26"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "25") (inst "i=i"))
                  (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")))
                  (rule "greater_literals" (formula "25") (term "0"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_11"))
                  (rule "applyEq" (formula "19") (term "1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_1"))
                  (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                  (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "elementOfSingleton" (formula "24") (term "0,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet000000_0" (formula "1") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_1" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "35") (ifseqformula "2"))
               )
               (branch
                  (rule "cut_direct" (formula "22") (term "0") (userinteraction))
                  (branch "CUT: verif.selectvoting.system.core.Setup.secret@heapAfter_chooseMsg = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "andRight" (formula "30"))
                     (branch
                        (rule "allRight" (formula "30") (inst "sk=i_17") (userinteraction))
                        (rule "impRight" (formula "30") (userinteraction))
                        (rule "instAll" (formula "1") (term "0,1") (ifseqformula "18") (userinteraction))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "12"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0") (ifseqformula "12"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
                        (rule "notRight" (formula "32"))
                        (rule "andLeft" (formula "3"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "30"))
                        (rule "orRight" (formula "30"))
                        (rule "eqSymm" (formula "10") (term "1,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                        (rule "nonNull" (formula "28") (inst "i=i"))
                        (rule "greater_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                        (rule "sub_literals" (formula "28") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "12") (inst "i=i"))
                        (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "greater_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "11") (inst "i=i"))
                        (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "greater_literals" (formula "11") (term "0,1"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_78"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "38") (term "0") (ifseqformula "21"))
                        (rule "applyEq" (formula "2") (term "1,0,0,1") (ifseqformula "21"))
                        (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "elementOfSingleton" (formula "21") (term "0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "applyEqReverse" (formula "2") (term "1,0,0,1") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_35"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "elementOfSingleton" (formula "26") (term "0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_79"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replaceKnownSelect_taclet00100000_0" (formula "1") (term "0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00100000_1" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_102"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                        (rule "ifEqualsNull" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "referencedObjectIsCreatedRight" (formula "29") (ifseqformula "39"))
                        (rule "close" (formula "29") (ifseqformula "17"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "30"))
                        (branch
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "23") (userinteraction))
                           (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_chooseMsg,
              byte[][]::select(heapAfter_chooseMsg,
                               null,
                               verif.selectvoting.system.core.ConservativeExtension::$messages))
= array2seq2d(heapAfter_storeMessages,
              byte[][]::select(heapAfter_storeMessages,
                               null,
                               verif.selectvoting.system.core.ConservativeExtension::$messages))") (userinteraction))
                           (branch "CUT: array2seq2d(heapAfter_chooseMsg, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg) = array2seq2d(heapAfter_storeMessages, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages) TRUE"
                              (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "1") (userinteraction))
                              (rule "applyEq" (formula "31") (term "1") (ifseqformula "17") (userinteraction))
                              (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_chooseMsg, msg1)
= array2seq2d(heapAfter_storeMessages, msg1)") (userinteraction))
                              (branch "CUT: array2seq2d(heapAfter_chooseMsg, msg1) = array2seq2d(heapAfter_storeMessages, msg1) TRUE"
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "1") (userinteraction))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "closeTrue" (formula "32") (userinteraction))
                              )
                              (branch "CUT: array2seq2d(heapAfter_chooseMsg, msg1) = array2seq2d(heapAfter_storeMessages, msg1) FALSE"
                                 (rule "hide_right" (formula "32") (userinteraction))
                                 (rule "array2seq2dDef" (formula "27") (term "0") (inst "u=u") (userinteraction))
                                 (rule "array2seq2dDef" (formula "27") (term "1") (inst "u=u") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv") (userinteraction))
                                 (rule "andRight" (formula "27") (userinteraction))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "11"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0") (ifseqformula "11"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "11"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "eqSymm" (formula "27"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "eqSymm" (formula "7") (term "1,0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                    (rule "lenOfSeqDef" (formula "26") (term "1"))
                                    (rule "polySimp_elimSub" (formula "26") (term "1,1"))
                                    (rule "mul_literals" (formula "26") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "26") (term "1,1"))
                                    (rule "lenOfSeqDef" (formula "26") (term "0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                                    (rule "times_zero_2" (formula "26") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "closeTrue" (formula "26"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "27") (inst "sk=iv_15") (userinteraction))
                                    (rule "impRight" (formula "27") (userinteraction))
                                    (rule "getOfSeqDef" (formula "28") (term "0") (userinteraction))
                                    (rule "getOfSeqDef" (formula "28") (term "1") (userinteraction))
                                    (rule "ifthenelse_split" (formula "28") (term "0") (userinteraction))
                                    (branch "0 ≤ iv_15 ∧ iv_15 < msg1.length - 0 TRUE"
                                       (rule "ifthenelse_split" (formula "29") (term "1") (userinteraction))
                                       (branch "0 ≤ iv_15 ∧ iv_15 < msg1.length - 0 TRUE"
                                          (rule "castDel" (formula "29") (term "0") (userinteraction))
                                          (rule "castDel" (formula "29") (term "1") (userinteraction))
                                          (rule "add_zero_right" (formula "29") (term "0,2,1,0") (userinteraction))
                                          (rule "add_zero_right" (formula "29") (term "0,2,1,1") (userinteraction))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "29") (inst "iv=iv") (userinteraction))
                                          (rule "commute_and" (formula "29") (userinteraction))
                                          (rule "andRight" (formula "29") (userinteraction))
                                          (branch "Case 1"
                                             (rule "allRight" (formula "29") (inst "sk=iv_16") (userinteraction))
                                             (rule "impRight" (formula "29") (userinteraction))
                                             (rule "getOfArray2seq" (formula "30") (term "0") (userinteraction))
                                             (branch "Case 1"
                                                (rule "getOfArray2seq" (formula "30") (term "1") (userinteraction))
                                                (branch
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "nonNull" (formula "14") (inst "i=i"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "nonNull" (formula "32") (inst "i=i"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "nonNull" (formula "13") (inst "i=i"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "1,0,1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "2") (term "1,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "1,2,0,1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "5") (term "1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "0,0,1,0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "2") (term "0,0,1,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")) (ifInst ""  (formula "36")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                                                   (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "1,1,0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "ifthenelse_negated" (formula "2") (term "1,1,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,0,0,1,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,0,0,1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0,0,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,1,1,0,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0,0,1,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,1,1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,1,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "38") (term "0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "39")))
                                                   (rule "ifthenelse_negated" (formula "38") (term "0"))
                                                   (rule "selectOfAnonEQ" (formula "32") (term "0,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "36") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "1,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "selectOfAnonEQ" (formula "24") (term "1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "elementOfSingleton" (formula "24") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfSingleton" (formula "6") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "elementOfSingleton" (formula "25") (term "0,1,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectOfAnonEQ" (formula "40") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "elementOfSingleton" (formula "40") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                                   (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                                   (rule "ifthenelse_negated" (formula "25") (term "0,0,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "elementOfSingleton" (formula "39") (term "0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "36") (term "0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "selectOfAnonEQ" (formula "40") (term "1,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "elementOfSingleton" (formula "40") (term "0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,1,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "elementOfSingleton" (formula "25") (term "0,0,1,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,1,1"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,0,0,0,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")))
                                                   (rule "ifthenelse_negated" (formula "25") (term "0,0,0,0,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "selectOfAnonEQ" (formula "40") (term "1,2,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "elementOfSingleton" (formula "40") (term "0,1,2,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "1,0,0,1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "2") (term "1,0,0,1,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "0,0,1,2,0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "5") (term "0,0,1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "1,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfSingleton" (formula "6") (term "0,1,1"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,0,0,0,1,2,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,0,0,1,0,0,1,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "5") (term "1,0,0,1,2,0,1") (ifseqformula "18"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,0,0,1,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "1,1,1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "2") (term "1,1,1,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "1,1,2,0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,2,0,1"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "ifthenelse_negated" (formula "5") (term "1,1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "0,0,1,1,2,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "5") (term "0,0,1,1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,0,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "1,1,1,2,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "5") (term "1,1,1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,2,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0,0,1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0,0,1,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,0,0,0,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,0,0,0,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "2,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,0,0,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,0,0,0,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "1,0,0,0,0,0,0,0") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,1,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,1,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,1,2,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,1,2,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,0,0,1,0,2,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,0,0,1,0,2,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,0,0,0,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,2,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,0,0,1,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0,0,0,0,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0,0,0,0,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,2,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,2,1"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "1,0,0,1,1,0") (ifseqformula "18"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "2,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,0,0,0,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,0,0,0,1,0,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,0,1,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,0,1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,0,1,0,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,0,1,0,1,0,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,2,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,1,1,2,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,1,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,1,1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "2,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,2,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0,0,0,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0,0,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,2,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,2,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,0,0,0,1,0,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0,0,0,0,2,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0,0,0,0,2,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,1,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "35") (term "0,0,1,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "2,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,0,1,0,1,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,0,1,0,1,0,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,1,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0,0,1,1,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,2,2,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,2,2,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,1,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,1,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "1,1,0,0,0,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "1,1,0,0,0,0,2,0"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "greater_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "greater_literals" (formula "14") (term "0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "greater_literals" (formula "33") (term "0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "sub_literals" (formula "16") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "sub_literals" (formula "14") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "sub_literals" (formula "33") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "eqSymm" (formula "12") (term "1,0"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "33") (term "0,1,1,1,0,0,1,0,2,2,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "notRight" (formula "33"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "35"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1,0,0,1,0,1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                                   (rule "replace_known_left" (formula "5") (term "0,0,0,0,1,2,0,1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                                   (rule "replace_known_right" (formula "35") (term "0,0,0,0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "31")))
                                                   (rule "replace_known_right" (formula "32") (term "0,0,0,2,0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                   (rule "times_zero_2" (formula "3") (term "1,1"))
                                                   (rule "add_zero_right" (formula "3") (term "1"))
                                                   (rule "ifEqualsTRUE" (formula "40"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "orRight" (formula "40"))
                                                   (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                   (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "5") (term "1,1"))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0"))
                                                   (rule "ifEqualsTRUE" (formula "32"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "orRight" (formula "32"))
                                                   (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "35"))
                                                   (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "40"))
                                                   (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "34"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                   (rule "narrowSelectArrayType" (formula "36") (term "1") (ifseqformula "24") (ifseqformula "31"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "4"))
                                                   (rule "ifthenelse_negated" (formula "36") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                   (rule "narrowSelectArrayType" (formula "36") (term "2,0") (ifseqformula "19") (ifseqformula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                   (rule "ifEqualsTRUE" (formula "33") (term "1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "narrowSelectArrayType" (formula "36") (term "2,1,0") (ifseqformula "15") (ifseqformula "31"))
                                                   (rule "narrowSelectArrayType" (formula "36") (term "1,1,0") (ifseqformula "8") (ifseqformula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "6"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                                                   (rule "lenOfSeqDef" (formula "2") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                   (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                   (rule "nnf_imp2or" (formula "23") (term "0"))
                                                   (rule "nnf_imp2or" (formula "12") (term "0"))
                                                   (rule "nnf_imp2or" (formula "14") (term "0"))
                                                   (rule "nnf_imp2or" (formula "13") (term "0"))
                                                   (rule "nnf_imp2or" (formula "30") (term "0"))
                                                   (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "33") (term "1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "commute_or_2" (formula "23") (term "0"))
                                                   (rule "commute_or_2" (formula "14") (term "0"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "commute_or_2" (formula "30") (term "0"))
                                                   (rule "commute_or" (formula "33") (term "1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "31"))
                                                   (rule "close" (formula "33") (ifseqformula "8"))
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "eqSymm" (formula "12") (term "1,0"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "1,1"))
                                                   (rule "add_zero_right" (formula "3") (term "1"))
                                                   (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                   (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "5"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                                   (rule "nonNull" (formula "15") (inst "i=i"))
                                                   (rule "greater_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "33") (term "0,1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "33"))
                                                   (rule "getOfSeqDef" (formula "33") (term "0"))
                                                   (rule "castDel" (formula "33") (term "1,0"))
                                                   (rule "castDel" (formula "33") (term "2,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,2,1,0"))
                                                   (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0"))
                                                   (rule "times_zero_2" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "33") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "33") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "eqSymm" (formula "33"))
                                                   (rule "nonNull" (formula "14") (inst "i=i"))
                                                   (rule "greater_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "31") (inst "i=i"))
                                                   (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "38")))
                                                   (rule "greater_literals" (formula "31") (term "0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                                   (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                   (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_36"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "elementOfSingleton" (formula "29") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_80"))
                                                   (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "7") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_81"))
                                                   (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replaceKnownSelect_taclet10000110010100000_5" (formula "7") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000110010100000_6" (formula "7") (term "0"))
                                                   (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=arr_103"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "11")))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_104"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                                   (rule "eqSymm" (formula "35"))
                                                   (rule "pullOutSelect" (formula "4") (term "0,1,0") (inst "selectSK=arr_105"))
                                                   (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")))
                                                   (rule "replaceKnownSelect_taclet10000110010100000_9" (formula "4") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000110010100000_11" (formula "4") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,0") (ifseqformula "19"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_106"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "19"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_107"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "nnf_imp2or" (formula "16") (term "0"))
                                                   (rule "nnf_imp2or" (formula "18") (term "0"))
                                                   (rule "nnf_imp2or" (formula "17") (term "0"))
                                                   (rule "nnf_imp2or" (formula "34") (term "0"))
                                                   (rule "nnf_imp2or" (formula "27") (term "0"))
                                                   (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0"))
                                                   (rule "commute_or_2" (formula "17") (term "0"))
                                                   (rule "commute_or_2" (formula "34") (term "0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "ifthenelse_split" (formula "9") (term "0"))
                                                   (branch "msg1.length ≥ 1 TRUE"
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "commute_or" (formula "18") (term "0,0"))
                                                      (rule "commute_or" (formula "17") (term "0,0"))
                                                      (rule "commute_or" (formula "34") (term "0,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0"))
                                                      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "msg1[iv_15].length ≥ 1 TRUE"
                                                         (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_literals" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                      (branch "msg1[iv_15].length ≥ 1 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "times_zero_2" (formula "7") (term "1,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                   )
                                                   (branch "msg1.length ≥ 1 FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "35"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10"))
                                                      (rule "times_zero_2" (formula "10") (term "1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "18"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "14"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "14"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "orRight" (formula "36"))
                                                (rule "orRight" (formula "34"))
                                                (rule "orRight" (formula "34"))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "eqSymm" (formula "12") (term "1,0"))
                                                (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "1,1"))
                                                (rule "add_zero_right" (formula "3") (term "1"))
                                                (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "5"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "23"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "nonNull" (formula "15") (inst "i=i"))
                                                (rule "greater_literals" (formula "15") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "14") (inst "i=i"))
                                                (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "greater_literals" (formula "14") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "31") (inst "i=i"))
                                                (rule "greater_literals" (formula "31") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "38")))
                                                (rule "sub_literals" (formula "31") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                (rule "array2seqDef" (formula "34") (term "0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "getOfSeqDef" (formula "34") (term "0"))
                                                (rule "castDel" (formula "34") (term "2,0"))
                                                (rule "castDel" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,2,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "34") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                                (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "3") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_38"))
                                                (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "elementOfSingleton" (formula "29") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "17"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                (rule "hideAuxiliaryEq" (formula "29"))
                                                (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_84"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "42") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "24"))
                                                (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "elementOfSingleton" (formula "24") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "pullOutSelect" (formula "7") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_85"))
                                                (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replaceKnownSelect_taclet1000110010100000_5" (formula "7") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1000110010100000_6" (formula "7") (term "0"))
                                                (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "array2seqDef" (formula "34") (term "0,0") (inst "u=u"))
                                                (rule "getOfSeqDef" (formula "34") (term "0"))
                                                (rule "castDel" (formula "34") (term "1,0"))
                                                (rule "castDel" (formula "34") (term "2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "add_zero_right" (formula "34") (term "0,2,0,1"))
                                                (rule "orRight" (formula "34"))
                                                (rule "notRight" (formula "34"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                (rule "times_zero_2" (formula "2") (term "1,1"))
                                                (rule "add_zero_right" (formula "2") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=arr_112"))
                                                (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "23"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "19"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0,0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "19"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1") (ifseqformula "13"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "31"))
                                             (rule "orRight" (formula "31"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "eqSymm" (formula "10") (term "1,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                             (rule "polySimp_elimSub" (formula "2") (term "1"))
                                             (rule "times_zero_2" (formula "2") (term "1,1"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "lenOfSeqDef" (formula "3") (term "1"))
                                             (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                             (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                             (rule "nonNull" (formula "28") (inst "i=i"))
                                             (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                                             (rule "greater_literals" (formula "28") (term "0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "12") (inst "i=i"))
                                             (rule "greater_literals" (formula "12") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "11") (inst "i=i"))
                                             (rule "greater_literals" (formula "11") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "29"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "31") (term "0,0") (inst "u=u"))
                                             (rule "lenOfSeqDef" (formula "31") (term "0"))
                                             (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                             (rule "times_zero_2" (formula "31") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "31") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                             (rule "array2seqDef" (formula "31") (term "0,1") (inst "u=u"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "lenOfSeqDef" (formula "31") (term "0"))
                                             (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                             (rule "times_zero_2" (formula "31") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "31") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                                             (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_39"))
                                             (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "elementOfSingleton" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_86"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "4") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_87"))
                                             (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "4"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replaceKnownSelect_taclet100110010100000_5" (formula "4") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100110010100000_6" (formula "4") (term "0"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "pullOutSelect" (formula "31") (term "0,1,0") (inst "selectSK=arr_113"))
                                             (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "8")))
                                             (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "0,1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "31") (term "0,0,0,0") (inst "selectSK=arr_114"))
                                             (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "replaceKnownSelect_taclet100110010100000_9" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100110010100000_11" (formula "1") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "0,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "closeTrue" (formula "32"))
                                          )
                                       )
                                       (branch "0 ≤ iv_15 ∧ iv_15 < msg1.length - 0 FALSE"
                                          (rule "close" (formula "29") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "0 ≤ iv_15 ∧ iv_15 < msg1.length - 0 FALSE"
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
                                       (rule "castDel" (formula "29") (term "0"))
                                       (rule "castDel" (formula "29") (term "1,1"))
                                       (rule "castDel" (formula "29") (term "2,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,2,1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "eqSymm" (formula "9") (term "1,0"))
                                       (rule "eqSymm" (formula "30"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")))
                                       (rule "closeTrue" (formula "30"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: array2seq2d(heapAfter_chooseMsg, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg) = array2seq2d(heapAfter_storeMessages, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages) FALSE"
                              (rule "array2seq2dDef" (formula "26") (term "0") (inst "u=u") (userinteraction))
                              (rule "array2seq2dDef" (formula "26") (term "1") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv") (userinteraction))
                              (rule "andRight" (formula "26") (userinteraction))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (ifseqformula "14"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "10"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0") (ifseqformula "10"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "10"))
                                 (rule "orRight" (formula "29"))
                                 (rule "orRight" (formula "27"))
                                 (rule "orRight" (formula "27"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                 (rule "lenOfSeqDef" (formula "25") (term "1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                                 (rule "times_zero_2" (formula "25") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "25") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "25") (term "0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                                 (rule "times_zero_2" (formula "25") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                 (rule "nonNull" (formula "7") (inst "i=i"))
                                 (rule "greater_literals" (formula "7") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "sub_literals" (formula "7") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "notLeft" (formula "7"))
                                 (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "25"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "24") (inst "i=i"))
                                 (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
                                 (rule "greater_literals" (formula "24") (term "0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "8") (inst "i=i"))
                                 (rule "greater_literals" (formula "8") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "sub_literals" (formula "8") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "25"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_100"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "28") (term "0,0,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "17"))
                                 (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "elementOfSingleton" (formula "17") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEqReverse" (formula "28") (term "0,1,1") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "28") (term "0,0,0,1") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_44"))
                                 (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "elementOfSingleton" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                                 (rule "hideAuxiliaryEq" (formula "22"))
                                 (rule "pullOutSelect" (formula "35") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_101"))
                                 (rule "applyEq" (formula "28") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet01010100000_0" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01010100000_1" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "28") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeTrue" (formula "28"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "26") (inst "sk=iv_17") (userinteraction))
                                 (rule "impRight" (formula "26") (userinteraction))
                                 (rule "getOfSeqDef" (formula "27") (term "0") (userinteraction))
                                 (rule "getOfSeqDef" (formula "27") (term "1") (userinteraction))
                                 (rule "ifthenelse_split" (formula "27") (term "0") (userinteraction))
                                 (branch " 0 ≤ iv_17 ∧ iv_17 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg.length - 0 TRUE"
                                    (rule "ifthenelse_split" (formula "28") (term "1") (userinteraction))
                                    (branch " 0 ≤ iv_17 ∧ iv_17 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages.length - 0 TRUE"
                                       (rule "castDel" (formula "29") (term "0") (userinteraction))
                                       (rule "castDel" (formula "29") (term "1") (userinteraction))
                                       (rule "add_zero_right" (formula "29") (term "0,2,1,0") (userinteraction))
                                       (rule "add_zero_right" (formula "29") (term "0,2,1,1") (userinteraction))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "29") (inst "iv=iv") (userinteraction))
                                       (rule "andRight" (formula "29") (userinteraction))
                                       (branch
                                          (rule "hide_right" (formula "34") (userinteraction))
                                          (rule "lenOfArray2seq" (formula "29") (term "0") (userinteraction))
                                          (rule "lenOfArray2seq" (formula "29") (term "1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "nonNull" (formula "12") (inst "i=i"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "nonNull" (formula "11") (inst "i=i"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "nonNull" (formula "31") (inst "i=i"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "selectOfAnonEQ" (formula "4") (term "1,2,0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "elementOfSingleton" (formula "37") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "selectCreatedOfAnonEQ" (formula "27") (term "0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "34")))
                                          (rule "selectOfAnonEQ" (formula "4") (term "2,1,2,0,1") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "elementOfSingleton" (formula "4") (term "0,0,2,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "28") (term "0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "selectOfAnonEQ" (formula "4") (term "1,1,2,1,2,0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "1") (term "0,0,1") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfAnonEQ" (formula "28") (term "0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "elementOfSingleton" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "selectOfAnonEQ" (formula "4") (term "0,0,0,0,2,1,2,0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "28") (term "0") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "selectCreatedOfAnonEQ" (formula "4") (term "0,0,1,0,1,2,0,1") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "33") (term "1,0,1") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "elementOfSingleton" (formula "33") (term "0,1,0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "selectOfAnonEQ" (formula "4") (term "1,2,2,1,2,0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "30") (term "0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "selectCreatedOfAnonEQ" (formula "4") (term "0,0,0,1,0,1,2,0,1") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "30") (term "0,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfSingleton" (formula "30") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "selectCreatedOfAnonEQ" (formula "34") (term "0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "selectOfAnonEQ" (formula "4") (term "1,0,1,0,0,1,0,1,2,0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "33") (term "0,1") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")))
                                          (rule "elementOfSingleton" (formula "33") (term "0,0,0,1"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "33") (term "0,1"))
                                          (rule "selectOfAnonEQ" (formula "4") (term "0,0,1,0,2,1,2,0,1") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectOfAnonEQ" (formula "30") (term "0,0,0") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
                                          (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")))
                                          (rule "ifthenelse_negated" (formula "34") (term "0"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "37") (term "1,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "elementOfSingleton" (formula "37") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,1") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                          (rule "selectCreatedOfAnonEQ" (formula "36") (term "0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "selectCreatedOfAnonEQ" (formula "32") (term "0,0,0,1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                          (rule "selectOfAnonEQ" (formula "31") (term "1,1,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                          (rule "ifthenelse_negated" (formula "31") (term "1,1,0,1"))
                                          (rule "selectOfAnonEQ" (formula "21") (term "1,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "elementOfSingleton" (formula "21") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "selectOfAnonEQ" (formula "22") (term "1,0,0,1,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "elementOfSingleton" (formula "22") (term "0,1,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "selectCreatedOfAnonEQ" (formula "31") (term "0,0,1,1,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "34")))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,1,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "32") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,1,0,0,1,0,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0,1,0,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                          (rule "selectOfAnonEQ" (formula "32") (term "1,0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "elementOfSingleton" (formula "32") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,2,2,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,2,2,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "32") (term "0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "32") (term "0,0"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,0,0,0,0,1,0,2,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectCreatedOfAnonEQ" (formula "32") (term "0,0,0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "selectOfAnonEQ" (formula "22") (term "0,0,1,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "38")))
                                          (rule "elementOfSingleton" (formula "22") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "22") (term "0,0,1,0"))
                                          (rule "selectCreatedOfAnonEQ" (formula "31") (term "0,0,1,1,0,1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "selectOfAnonEQ" (formula "22") (term "1,0,0,1,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")))
                                          (rule "selectOfAnonEQ" (formula "31") (term "1,1,1,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                          (rule "elementOfSingleton" (formula "31") (term "0,0,1,1,1,0,1"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "35")))
                                          (rule "ifthenelse_negated" (formula "31") (term "1,1,1,0,1"))
                                          (rule "selectOfAnonEQ" (formula "22") (term "0,0,0,0,1,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                          (rule "selectCreatedOfAnonEQ" (formula "31") (term "0,0,1,1,1,0,1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,1,0,0,1,0,2,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "32") (term "0,0,0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                          (rule "selectOfAnonEQ" (formula "3") (term "2,2,1,2,0,1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")))
                                          (rule "selectOfAnonEQ" (formula "22") (term "0,1,1,0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "elementOfSingleton" (formula "22") (term "0,0,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "selectOfAnonEQ" (formula "32") (term "1,0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")))
                                          (rule "elementOfSingleton" (formula "32") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "32") (term "1,0,0"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,1,0,1,0,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "32") (term "1,1,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,2,0,0,1,0,2,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "31") (term "1,1,1,1,0,1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                          (rule "ifthenelse_negated" (formula "31") (term "1,1,1,1,0,1"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,0,0,0,0,1,0,2,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,0,0,1,0,2,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "3") (term "0,0,1,0,2,1,2,0,1"))
                                          (rule "selectCreatedOfAnonEQ" (formula "32") (term "0,0,1,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,0,0,1,0,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,0,0,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,1,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,1,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,2,0,0,1,0,2,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,2,0,0,1,0,2,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,0,0,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "3") (term "1,2,0,1"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,1,0,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,2,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,2,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,1,0,0,1,0,1,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,1,0,0,1,0,1,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,0,0,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,1,1,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "0,0,0,0,1,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,1,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                          (rule "ifthenelse_negated" (formula "3") (term "1,1,2,0,1"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,0,0,0,1,1,2,0,1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectOfAnonEQ" (formula "3") (term "1,0,0,0,0,1,1,2,0,1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,1,1,2,0,1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                          (rule "true_left" (formula "29"))
                                          (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "greater_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "greater_literals" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "greater_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "sub_literals" (formula "13") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "sub_literals" (formula "30") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "notLeft" (formula "10"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "notLeft" (formula "27"))
                                          (rule "eqSymm" (formula "9") (term "1,0"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "polySimp_elimSub" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "add_zero_right" (formula "1") (term "1"))
                                          (rule "lenOfSeqDef" (formula "3") (term "1"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                          (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "3") (term "1,1"))
                                          (rule "ifEqualsTRUE" (formula "31"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "orRight" (formula "31"))
                                          (rule "replace_known_right" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
                                          (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "27") (term "0,0,0,1,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "29"))
                                          (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "28"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                          (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "34"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "nnf_imp2or" (formula "20") (term "0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "commute_or_2" (formula "10") (term "0"))
                                          (rule "commute_or_2" (formula "11") (term "0"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "commute_or" (formula "10") (term "0,0"))
                                          (rule "commute_or" (formula "11") (term "0,0"))
                                          (rule "commute_or" (formula "27") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "30") (term "0,0"))
                                          (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeTrue" (formula "31"))
                                          )
                                          (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "30") (ifseqformula "38"))
                                             (rule "close" (formula "30") (ifseqformula "16"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "29") (inst "sk=iv_18") (userinteraction))
                                          (rule "impRight" (formula "29") (userinteraction))
                                          (rule "getOfArray2seq" (formula "30") (term "0") (userinteraction))
                                          (branch "Case 1"
                                             (rule "getOfArray2seq" (formula "30") (term "1") (userinteraction))
                                             (branch
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "nonNull" (formula "13") (inst "i=i"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "nonNull" (formula "15") (inst "i=i"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "nonNull" (formula "33") (inst "i=i"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "selectOfAnonEQ" (formula "39") (term "0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "elementOfSingleton" (formula "39") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "selectOfAnonEQ" (formula "35") (term "0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "selectOfAnonEQ" (formula "38") (term "1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "elementOfSingleton" (formula "38") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "selectCreatedOfAnonEQ" (formula "36") (term "0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "orRight" (formula "36"))
                                                (rule "selectOfAnonEQ" (formula "35") (term "1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "elementOfSingleton" (formula "35") (term "0,0,1,1"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "selectCreatedOfAnonEQ" (formula "39") (term "0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "selectOfAnonEQ" (formula "3") (term "0,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "selectOfAnonEQ" (formula "42") (term "1,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "38")))
                                                (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                                (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "selectOfAnonEQ" (formula "5") (term "0,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "selectOfAnonEQ" (formula "32") (term "0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,1"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "24") (term "1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "elementOfSingleton" (formula "24") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "elementOfSingleton" (formula "25") (term "0,1,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "selectOfAnonEQ" (formula "5") (term "0,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "elementOfSingleton" (formula "5") (term "0,0,0,1"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                (rule "selectOfAnonEQ" (formula "6") (term "2,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,0,2,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "25") (term "0,1,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "elementOfSingleton" (formula "25") (term "0,0,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "selectOfAnonEQ" (formula "42") (term "1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "elementOfSingleton" (formula "42") (term "0,1,1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "25") (term "0,0,1,0"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,1,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "32") (term "0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfSingleton" (formula "32") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "selectOfAnonEQ" (formula "32") (term "0,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,1,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "35") (term "0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "orRight" (formula "35"))
                                                (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,1,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,1,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "0,0,0,0,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectCreatedOfAnonEQ" (formula "25") (term "0,0,0,0,1,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,1,2,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,1,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,0,0,2,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,2,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,1,2,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,1,2,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "2,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,0,2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectCreatedOfAnonEQ" (formula "6") (term "0,0,1,0,2,1,2,0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "2,1,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,1,0,1,0,2,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,1,0,1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "2") (term "0,0,0,0,2,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "2") (term "2,1,0,1"))
                                                (rule "selectCreatedOfAnonEQ" (formula "6") (term "0,0,1,0,0,0,1,0,1,2,0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,0,0,0,1,0,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,2,2,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,0,0,2,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,0,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,2,1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,2,1,1"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "2,1,1"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "0,0,2,1,0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "6") (term "2,0,0,1,0,1,2,0,1") (ifseqformula "18"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,1,0,1,0,0,0,1,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,2,2,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,2,2,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,2,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,0,0,0,0,1,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "0,0,0,1,0,1,0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,1,0,1,0,2,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,0,1,0,1,0,2,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "2") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "2") (term "0,0,0,1,0,1,0,1"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,1,0,0,1,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,2,0,0,1,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,1,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,2,0,0,1,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,0,0,2,0,0,1,0,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,2,0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,2,0,0,0,1,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,1,1"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "0,0,0,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "2") (term "1,0,1"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,0,0,0,0,1,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,0,0,1,0,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "6") (term "0,0,1,0,1,2,0,1"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,1,0,0,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,1,0,0,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "2,2,1,2,0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,0,0,2,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,2,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "6") (term "2,1,2,0,1"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,0,0,0,0,0,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,0,0,0,1,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1,1,1"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,2,1,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,1,1"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,1,0,0,1,0,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "2") (term "1,2,1,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfSingleton" (formula "2") (term "0,1,2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0,0,0,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "6") (term "1,2,0,1"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,0,1,2,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,0,0,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,0,0,0,0,0,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,0,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,0,0,0,0,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,1,1,2,0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,2,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,0,0,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,1,0,1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,2,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,2,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "1,0,0,1,1,2,0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "0,1,0,0,1,1,2,0,1"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "2,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,2,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,0,0,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,0,0,0,0,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,0,0,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,2,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,0,0,1,0,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "2,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,2,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "2,1,2,0,0,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,1,2,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,0,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,2,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,2,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,0,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,2,0,0,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,1,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,1,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,0,0,1,0,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "2,0,0,1,0,1,1,2,2,0") (ifseqformula "18"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,1,0,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,0,0,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,0,0,0,0,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,2,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,1,2,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,1,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,0,0,1,0,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,2,0,0,1,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,2,0,0,1,0,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,2,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,2,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,1,0,1,1,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,2,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,2,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,1,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,1,2,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,1,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,1,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,1,2,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,1,2,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,1,2,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,1,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,0,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,1,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,0,0,1,0,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,1,0,1,1,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,1,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,0,1,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,1,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,1,0,0,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,0,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,2,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,0,0,1,0,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,2,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,1,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,0,1,0,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,1,0,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,1,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,2,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,2,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,1,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,0,1,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,2,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,1,0,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,0,0,1,0,0,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0,0,1,0,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,2,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,2,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,1,2,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,1,0,1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,0,1,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,1,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,0,0,0,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,0,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,1,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,0,0,0,0,1,0,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0,1,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "2,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,2,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "2,1,1,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "0,0,1,0,0,1,0,0,0,1,0,2,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "1,0,0,1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,0,0,1,0,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,0,1,0,0,0,1,0,2,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0,1,0,1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,1,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,2,1,1,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0,0,1,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,1,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,2,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,0,0,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,0,0,0,0,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,0,0,0,0,1,0,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,0,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,1,1,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,1,1,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,2,0,0,1,0,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,2,0,0,1,0,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,2,0,0,1,0,2,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,0,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,2,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,2,0,0,1,0,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,1,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,1,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,1,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,1,1,0,0,1,0,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,1,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,0,0,1,0,2,2,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,0,0,1,0,2,2,0"))
                                                (rule "selectOfAnonEQ" (formula "34") (term "1,1,0,0,1,0,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,0,0,1,0,2,2,0"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                                (rule "ifthenelse_negated" (formula "34") (term "1,1,0,0,1,0,2,2,0"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,1,0,0,1,0,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,1,0,2,2,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1,0,0,1,0,2,2,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "true_left" (formula "5"))
                                                (rule "greater_literals" (formula "13") (term "0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "greater_literals" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "sub_literals" (formula "13") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "greater_literals" (formula "15") (term "0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "sub_literals" (formula "32") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "eqSymm" (formula "11") (term "1,0"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "1,1"))
                                                (rule "add_zero_right" (formula "3") (term "1"))
                                                (rule "ifEqualsNull" (formula "32") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "ifEqualsNull" (formula "32") (term "0,0,0,2,2,0"))
                                                (rule "ifEqualsNull" (formula "32") (term "0,0,0,0,0,1,0,2,0"))
                                                (rule "ifEqualsTRUE" (formula "32") (term "0,1,0,1"))
                                                (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "5") (term "1,1"))
                                                (rule "ifEqualsNull" (formula "32") (term "0,0,0,2,0"))
                                                (rule "ifEqualsNull" (formula "32") (term "0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "ifEqualsTRUE" (formula "32") (term "0,0,1,0,0"))
                                                (rule "ifEqualsTRUE" (formula "32") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "31"))
                                                (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "23") (ifseqformula "36"))
                                                (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "4"))
                                                (rule "inEqSimp_commuteLeq" (formula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                                (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                                                (rule "lenOfSeqDef" (formula "2") (term "0"))
                                                (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "2") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "32") (term "1,0,1,0,0,1,0,2,0"))
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE TRUE"
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "notRight" (formula "33"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "31"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "32") (ifseqformula "33"))
                                                   (rule "close" (formula "32") (ifseqformula "19"))
                                                )
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE FALSE"
                                                   (rule "referencedObjectIsCreatedRight" (formula "32") (ifseqformula "40"))
                                                   (rule "close" (formula "32") (ifseqformula "18"))
                                                )
                                             )
                                             (branch
                                                (rule "lenOfArray2seq" (formula "1") (term "1,1") (userinteraction))
                                                (rule "hide_right" (formula "31") (userinteraction))
                                                (rule "hide_right" (formula "35") (userinteraction))
                                                (rule "andRight" (formula "30") (userinteraction))
                                                (branch "Case 1"
                                                   (rule "andLeft" (formula "1") (userinteraction))
                                                   (rule "close" (formula "31") (ifseqformula "1") (userinteraction))
                                                )
                                                (branch
                                                   (rule "selectOfAnonEQ" (formula "30") (term "0,1") (ifseqformula "18") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "30") (term "0,1") (userinteraction))
                                                   (branch
                                                      (rule "selectOfAnonEQ" (formula "31") (term "1,0,1") (ifseqformula "19") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "31") (term "1,0,1") (userinteraction))
                                                      (branch
                                                         (rule "andLeft" (formula "3") (userinteraction))
                                                         (rule "selectOfAnonEQ" (formula "4") (term "0,1") (ifseqformula "26") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "4") (term "0,1") (userinteraction))
                                                         (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_17)) ∊ ∅ ∧ ¬arr(iv_17) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_17)) ∊ freshLocs(heapAfter_storeMessages) TRUE"
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (ifseqformula "18"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "27"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,1") (ifseqformula "18"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "andLeft" (formula "7"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "orRight" (formula "36"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "orRight" (formula "37"))
                                                            (rule "notLeft" (formula "4"))
                                                            (rule "notLeft" (formula "4"))
                                                            (rule "orRight" (formula "34"))
                                                            (rule "orRight" (formula "34"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "29"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                            (rule "mul_literals" (formula "5") (term "1,1"))
                                                            (rule "add_zero_right" (formula "5") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                            (rule "times_zero_2" (formula "4") (term "1,1"))
                                                            (rule "add_zero_right" (formula "4") (term "1"))
                                                            (rule "elementOfSingleton" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_ltRight" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "lenOfSeqDef" (formula "7") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                                            (rule "times_zero_2" (formula "7") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "7") (term "1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "nonNull" (formula "14") (inst "i=i"))
                                                            (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "greater_literals" (formula "14") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "andLeft" (formula "14"))
                                                            (rule "notLeft" (formula "14"))
                                                            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                            (rule "nonNull" (formula "31") (inst "i=i"))
                                                            (rule "greater_literals" (formula "31") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")))
                                                            (rule "sub_literals" (formula "31") (term "2,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                            (rule "nonNull" (formula "15") (inst "i=i"))
                                                            (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "greater_literals" (formula "15") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "andLeft" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_112"))
                                                            (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "45") (term "0") (ifseqformula "23"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "elementOfSingleton" (formula "23") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                                            (rule "hideAuxiliaryEq" (formula "23"))
                                                            (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_50"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "elementOfSingleton" (formula "29") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                            (rule "hideAuxiliaryEq" (formula "29"))
                                                            (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_113"))
                                                            (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet00011010011010100000_2" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00011010011010100000_3" (formula "1") (term "0"))
                                                            (rule "referencedObjectIsCreatedRightEQ" (formula "37") (ifseqformula "1") (ifseqformula "38"))
                                                            (rule "close" (formula "37") (ifseqformula "21"))
                                                         )
                                                         (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_17)) ∊ ∅ ∧ ¬arr(iv_17) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_17)) ∊ freshLocs(heapAfter_storeMessages) FALSE"
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "37")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "21"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0") (ifseqformula "16"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1") (ifseqformula "20"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "20"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1") (ifseqformula "16"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,1") (ifseqformula "16"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "orRight" (formula "37"))
                                                            (rule "orRight" (formula "35"))
                                                            (rule "orRight" (formula "35"))
                                                            (rule "eqSymm" (formula "13") (term "1,0"))
                                                            (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "29"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                            (rule "times_zero_2" (formula "5") (term "1,1"))
                                                            (rule "add_zero_right" (formula "5") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                            (rule "times_zero_2" (formula "4") (term "1,1"))
                                                            (rule "add_zero_right" (formula "4") (term "1"))
                                                            (rule "elementOfSingleton" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_ltRight" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "lenOfSeqDef" (formula "7") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                                            (rule "times_zero_2" (formula "7") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "7") (term "1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                                                            (rule "nonNull" (formula "15") (inst "i=i"))
                                                            (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "greater_literals" (formula "15") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "andLeft" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "nonNull" (formula "14") (inst "i=i"))
                                                            (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "greater_literals" (formula "14") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "andLeft" (formula "14"))
                                                            (rule "notLeft" (formula "14"))
                                                            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                            (rule "nonNull" (formula "31") (inst "i=i"))
                                                            (rule "greater_literals" (formula "31") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "38")))
                                                            (rule "sub_literals" (formula "31") (term "2,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                            (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_110"))
                                                            (rule "applyEq" (formula "42") (term "0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "23"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "elementOfSingleton" (formula "23") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "23"))
                                                            (rule "hideAuxiliaryEq" (formula "23"))
                                                            (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_49"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "elementOfSingleton" (formula "29") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                            (rule "hideAuxiliaryEq" (formula "29"))
                                                            (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_111"))
                                                            (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet10011010011010100000_2" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10011010011010100000_3" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "34") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "34") (term "1,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                            (rule "notRight" (formula "33"))
                                                            (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=arr_141"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "22"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "18"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,1,0,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                                                            (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                      (branch " (null, ConservativeExtension::$messages) ∊ {(null, ConservativeExtension::$messages)} ∧ ¬ ConservativeExtension::$messages = java.lang.Object::<created> ∨ (null, ConservativeExtension::$messages) ∊ freshLocs(heapAfter_setEquality) FALSE"
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "35")))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "15"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "19"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "14"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "orRight" (formula "36"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "eqSymm" (formula "12") (term "1,0"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                                                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                         (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "1,1"))
                                                         (rule "add_zero_right" (formula "4") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                         (rule "times_zero_2" (formula "5") (term "1,1"))
                                                         (rule "add_zero_right" (formula "5") (term "1"))
                                                         (rule "elementOfSingleton" (formula "31"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "closeTrue" (formula "31"))
                                                      )
                                                   )
                                                   (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_17)) ∊ {(null, ConservativeExtension::$messages)} ∧ ¬arr(iv_17) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_17)) ∊ freshLocs(heapAfter_setEquality) FALSE"
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "34")))
                                                      (rule "closeTrue" (formula "30"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "18"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "14"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "14"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "eqSymm" (formula "12") (term "1,0"))
                                             (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                             (rule "polySimp_elimSub" (formula "3") (term "1"))
                                             (rule "times_zero_2" (formula "3") (term "1,1"))
                                             (rule "add_zero_right" (formula "3") (term "1"))
                                             (rule "polySimp_elimSub" (formula "4") (term "1"))
                                             (rule "times_zero_2" (formula "4") (term "1,1"))
                                             (rule "add_zero_right" (formula "4") (term "1"))
                                             (rule "lenOfSeqDef" (formula "6") (term "1"))
                                             (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                             (rule "times_zero_2" (formula "6") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_commuteLeq" (formula "6"))
                                             (rule "inEqSimp_ltToLeq" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                                             (rule "nonNull" (formula "15") (inst "i=i"))
                                             (rule "greater_literals" (formula "15") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "notLeft" (formula "15"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "31") (inst "i=i"))
                                             (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")))
                                             (rule "greater_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "14") (inst "i=i"))
                                             (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "greater_literals" (formula "14") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "34") (term "0,0") (inst "u=u"))
                                             (rule "getOfSeqDef" (formula "34") (term "0"))
                                             (rule "castDel" (formula "34") (term "2,0"))
                                             (rule "castDel" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,2,1,0"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                             (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                             (rule "lenOfSeqDef" (formula "3") (term "0"))
                                             (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                             (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "3") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_92"))
                                             (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "35") (term "1,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_42"))
                                             (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "elementOfSingleton" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                             (rule "hideAuxiliaryEq" (formula "29"))
                                             (rule "pullOutSelect" (formula "42") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_93"))
                                             (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet110011010100000_0" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110011010100000_1" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "35") (term "1,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "8") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "array2seqDef" (formula "33") (term "0,1") (inst "u=u"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "getOfSeqDef" (formula "33") (term "0"))
                                             (rule "castDel" (formula "33") (term "1,0"))
                                             (rule "castDel" (formula "33") (term "2,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,2,1,0"))
                                             (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0"))
                                             (rule "times_zero_2" (formula "33") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0,0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "33") (term "0,1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,1"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "eqSymm" (formula "33"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "notRight" (formula "33"))
                                             (rule "pullOutSelect" (formula "4") (term "0,0,0,0") (inst "selectSK=arr_127"))
                                             (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "22"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,0") (ifseqformula "18"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_128"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "19"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=arr_129"))
                                             (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "20"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_130"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_imp2or" (formula "34") (term "0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_imp2or" (formula "27") (term "0"))
                                             (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "27") (term "0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "commute_or" (formula "27") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "10") (term "0"))
                                             (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 TRUE"
                                                (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE FALSE"
                                                   (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "45"))
                                                   (rule "close" (formula "35") (ifseqformula "23"))
                                                )
                                             )
                                             (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "35"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " 0 ≤ iv_17 ∧ iv_17 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages.length - 0 FALSE"
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
                                       (rule "castDel" (formula "29") (term "0"))
                                       (rule "castDel" (formula "29") (term "1"))
                                       (rule "add_zero_right" (formula "29") (term "0,2,1,0"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "eqSymm" (formula "9") (term "1,0"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                       (rule "polySimp_elimSub" (formula "2") (term "1"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1"))
                                       (rule "times_zero_2" (formula "28") (term "1,1"))
                                       (rule "add_zero_right" (formula "28") (term "1"))
                                       (rule "lenOfSeqDef" (formula "3") (term "1"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                       (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                       (rule "nonNull" (formula "28") (inst "i=i"))
                                       (rule "greater_literals" (formula "28") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                                       (rule "sub_literals" (formula "28") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "11") (inst "i=i"))
                                       (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "greater_literals" (formula "11") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "notLeft" (formula "11"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "12") (inst "i=i"))
                                       (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "greater_literals" (formula "12") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "notLeft" (formula "12"))
                                       (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_96"))
                                       (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "39") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_97"))
                                       (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "32") (term "1,1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet1011010100000_0" (formula "1") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1011010100000_1" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "32") (term "1,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "32") (term "1,1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch " 0 ≤ iv_17 ∧ iv_17 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg.length - 0 FALSE"
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "11"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0") (ifseqformula "11"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "11"))
                                    (rule "castDel" (formula "28") (term "1,1"))
                                    (rule "castDel" (formula "28") (term "2,1"))
                                    (rule "castDel" (formula "28") (term "0"))
                                    (rule "add_zero_right" (formula "28") (term "0,2,1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "eqSymm" (formula "8") (term "1,0"))
                                    (rule "eqSymm" (formula "29"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "29"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                    (rule "polySimp_elimSub" (formula "1") (term "1"))
                                    (rule "times_zero_2" (formula "1") (term "1,1"))
                                    (rule "add_zero_right" (formula "1") (term "1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1"))
                                    (rule "times_zero_2" (formula "28") (term "1,1"))
                                    (rule "add_zero_right" (formula "28") (term "1"))
                                    (rule "lenOfSeqDef" (formula "3") (term "1"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                    (rule "nonNull" (formula "28") (inst "i=i"))
                                    (rule "greater_literals" (formula "28") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                                    (rule "sub_literals" (formula "28") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "greater_literals" (formula "11") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "12") (inst "i=i"))
                                    (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "greater_literals" (formula "12") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "29"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_98"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "32") (term "1,1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "32") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "32") (term "1,1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "39") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_99"))
                                    (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet111010100000_0" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111010100000_1" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "close" (formula "30") (ifseqformula "25"))
                        )
                     )
                  )
                  (branch "CUT: verif.selectvoting.system.core.Setup.secret@heapAfter_chooseMsg = TRUE FALSE"
                     (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "25") (userinteraction))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22") (userinteraction))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "andRight" (formula "29") (userinteraction))
                     (branch
                        (rule "allRight" (formula "29") (inst "sk=i_15") (userinteraction))
                        (rule "impRight" (formula "29") (userinteraction))
                        (rule "instAll" (formula "1") (term "0,1") (ifseqformula "18") (userinteraction))
                        (rule "impLeft" (formula "1") (userinteraction))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "11"))
                           (rule "notRight" (formula "31"))
                           (rule "andLeft" (formula "2"))
                           (rule "orRight" (formula "31"))
                           (rule "orRight" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "eqSymm" (formula "9") (term "1,0"))
                           (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "nonNull" (formula "27") (inst "i=i"))
                           (rule "greater_literals" (formula "27") (term "0,1"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
                           (rule "sub_literals" (formula "27") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "11") (inst "i=i"))
                           (rule "greater_literals" (formula "11") (term "0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "12") (inst "i=i"))
                           (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "greater_literals" (formula "12") (term "0,1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_31"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "20") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_70"))
                           (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "20"))
                           (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                           (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "elementOfSingleton" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_71"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "replaceKnownSelect_taclet001100000_4" (formula "2") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001100000_5" (formula "2") (term "0"))
                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
                           (rule "andLeft" (formula "2"))
                           (rule "notRight" (formula "32"))
                           (rule "notLeft" (formula "2"))
                           (rule "orRight" (formula "31"))
                           (rule "orRight" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "eqSymm" (formula "9") (term "1,0"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "nonNull" (formula "10") (inst "i=i"))
                           (rule "greater_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "26") (inst "i=i"))
                           (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")))
                           (rule "greater_literals" (formula "26") (term "0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "11") (inst "i=i"))
                           (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "greater_literals" (formula "11") (term "0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_32"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_72"))
                           (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "20"))
                           (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "elementOfSingleton" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_73"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet101100000_4" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_5" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_98"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                           (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_99"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                           (rule "replaceKnownSelect_taclet101100000_8" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_9" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                           (rule "ifEqualsNull" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "39"))
                           (rule "close" (formula "28") (ifseqformula "17"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "29") (userinteraction))
                        (branch "Case 1"
                           (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_chooseMsg,
              byte[][]::select(heapAfter_chooseMsg,
                               null,
                               verif.selectvoting.system.core.ConservativeExtension::$messages))
= array2seq2d(heapAfter_storeMessages,
              byte[][]::select(heapAfter_storeMessages,
                               null,
                               verif.selectvoting.system.core.ConservativeExtension::$messages))") (userinteraction))
                           (branch "CUT: array2seq2d(heapAfter_chooseMsg, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg) = array2seq2d(heapAfter_storeMessages, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages) TRUE"
                              (rule "applyEq" (formula "30") (term "1") (ifseqformula "1") (userinteraction))
                              (rule "applyEq" (formula "30") (term "1") (ifseqformula "17") (userinteraction))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "23") (userinteraction))
                              (rule "seqPermSym" (formula "30") (userinteraction))
                              (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_storeMessages, msg1)
= array2seq2d(heapAfter_setEquality, msg1)") (userinteraction))
                              (branch "CUT: array2seq2d(heapAfter_storeMessages, msg1) = array2seq2d(heapAfter_setEquality, msg1) TRUE"
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "1") (userinteraction))
                                 (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_chooseMsg, msg2)
= array2seq2d(heapAfter_setEquality, msg2)") (userinteraction))
                                 (branch "CUT: array2seq2d(heapAfter_chooseMsg, msg2) = array2seq2d(heapAfter_setEquality, msg2) TRUE"
                                    (rule "applyEq" (formula "32") (term "1") (ifseqformula "1") (userinteraction))
                                    (rule "close" (formula "32") (ifseqformula "15") (userinteraction))
                                 )
                                 (branch "CUT: array2seq2d(heapAfter_chooseMsg, msg2) = array2seq2d(heapAfter_setEquality, msg2) FALSE"
                                    (rule "hide_right" (formula "32") (userinteraction))
                                    (rule "array2seq2dDef" (formula "26") (term "0") (inst "u=u") (userinteraction))
                                    (rule "array2seq2dDef" (formula "26") (term "1") (inst "u=u") (userinteraction))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv") (userinteraction))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "nonNull" (formula "9") (inst "i=i"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "nonNull" (formula "27") (inst "i=i"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,2,0,0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,2,0,0,0"))
                                    (rule "selectOfAnonEQ" (formula "21") (term "0,1,1,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "elementOfSingleton" (formula "21") (term "0,0,1,1,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,2,0,1,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,2,0,1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfSingleton" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,2,0,1,1,0,0,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,2,0,1,1,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "21") (term "0,0,1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")))
                                    (rule "elementOfSingleton" (formula "21") (term "0,0,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "ifthenelse_negated" (formula "21") (term "0,0,1,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,1,2,0,1,1,0,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectOfAnonEQ" (formula "21") (term "1,1,0,0,1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "elementOfSingleton" (formula "21") (term "0,1,1,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "0,0,0,1,2,0,1,1,0,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "0,0,0,1,2,0,1,1,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "33") (term "1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,1,2,0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "elementOfSingleton" (formula "29") (term "0,0,1,1,2,0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,1,2,0,0,0"))
                                    (rule "selectOfAnonEQ" (formula "20") (term "1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "elementOfSingleton" (formula "20") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "selectOfAnonEQ" (formula "33") (term "0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "34")))
                                    (rule "ifthenelse_negated" (formula "33") (term "0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,1,1,2,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectOfAnonEQ" (formula "2") (term "1,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,1,1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectCreatedOfAnonEQ" (formula "25") (term "0,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,1,2,0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectOfAnonEQ" (formula "21") (term "1,2,0,0,1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "elementOfSingleton" (formula "21") (term "0,1,2,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,0,1,2,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectCreatedOfAnonEQ" (formula "31") (term "0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,2,0,0,1,0,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,2,0,0,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "elementOfSingleton" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "35")))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,2,0,1,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,2,0,1,0"))
                                    (rule "selectOfAnonEQ" (formula "28") (term "1,1,0,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "ifthenelse_negated" (formula "28") (term "1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "31") (term "0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "27")))
                                    (rule "ifthenelse_negated" (formula "31") (term "0"))
                                    (rule "selectOfAnonEQ" (formula "28") (term "0,0,1,1,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "ifthenelse_negated" (formula "28") (term "0,0,1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "selectOfAnonEQ" (formula "28") (term "1,1,1,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "elementOfSingleton" (formula "28") (term "0,0,1,1,1,0,1"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                                    (rule "ifthenelse_negated" (formula "28") (term "1,1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "2") (term "1,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectCreatedOfAnonEQ" (formula "28") (term "0,0,1,1,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,1,2,0,0,1,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "elementOfSingleton" (formula "29") (term "0,0,1,1,2,0,0,1,0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,1,2,0,0,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,1,2,0,1,1,0,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "elementOfSingleton" (formula "29") (term "0,0,1,1,2,0,1,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,1,2,0,1,1,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "2") (term "1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectCreatedOfAnonEQ" (formula "28") (term "1,0,0,1,1,0,1") (ifseqformula "14"))
                                    (rule "selectOfAnonEQ" (formula "28") (term "0,0,0,0,1,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "ifthenelse_negated" (formula "28") (term "0,0,0,0,1,1,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,1,1,2,0,0,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectOfAnonEQ" (formula "28") (term "1,1,1,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,1,2,0,0,1,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,1,1,2,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,1,1,2,0,0,0"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,1,1,2,0,1,1,0,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,1,1,2,0,1,1,0,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,0,1,2,0,0,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "0,0,1,1,2,0,1,1,0,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "0,0,1,1,2,0,1,1,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "29") (term "1,1,1,2,0,0,1,0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "11")))
                                    (rule "ifthenelse_negated" (formula "29") (term "1,1,1,2,0,0,1,0,1"))
                                    (rule "andRight" (formula "29") (userinteraction))
                                    (branch "Case 1"
                                       (rule "greater_literals" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "greater_literals" (formula "28") (term "0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "greater_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "sub_literals" (formula "10") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "sub_literals" (formula "28") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "sub_literals" (formula "12") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "notLeft" (formula "11"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "notLeft" (formula "9"))
                                       (rule "eqSymm" (formula "8") (term "1,0"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,2,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                       (rule "ifEqualsTRUE" (formula "33"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "ifEqualsTRUE" (formula "30"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "lenOfSeqDef" (formula "28") (term "1"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,1"))
                                       (rule "times_zero_2" (formula "28") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "28") (term "1,1"))
                                       (rule "lenOfSeqDef" (formula "28") (term "0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                       (rule "mul_literals" (formula "28") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "28") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "closeTrue" (formula "28"))
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "29") (inst "sk=iv_11") (userinteraction))
                                       (rule "impRight" (formula "29") (userinteraction))
                                       (rule "getOfSeqDef" (formula "30") (term "1") (userinteraction))
                                       (rule "getOfSeqDef" (formula "30") (term "0") (userinteraction))
                                       (rule "ifthenelse_split" (formula "30") (term "1") (userinteraction))
                                       (branch "0 ≤ iv_11 ∧ iv_11 < msg2.length - 0 TRUE"
                                          (rule "ifthenelse_split" (formula "31") (term "0") (userinteraction))
                                          (branch
                                             (rule "castDel" (formula "31") (term "0") (userinteraction))
                                             (rule "add_zero_right" (formula "31") (term "0,2,2,1,0") (userinteraction))
                                             (rule "add_zero_right" (formula "31") (term "0,2,1,1,0,1") (userinteraction))
                                             (rule "add_zero_right" (formula "31") (term "0,2,2,1,0,1") (userinteraction))
                                             (rule "add_zero_right" (formula "31") (term "0,2,1,1,1,1,0") (userinteraction))
                                             (rule "add_zero_right" (formula "31") (term "0,2,2,1,1,1,0") (userinteraction))
                                             (rule "add_zero_right" (formula "31") (term "0,2,2,1,1,0") (userinteraction))
                                             (rule "castDel" (formula "31") (term "1") (userinteraction))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv") (userinteraction))
                                             (rule "andRight" (formula "31") (userinteraction))
                                             (branch "Case 1"
                                                (rule "greater_literals" (formula "12") (term "0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "greater_literals" (formula "30") (term "0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "greater_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "sub_literals" (formula "12") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "sub_literals" (formula "30") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "sub_literals" (formula "14") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "30"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "eqSymm" (formula "11") (term "1,0"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "31") (term "0,1,0,1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,1,2,0,1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                                (rule "polySimp_elimSub" (formula "1") (term "1"))
                                                (rule "times_zero_2" (formula "1") (term "1,1"))
                                                (rule "add_zero_right" (formula "1") (term "1"))
                                                (rule "ifEqualsTRUE" (formula "33"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "orRight" (formula "33"))
                                                (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "ifEqualsTRUE" (formula "37"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "orRight" (formula "37"))
                                                (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "3") (term "1"))
                                                (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "29"))
                                                (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "30"))
                                                (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "23") (ifseqformula "36"))
                                                (rule "inEqSimp_ltToLeq" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "5"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "4") (term "1") (ifseqformula "21"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "21"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                (rule "array2seqDef" (formula "31") (term "0,0") (inst "u=u"))
                                                (rule "lenOfSeqDef" (formula "31") (term "0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                                (rule "times_zero_2" (formula "31") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "31") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                                (rule "array2seqDef" (formula "31") (term "0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "lenOfSeqDef" (formula "31") (term "0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                                (rule "times_zero_2" (formula "31") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "31") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "closeTrue" (formula "31"))
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "31") (inst "sk=iv_14") (userinteraction))
                                                (rule "impRight" (formula "31") (userinteraction))
                                                (rule "getOfArray2seq" (formula "32") (term "0") (userinteraction))
                                                (branch "Case 1"
                                                   (rule "getOfArray2seq" (formula "32") (term "1") (userinteraction))
                                                   (branch
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "1") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,0") (ifseqformula "23"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "2,0,0,1,0,0") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "2,0") (ifseqformula "23"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "elementOfSingleton" (formula "34") (term "0,0,2,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "2,2,0") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,2,0") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "greater_literals" (formula "17") (term "0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "greater_literals" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "sub_literals" (formula "17") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "greater_literals" (formula "15") (term "0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "sub_literals" (formula "33") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "notLeft" (formula "16"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "notLeft" (formula "30"))
                                                      (rule "eqSymm" (formula "13") (term "1,0"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_left" (formula "33") (term "0,1,1,1,0,0,1,0,2,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0,0,1,2,0,1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1"))
                                                      (rule "add_zero_right" (formula "3") (term "1"))
                                                      (rule "ifEqualsTRUE" (formula "38"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "orRight" (formula "38"))
                                                      (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "ifEqualsTRUE" (formula "35"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "ifEqualsTRUE" (formula "33") (term "0,1,0,0"))
                                                      (rule "ifEqualsTRUE" (formula "33") (term "0,1,0,2,0"))
                                                      (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                      (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                      (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "25") (ifseqformula "38"))
                                                      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                      (rule "ifEqualsTRUE" (formula "33") (term "1,1,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "4"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "23"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "6") (term "1") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                                      (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                                                      (rule "lenOfSeqDef" (formula "2") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                      (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                      (rule "nnf_imp2or" (formula "13") (term "0"))
                                                      (rule "nnf_imp2or" (formula "24") (term "0"))
                                                      (rule "nnf_imp2or" (formula "15") (term "0"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_imp2or" (formula "30") (term "0"))
                                                      (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0"))
                                                      (rule "commute_or_2" (formula "15") (term "0"))
                                                      (rule "commute_or_2" (formula "14") (term "0"))
                                                      (rule "commute_or_2" (formula "30") (term "0"))
                                                      (rule "commute_or" (formula "24") (term "0,0"))
                                                      (rule "commute_or" (formula "15") (term "0,0"))
                                                      (rule "commute_or" (formula "14") (term "0,0"))
                                                      (rule "commute_or" (formula "30") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "33") (term "1"))
                                                      (branch "¬msg2[iv_11] = null ∧ ¬msg2[iv_11].<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "32"))
                                                         (rule "close" (formula "31") (ifseqformula "9"))
                                                      )
                                                      (branch "¬msg2[iv_11] = null ∧ ¬msg2[iv_11].<created> = TRUE FALSE"
                                                         (rule "replace_known_right" (formula "34") (term "0,0,1,0,1,0,2,0") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "notRight" (formula "34"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "32"))
                                                         (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notRight" (formula "36"))
                                                         (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")))
                                                         (rule "closeTrue" (formula "34"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "greater_literals" (formula "15") (term "0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "greater_literals" (formula "31") (term "0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "greater_literals" (formula "13") (term "0"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "sub_literals" (formula "15") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "sub_literals" (formula "31") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "eqSymm" (formula "13") (term "1,0"))
                                                      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0,0,1,2,0,1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,1,1,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "11")))
                                                      (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                      (rule "times_zero_2" (formula "4") (term "1,1"))
                                                      (rule "add_zero_right" (formula "4") (term "1"))
                                                      (rule "ifEqualsTRUE" (formula "39"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "ifEqualsTRUE" (formula "36"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "32"))
                                                      (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "26") (ifseqformula "39"))
                                                      (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "4"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "24") (term "1") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "24"))
                                                      (rule "applyEq" (formula "7") (term "1") (ifseqformula "24"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "24"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                                      (rule "array2seqDef" (formula "34") (term "0,1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "getOfSeqDef" (formula "34") (term "0"))
                                                      (rule "castDel" (formula "34") (term "1,0"))
                                                      (rule "castDel" (formula "34") (term "2,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,2,1,0"))
                                                      (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                                      (rule "times_zero_2" (formula "34") (term "1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                                      (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_90"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "eqSymm" (formula "35"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_91"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "20"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_92"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "nnf_imp2or" (formula "28") (term "0"))
                                                      (rule "nnf_imp2or" (formula "17") (term "0"))
                                                      (rule "nnf_imp2or" (formula "18") (term "0"))
                                                      (rule "nnf_imp2or" (formula "19") (term "0"))
                                                      (rule "nnf_imp2or" (formula "34") (term "0"))
                                                      (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "commute_or_2" (formula "18") (term "0"))
                                                      (rule "commute_or_2" (formula "19") (term "0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_or" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "18") (term "0,0"))
                                                      (rule "commute_or" (formula "19") (term "0,0"))
                                                      (rule "commute_or" (formula "34") (term "0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "11") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "ifthenelse_split" (formula "9") (term "0"))
                                                      (branch "msg2.length ≥ 1 TRUE"
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                         (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "msg2[iv_11].length ≥ 1 TRUE"
                                                            (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0"))
                                                            (rule "leq_literals" (formula "7"))
                                                            (rule "closeFalse" (formula "7"))
                                                         )
                                                         (branch "msg2[iv_11].length ≥ 1 FALSE"
                                                            (rule "inEqSimp_geqRight" (formula "35"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "times_zero_2" (formula "7") (term "1,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "closeFalse" (formula "7"))
                                                         )
                                                      )
                                                      (branch "msg2.length ≥ 1 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10"))
                                                         (rule "times_zero_2" (formula "10") (term "1,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "10") (term "0"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "closeFalse" (formula "10"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "greater_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "greater_literals" (formula "31") (term "0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "greater_literals" (formula "15") (term "0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "sub_literals" (formula "13") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "sub_literals" (formula "31") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "sub_literals" (formula "15") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "eqSymm" (formula "13") (term "1,0"))
                                                   (rule "eqSymm" (formula "7"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_left" (formula "34") (term "0,1,0,1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                   (rule "eqSymm" (formula "34"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1,1,1,0,1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                   (rule "replace_known_left" (formula "5") (term "0,0,0,0,1,2,0,1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                   (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "1,1"))
                                                   (rule "add_zero_right" (formula "3") (term "1"))
                                                   (rule "ifEqualsTRUE" (formula "39"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "orRight" (formula "39"))
                                                   (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "ifEqualsTRUE" (formula "36"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                   (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "32"))
                                                   (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "33"))
                                                   (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "26") (ifseqformula "39"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "5"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "8"))
                                                   (rule "eqSymm" (formula "24"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "24"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "array2seqDef" (formula "34") (term "0,0") (inst "u=u"))
                                                   (rule "getOfSeqDef" (formula "34") (term "0"))
                                                   (rule "castDel" (formula "34") (term "2,0"))
                                                   (rule "castDel" (formula "34") (term "1,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,2,1,0"))
                                                   (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "eqSymm" (formula "34"))
                                                   (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                                   (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                   (rule "array2seqDef" (formula "34") (term "0,0") (inst "u=u"))
                                                   (rule "getOfSeqDef" (formula "34") (term "0"))
                                                   (rule "castDel" (formula "34") (term "2,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "castDel" (formula "34") (term "0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,2,0,1"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "notRight" (formula "34"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                   (rule "times_zero_2" (formula "2") (term "1,1"))
                                                   (rule "add_zero_right" (formula "2") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "0 ≤ iv_11 ∧ iv_11 < msg2.length - 0 FALSE"
                                             (rule "close" (formula "31") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "0 ≤ iv_11 ∧ iv_11 < msg2.length - 0 FALSE"
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                          (rule "closeTrue" (formula "31"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: array2seq2d(heapAfter_storeMessages, msg1) = array2seq2d(heapAfter_setEquality, msg1) FALSE"
                                 (rule "hide_right" (formula "31") (userinteraction))
                                 (rule "array2seq2dDef" (formula "25") (term "0") (inst "u=u") (userinteraction))
                                 (rule "array2seq2dDef" (formula "25") (term "1") (inst "u=u") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv") (userinteraction))
                                 (rule "andRight" (formula "25") (userinteraction))
                                 (branch "Case 1"
                                    (rule "lenOfSeqDef" (formula "25") (term "0") (userinteraction))
                                    (rule "lenOfSeqDef" (formula "25") (term "1") (userinteraction))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeTrue" (formula "25") (userinteraction))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "25") (inst "sk=iv_5") (userinteraction))
                                    (rule "impRight" (formula "25") (userinteraction))
                                    (rule "getOfSeqDef" (formula "26") (term "0") (userinteraction))
                                    (rule "getOfSeqDef" (formula "26") (term "1") (userinteraction))
                                    (rule "ifthenelse_split" (formula "26") (term "0") (userinteraction))
                                    (branch "0 ≤ iv_5 ∧ iv_5 < msg1.length - 0 TRUE"
                                       (rule "ifthenelse_split" (formula "27") (term "1") (userinteraction))
                                       (branch
                                          (rule "add_zero_right" (formula "27") (term "0,2,1,0,0") (userinteraction))
                                          (rule "add_zero_right" (formula "27") (term "0,2,1,0,1") (userinteraction))
                                          (rule "castDel" (formula "27") (term "0") (userinteraction))
                                          (rule "castDel" (formula "27") (term "1") (userinteraction))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv") (userinteraction))
                                          (rule "commute_and" (formula "27") (userinteraction))
                                          (rule "andRight" (formula "27") (userinteraction))
                                          (branch
                                             (rule "allRight" (formula "27") (inst "sk=iv_8") (userinteraction))
                                             (rule "lenOfArray2seq" (formula "27") (term "1,1,0") (userinteraction))
                                             (rule "impRight" (formula "27") (userinteraction))
                                             (rule "getOfArray2seq" (formula "28") (term "0") (userinteraction))
                                             (branch "Case 1"
                                                (rule "getOfArray2seq" (formula "28") (term "1") (userinteraction))
                                                (branch
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "nonNull" (formula "13") (inst "i=i"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "nonNull" (formula "15") (inst "i=i"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "nonNull" (formula "31") (inst "i=i"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "1,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "1,2,0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,1,2,0,1"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "ifthenelse_negated" (formula "5") (term "1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "1,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfSingleton" (formula "6") (term "0,1,1"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "elementOfSingleton" (formula "34") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfSingleton" (formula "6") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "1,1,2,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "5") (term "1,1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "0,0,1,2,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "5") (term "0,0,1,2,0,1"))
                                                   (rule "selectOfAnonEQ" (formula "24") (term "1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "elementOfSingleton" (formula "24") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "elementOfSingleton" (formula "25") (term "0,1,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1"))
                                                   (rule "selectOfAnonEQ" (formula "32") (term "1,1,0,1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")) (ifInst ""  (formula "35")))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0,0,0,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "31")))
                                                   (rule "ifthenelse_negated" (formula "35") (term "0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "33") (term "0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,0"))
                                                   (rule "selectOfAnonEQ" (formula "39") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "elementOfSingleton" (formula "39") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectOfAnonEQ" (formula "38") (term "1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "38") (term "0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,1,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                   (rule "elementOfSingleton" (formula "25") (term "0,0,1,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,0,0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "ifthenelse_negated" (formula "2") (term "0,1"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "1,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "2") (term "1,0,1"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectOfAnonEQ" (formula "29") (term "0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "31")))
                                                   (rule "ifthenelse_negated" (formula "29") (term "0,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "0,0,1,1,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0,0,1,1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "0,0,0,0,0,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0,0,0,0,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,0,0,0,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,0,0,0,0,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1,1,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "0,0,1,0,0,1,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0,0,1,0,0,1,0,2,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,0,0,0,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1,0,0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1,0,0,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "0,0,1,2,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0,0,1,2,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1,0,1,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1,0,1,0,1,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1,1,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1,1,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,0,0,0,0,0"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1,0,0,1,0,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1,0,0,1,0,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "1,1,2,2,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "13")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "1,1,2,2,0"))
                                                   (rule "greater_literals" (formula "32") (term "0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "greater_literals" (formula "14") (term "0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "greater_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "sub_literals" (formula "32") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "sub_literals" (formula "14") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "sub_literals" (formula "16") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "eqSymm" (formula "12") (term "1,0"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "32") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                                   (rule "orRight" (formula "32"))
                                                   (rule "notRight" (formula "32"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "30"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "30") (ifseqformula "32"))
                                                   (rule "close" (formula "30") (ifseqformula "8"))
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "eqSymm" (formula "12") (term "1,0"))
                                                   (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                   (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "1,1"))
                                                   (rule "add_zero_right" (formula "4") (term "1"))
                                                   (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                   (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "4"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "nonNull" (formula "14") (inst "i=i"))
                                                   (rule "greater_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "32") (term "0,1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "getOfSeqDef" (formula "32") (term "0"))
                                                   (rule "castDel" (formula "32") (term "2,0"))
                                                   (rule "castDel" (formula "32") (term "1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,2,1,0"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,1,0,0"))
                                                   (rule "times_zero_2" (formula "32") (term "1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "32") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "nonNull" (formula "15") (inst "i=i"))
                                                   (rule "greater_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "30") (inst "i=i"))
                                                   (rule "greater_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")))
                                                   (rule "sub_literals" (formula "30") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_64"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "24"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "elementOfSingleton" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "24"))
                                                   (rule "hideAuxiliaryEq" (formula "24"))
                                                   (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_28"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "7") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_65"))
                                                   (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replaceKnownSelect_taclet10000110011100000_1" (formula "7") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000110011100000_2" (formula "7") (term "0"))
                                                   (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=arr_72"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "11")))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=arr_73"))
                                                   (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                                   (rule "replaceKnownSelect_taclet10000110011100000_9" (formula "3") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000110011100000_10" (formula "3") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "18"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                                   (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1") (ifseqformula "13"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "30"))
                                             (rule "orRight" (formula "30"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "eqSymm" (formula "10") (term "1,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,1") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                             (rule "polySimp_elimSub" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "add_zero_right" (formula "1") (term "1"))
                                             (rule "lenOfSeqDef" (formula "3") (term "1"))
                                             (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                             (rule "array2seqDef" (formula "28") (term "0,0") (inst "u=u"))
                                             (rule "lenOfSeqDef" (formula "28") (term "0"))
                                             (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                             (rule "times_zero_2" (formula "28") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "28") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                             (rule "nonNull" (formula "27") (inst "i=i"))
                                             (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
                                             (rule "greater_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "11") (inst "i=i"))
                                             (rule "greater_literals" (formula "11") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "29") (term "0,1") (inst "u=u"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "lenOfSeqDef" (formula "29") (term "0"))
                                             (rule "polySimp_elimSub" (formula "29") (term "1,0"))
                                             (rule "times_zero_2" (formula "29") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "29") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0,0,1"))
                                             (rule "nonNull" (formula "12") (inst "i=i"))
                                             (rule "greater_literals" (formula "12") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_60"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                             (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "elementOfSingleton" (formula "21") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_26"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "4") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_61"))
                                             (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "4"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replaceKnownSelect_taclet100110011100000_1" (formula "4") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100110011100000_2" (formula "4") (term "0"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "pullOutSelect" (formula "30") (term "0,0,0,0") (inst "selectSK=arr_68"))
                                             (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeTrue" (formula "31"))
                                          )
                                       )
                                       (branch "0 ≤ iv_5 ∧ iv_5 < msg1.length - 0 FALSE"
                                          (rule "close" (formula "27") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "0 ≤ iv_5 ∧ iv_5 < msg1.length - 0 FALSE"
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
                                       (rule "castDel" (formula "27") (term "0"))
                                       (rule "castDel" (formula "27") (term "1,1"))
                                       (rule "castDel" (formula "27") (term "2,1"))
                                       (rule "add_zero_right" (formula "27") (term "0,2,1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "eqSymm" (formula "9") (term "1,0"))
                                       (rule "eqSymm" (formula "28"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                       (rule "closeTrue" (formula "28"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: array2seq2d(heapAfter_chooseMsg, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg) = array2seq2d(heapAfter_storeMessages, verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages) FALSE"
                              (rule "hide_right" (formula "30") (userinteraction))
                              (rule "array2seq2dDef" (formula "24") (term "0") (inst "u=u") (userinteraction))
                              (rule "array2seq2dDef" (formula "24") (term "1") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv") (userinteraction))
                              (rule "andRight" (formula "24") (userinteraction))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "10"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "14"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0") (ifseqformula "10"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "10"))
                                 (rule "orRight" (formula "28"))
                                 (rule "orRight" (formula "26"))
                                 (rule "orRight" (formula "26"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                 (rule "lenOfSeqDef" (formula "24") (term "0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "24") (term "0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                                 (rule "nonNull" (formula "23") (inst "i=i"))
                                 (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
                                 (rule "greater_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "8") (inst "i=i"))
                                 (rule "greater_literals" (formula "8") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "sub_literals" (formula "8") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "7") (inst "i=i"))
                                 (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "greater_literals" (formula "7") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "notLeft" (formula "7"))
                                 (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_20"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "27") (term "0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_21"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet01011100000_5" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01011100000_6" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "27") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "closeTrue" (formula "27"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "24") (inst "sk=iv_1") (userinteraction))
                                 (rule "impRight" (formula "24") (userinteraction))
                                 (rule "lenOfSeqDef" (formula "1") (term "1,1") (userinteraction))
                                 (rule "getOfSeqDef" (formula "25") (term "0") (userinteraction))
                                 (rule "getOfSeqDef" (formula "25") (term "1") (userinteraction))
                                 (rule "ifthenelse_split" (formula "25") (term "0") (userinteraction))
                                 (branch " 0 ≤ iv_1 ∧ iv_1 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg.length - 0 TRUE"
                                    (rule "ifthenelse_split" (formula "26") (term "1") (userinteraction))
                                    (branch " 0 ≤ iv_1 ∧ iv_1 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages.length - 0 TRUE"
                                       (rule "add_zero_right" (formula "27") (term "0,2,1,0,1") (userinteraction))
                                       (rule "add_zero_right" (formula "27") (term "0,2,1,0,0") (userinteraction))
                                       (rule "castDel" (formula "27") (term "0") (userinteraction))
                                       (rule "castDel" (formula "27") (term "1") (userinteraction))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv") (userinteraction))
                                       (rule "commute_and" (formula "27") (userinteraction))
                                       (rule "andRight" (formula "27") (userinteraction))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "27") (inst "sk=iv_2") (userinteraction))
                                          (rule "lenOfArray2seq" (formula "27") (term "1,1,0") (userinteraction))
                                          (rule "impRight" (formula "27") (userinteraction))
                                          (rule "getOfArray2seq" (formula "28") (term "0") (userinteraction))
                                          (branch "Case 1"
                                             (rule "getOfArray2seq" (formula "28") (term "1") (userinteraction))
                                             (branch
                                                (rule "selectOfAnonEQ" (formula "28") (term "0") (ifseqformula "23") (userinteraction))
                                                (rule "selectOfAnonEQ" (formula "28") (term "1") (ifseqformula "18") (userinteraction))
                                                (rule "ifthenelse_split" (formula "28") (term "0") (userinteraction))
                                                (branch " (verif.selectvoting.system.core.ConservativeExtension.messages[iv_1]@heapAfter_chooseMsg, arr(iv_2)) ∊ ∅ ∧ ¬arr(iv_2) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages[iv_1]@heapAfter_chooseMsg, arr(iv_2)) ∊ freshLocs(heapAfter_storeMessages) TRUE"
                                                   (rule "ifthenelse_split" (formula "29") (term "1") (userinteraction))
                                                   (branch
                                                      (rule "selectOfAnonEQ" (formula "30") (term "1,0") (ifseqformula "25") (userinteraction))
                                                      (rule "selectOfAnonEQ" (formula "30") (term "1,1") (ifseqformula "20") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "30") (term "1,0") (userinteraction))
                                                      (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ ∅ ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ freshLocs(heapAfter_storeMessages) TRUE"
                                                         (rule "ifthenelse_split" (formula "31") (term "1,1") (userinteraction))
                                                         (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ {(null, ConservativeExtension::$messages)} ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ freshLocs(heapAfter_setEquality) TRUE"
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (ifseqformula "18"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "27"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "22"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,1") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,1") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1") (ifseqformula "18"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "andLeft" (formula "7"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "orRight" (formula "36"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "notLeft" (formula "5"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "orRight" (formula "35"))
                                                            (rule "orRight" (formula "32"))
                                                            (rule "orRight" (formula "36"))
                                                            (rule "orRight" (formula "32"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                                                            (rule "polySimp_elimSub" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "1,1"))
                                                            (rule "add_zero_right" (formula "6") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                                            (rule "times_zero_2" (formula "7") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "7") (term "1,1"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                            (rule "times_zero_2" (formula "4") (term "1,1"))
                                                            (rule "add_zero_right" (formula "4") (term "1"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "orRight" (formula "31"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "nonNull" (formula "29") (inst "i=i"))
                                                            (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                                                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "46")))
                                                            (rule "greater_literals" (formula "29") (term "0"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                            (rule "nonNull" (formula "13") (inst "i=i"))
                                                            (rule "greater_literals" (formula "13") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "notLeft" (formula "13"))
                                                            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                            (rule "nonNull" (formula "14") (inst "i=i"))
                                                            (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "greater_literals" (formula "14") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "andLeft" (formula "14"))
                                                            (rule "notLeft" (formula "14"))
                                                            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                            (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_52"))
                                                            (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "23"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "20"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "elementOfSingleton" (formula "23") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                                            (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "23"))
                                                            (rule "hideAuxiliaryEq" (formula "23"))
                                                            (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_22"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "39") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_53"))
                                                            (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "44") (term "1,1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet00000000011011100000_1" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000000011011100000_2" (formula "1") (term "0"))
                                                            (rule "referencedObjectIsCreatedRightEQ" (formula "38") (ifseqformula "1") (ifseqformula "39"))
                                                            (rule "close" (formula "38") (ifseqformula "20"))
                                                         )
                                                         (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ {(null, ConservativeExtension::$messages)} ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ freshLocs(heapAfter_setEquality) FALSE"
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (ifseqformula "17"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "26"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0") (ifseqformula "17"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1") (ifseqformula "21"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1") (ifseqformula "21"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1") (ifseqformula "17"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1") (ifseqformula "21"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1") (ifseqformula "17"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "orRight" (formula "36"))
                                                            (rule "orRight" (formula "33"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "orRight" (formula "39"))
                                                            (rule "notRight" (formula "36"))
                                                            (rule "notLeft" (formula "5"))
                                                            (rule "notLeft" (formula "5"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "orRight" (formula "34"))
                                                            (rule "orRight" (formula "33"))
                                                            (rule "orRight" (formula "35"))
                                                            (rule "orRight" (formula "33"))
                                                            (rule "eqSymm" (formula "41"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ ∅ ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ freshLocs(heapAfter_storeMessages) FALSE"
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")) (ifInst ""  (formula "35")))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "16"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "20"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "25"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0") (ifseqformula "16"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1") (ifseqformula "20"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1") (ifseqformula "20"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "20"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1") (ifseqformula "16"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1") (ifseqformula "16"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1") (ifseqformula "16"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1") (ifseqformula "16"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "orRight" (formula "37"))
                                                         (rule "orRight" (formula "35"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "orRight" (formula "36"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "orRight" (formula "31"))
                                                         (rule "orRight" (formula "31"))
                                                         (rule "eqSymm" (formula "13") (term "1,0"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "replace_known_right" (formula "28") (term "0,0,0,1") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                         (rule "polySimp_elimSub" (formula "6") (term "1"))
                                                         (rule "mul_literals" (formula "6") (term "1,1"))
                                                         (rule "add_zero_right" (formula "6") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                         (rule "times_zero_2" (formula "4") (term "1,1"))
                                                         (rule "add_zero_right" (formula "4") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                                         (rule "times_zero_2" (formula "7") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "7") (term "1,1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "30"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "4"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "nonNull" (formula "13") (inst "i=i"))
                                                         (rule "greater_literals" (formula "13") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "notLeft" (formula "13"))
                                                         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "29") (inst "i=i"))
                                                         (rule "greater_literals" (formula "29") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "44")))
                                                         (rule "sub_literals" (formula "29") (term "2,1,0"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "14") (inst "i=i"))
                                                         (rule "greater_literals" (formula "14") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_23"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_54"))
                                                         (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "24") (term "1,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "33") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "pullOutSelect" (formula "39") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_55"))
                                                         (rule "applyEq" (formula "41") (term "1,1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "40") (term "1,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "40") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet1000000011011100000_5" (formula "1") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000000011011100000_6" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "40") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "1,1,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "1,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "45")) (ifInst ""  (formula "46")))
                                                         (rule "notRight" (formula "38"))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "1") (ifseqformula "24") (ifseqformula "34"))
                                                         (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_59"))
                                                         (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                         (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "19") (ifseqformula "34"))
                                                         (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=arr_60"))
                                                         (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                         (rule "replaceKnownSelect_taclet1000000011011100000_9" (formula "3") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000000011011100000_10" (formula "3") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "21"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "17"))
                                                         (rule "replace_known_right" (formula "3") (term "1,0,0,0,0") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "1")))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "38") (ifseqformula "3") (ifseqformula "39"))
                                                         (rule "close" (formula "38") (ifseqformula "20"))
                                                      )
                                                   )
                                                   (branch
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "15"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "19"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "15"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "19"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1") (ifseqformula "19"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,1") (ifseqformula "15"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,1") (ifseqformula "15"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "15"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "orRight" (formula "34"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "orRight" (formula "36"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "eqSymm" (formula "36"))
                                                      (rule "eqSymm" (formula "12") (term "1,0"))
                                                      (rule "replace_known_right" (formula "27") (term "1,0,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                      (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                                      (rule "times_zero_2" (formula "6") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "1,1"))
                                                      (rule "add_zero_right" (formula "4") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1"))
                                                      (rule "add_zero_right" (formula "3") (term "1"))
                                                      (rule "elementOfSingleton" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "false_right" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "narrowSelectArrayType" (formula "35") (term "1") (ifseqformula "24") (ifseqformula "30"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "nonNull" (formula "29") (inst "i=i"))
                                                      (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
                                                      (rule "greater_literals" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "14") (inst "i=i"))
                                                      (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "greater_literals" (formula "14") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "13") (inst "i=i"))
                                                      (rule "greater_literals" (formula "13") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_50"))
                                                      (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1,1,0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "37") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "37") (term "1,1,0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "45") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "37") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_21"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_56"))
                                                      (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                                      (rule "pullOutSelect" (formula "5") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_51"))
                                                      (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replaceKnownSelect_taclet100000011011100000_1" (formula "5") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100000011011100000_2" (formula "5") (term "0"))
                                                      (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "36") (term "0,0,0") (inst "selectSK=arr_57"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1,0,0,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "37") (term "1,0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "37") (term "1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_58"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "nnf_imp2or" (formula "13") (term "0"))
                                                      (rule "nnf_imp2or" (formula "30") (term "0"))
                                                      (rule "nnf_imp2or" (formula "15") (term "0"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_imp2or" (formula "24") (term "0"))
                                                      (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                      (rule "commute_or_2" (formula "30") (term "0"))
                                                      (rule "commute_or_2" (formula "15") (term "0"))
                                                      (rule "commute_or_2" (formula "14") (term "0"))
                                                      (rule "commute_or_2" (formula "24") (term "0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "commute_or" (formula "30") (term "0,0"))
                                                      (rule "commute_or" (formula "15") (term "0,0"))
                                                      (rule "commute_or" (formula "14") (term "0,0"))
                                                      (rule "commute_or" (formula "24") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "7") (term "0"))
                                                      (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 TRUE"
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE TRUE"
                                                            (rule "referencedObjectIsCreatedRightEQ" (formula "37") (ifseqformula "3") (ifseqformula "34"))
                                                            (rule "close" (formula "37") (ifseqformula "21"))
                                                         )
                                                         (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE FALSE"
                                                            (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "47"))
                                                            (rule "close" (formula "31") (ifseqformula "20"))
                                                         )
                                                      )
                                                      (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "31"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                   )
                                                )
                                                (branch " (verif.selectvoting.system.core.ConservativeExtension.messages[iv_1]@heapAfter_chooseMsg, arr(iv_2)) ∊ ∅ ∧ ¬arr(iv_2) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages[iv_1]@heapAfter_chooseMsg, arr(iv_2)) ∊ freshLocs(heapAfter_storeMessages) FALSE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1") (ifseqformula "18"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1") (ifseqformula "14"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,1,0,1") (ifseqformula "14"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "eqSymm" (formula "12") (term "1,0"))
                                                   (rule "eqSymm" (formula "31"))
                                                   (rule "replace_known_right" (formula "27") (term "1,0,1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                                   (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                   (rule "times_zero_2" (formula "4") (term "1,1"))
                                                   (rule "add_zero_right" (formula "4") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                   (rule "times_zero_2" (formula "5") (term "1,1"))
                                                   (rule "add_zero_right" (formula "5") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                                   (rule "times_zero_2" (formula "6") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                                   (rule "nonNull" (formula "14") (inst "i=i"))
                                                   (rule "greater_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "13") (inst "i=i"))
                                                   (rule "greater_literals" (formula "13") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "29") (inst "i=i"))
                                                   (rule "greater_literals" (formula "29") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "38")))
                                                   (rule "sub_literals" (formula "29") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "22") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_46"))
                                                   (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "34") (term "1,1,2,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "34") (term "1,1,0,0,0,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "34") (term "1,1,0,1,0,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "24") (term "1,0,0,1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "22"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "elementOfSingleton" (formula "22") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,1,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,0,1,0,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,0,0,0,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,2,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                   (rule "hideAuxiliaryEq" (formula "22"))
                                                   (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_19"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "32") (term "1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_47"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,0,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "34") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet10000011011100000_1" (formula "1") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000011011100000_2" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,1,0,0,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,1,0,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_49"))
                                                   (rule "applyEq" (formula "33") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "33") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "33") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                   (rule "applyEqReverse" (formula "33") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "31") (term "0,0,0") (inst "selectSK=arr_50"))
                                                   (rule "applyEq" (formula "32") (term "1,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "32") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "32") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                   (rule "replaceKnownSelect_taclet10000011011100000_9" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000011011100000_10" (formula "1") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "33") (term "2,0") (inst "selectSK=arr_51"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=arr_52"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "18"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_53"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "nnf_imp2or" (formula "15") (term "0"))
                                                   (rule "nnf_imp2or" (formula "17") (term "0"))
                                                   (rule "nnf_imp2or" (formula "16") (term "0"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0"))
                                                   (rule "nnf_imp2or" (formula "26") (term "0"))
                                                   (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "17") (term "0"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "commute_or" (formula "17") (term "0,0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or" (formula "32") (term "0,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "9") (term "0"))
                                                   (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 TRUE"
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "36") (term "1,0,0,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "36") (term "1,0,1,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "36") (term "1,0,1,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "close" (formula "36") (ifseqformula "2"))
                                                      )
                                                      (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE FALSE"
                                                         (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "45"))
                                                         (rule "close" (formula "33") (ifseqformula "22"))
                                                      )
                                                   )
                                                   (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "33"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10"))
                                                      (rule "times_zero_2" (formula "10") (term "1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "14"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "18"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0") (ifseqformula "14"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "orRight" (formula "35"))
                                                (rule "orRight" (formula "33"))
                                                (rule "orRight" (formula "33"))
                                                (rule "eqSymm" (formula "12") (term "1,0"))
                                                (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                (rule "times_zero_2" (formula "5") (term "1,1"))
                                                (rule "add_zero_right" (formula "5") (term "1"))
                                                (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                                (rule "times_zero_2" (formula "6") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "6") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "1,1"))
                                                (rule "add_zero_right" (formula "3") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "5"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                                                (rule "nonNull" (formula "30") (inst "i=i"))
                                                (rule "greater_literals" (formula "30") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                                (rule "sub_literals" (formula "30") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "15") (inst "i=i"))
                                                (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "greater_literals" (formula "15") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "array2seqDef" (formula "32") (term "0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "getOfSeqDef" (formula "32") (term "0"))
                                                (rule "castDel" (formula "32") (term "1,0"))
                                                (rule "castDel" (formula "32") (term "2,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,2,1,0"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "32") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "32") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "nonNull" (formula "14") (inst "i=i"))
                                                (rule "greater_literals" (formula "14") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_28"))
                                                (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "42") (term "0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "24"))
                                                (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "elementOfSingleton" (formula "24") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "24"))
                                                (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_10"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=arr_20"))
                                                (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "18"))
                                                (rule "pullOutSelect" (formula "7") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_29"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "9") (term "0,0,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replaceKnownSelect_taclet1000011011100000_1" (formula "7") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1000011011100000_2" (formula "7") (term "0"))
                                                (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "0,1,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                                (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=arr_21"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_22"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_23"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "19"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_24"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_imp2or" (formula "16") (term "0"))
                                                (rule "nnf_imp2or" (formula "33") (term "0"))
                                                (rule "nnf_imp2or" (formula "18") (term "0"))
                                                (rule "nnf_imp2or" (formula "17") (term "0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0"))
                                                (rule "commute_or_2" (formula "18") (term "0"))
                                                (rule "commute_or_2" (formula "17") (term "0"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "commute_or_2" (formula "27") (term "0"))
                                                (rule "commute_or" (formula "33") (term "0,0"))
                                                (rule "commute_or" (formula "18") (term "0,0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or" (formula "27") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "10") (term "0"))
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 TRUE"
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "7"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch " verif.selectvoting.system.core.ConservativeExtension.messages.<created>@anon_heap_storeMessages«anonHeapFunction» = TRUE FALSE"
                                                      (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "45"))
                                                      (rule "close" (formula "34") (ifseqformula "23"))
                                                   )
                                                )
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages@anon_heap_storeMessages«anonHeapFunction».length ≥ 1 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "34"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "times_zero_2" (formula "11") (term "1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "close" (formula "28") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "lenOfArray2seq" (formula "27") (term "0") (userinteraction))
                                          (rule "lenOfArray2seq" (formula "27") (term "1") (userinteraction))
                                          (rule "selectOfAnonEQ" (formula "27") (term "0,0") (ifseqformula "22") (userinteraction))
                                          (rule "selectOfAnonEQ" (formula "27") (term "0,1") (ifseqformula "17") (userinteraction))
                                          (rule "ifthenelse_split" (formula "27") (term "0,0") (userinteraction))
                                          (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ ∅ ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ freshLocs(heapAfter_storeMessages) TRUE"
                                             (rule "ifthenelse_split" (formula "28") (term "0,1") (userinteraction))
                                             (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ {(null, ConservativeExtension::$messages)} ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ freshLocs(heapAfter_setEquality) TRUE"
                                                (builtin "One Step Simplification" (formula "11"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "15"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "19"))
                                                (rule "true_left" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "14"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "18"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1") (ifseqformula "18"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "14"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "orRight" (formula "33"))
                                                (rule "orRight" (formula "31"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "orRight" (formula "32"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "28"))
                                                (rule "orRight" (formula "28"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "eqSymm" (formula "10") (term "1,0"))
                                                (rule "replace_known_right" (formula "25") (term "1,0,1") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "37")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                (rule "times_zero_2" (formula "2") (term "1,1"))
                                                (rule "add_zero_right" (formula "2") (term "1"))
                                                (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                (rule "times_zero_2" (formula "3") (term "1,1"))
                                                (rule "add_zero_right" (formula "3") (term "1"))
                                                (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                (rule "times_zero_2" (formula "4") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "nonNull" (formula "27") (inst "i=i"))
                                                (rule "greater_literals" (formula "27") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")))
                                                (rule "sub_literals" (formula "27") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "12") (inst "i=i"))
                                                (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "greater_literals" (formula "12") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "11") (inst "i=i"))
                                                (rule "greater_literals" (formula "11") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "notLeft" (formula "11"))
                                                (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "20") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_36"))
                                                (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "43") (term "0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "20"))
                                                (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "elementOfSingleton" (formula "20") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "35") (term "1,0,1") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "20"))
                                                (rule "hideAuxiliaryEq" (formula "20"))
                                                (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_14"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_37"))
                                                (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet0010011011100000_1" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010011011100000_2" (formula "1") (term "0"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "33") (ifseqformula "1") (ifseqformula "34"))
                                                (rule "close" (formula "33") (ifseqformula "18"))
                                             )
                                             (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ {(null, ConservativeExtension::$messages)} ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages, arr(iv_1)) ∊ freshLocs(heapAfter_setEquality) FALSE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")) (ifInst ""  (formula "33")))
                                                (rule "closeTrue" (formula "28"))
                                             )
                                          )
                                          (branch " (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ ∅ ∧ ¬arr(iv_1) = java.lang.Object::<created> ∨ (verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg, arr(iv_1)) ∊ freshLocs(heapAfter_storeMessages) FALSE"
                                             (builtin "One Step Simplification" (formula "9"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1") (ifseqformula "13"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "31"))
                                             (rule "orRight" (formula "31"))
                                             (rule "eqSymm" (formula "10") (term "1,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,1") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                             (rule "polySimp_elimSub" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "1,1"))
                                             (rule "add_zero_right" (formula "3") (term "1"))
                                             (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                             (rule "times_zero_2" (formula "4") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "1") (term "1"))
                                             (rule "times_zero_2" (formula "1") (term "1,1"))
                                             (rule "add_zero_right" (formula "1") (term "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "nonNull" (formula "11") (inst "i=i"))
                                             (rule "greater_literals" (formula "11") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "27") (inst "i=i"))
                                             (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
                                             (rule "greater_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "12") (inst "i=i"))
                                             (rule "greater_literals" (formula "12") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_15"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_38"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "21"))
                                             (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "elementOfSingleton" (formula "21") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "32") (term "1,0,1") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=arr_36"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "31") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_39"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet110011011100000_5" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110011011100000_6" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "1,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "32") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "37")))
                                             (rule "applyEqReverse" (formula "31") (term "0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeTrue" (formula "31"))
                                          )
                                       )
                                    )
                                    (branch " 0 ≤ iv_1 ∧ iv_1 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_storeMessages.length - 0 FALSE"
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
                                       (rule "castDel" (formula "27") (term "0"))
                                       (rule "castDel" (formula "27") (term "1"))
                                       (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "eqSymm" (formula "9") (term "1,0"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1"))
                                       (rule "times_zero_2" (formula "1") (term "1,1"))
                                       (rule "add_zero_right" (formula "1") (term "1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "1"))
                                       (rule "times_zero_2" (formula "27") (term "1,1"))
                                       (rule "add_zero_right" (formula "27") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                       (rule "inEqSimp_ltRight" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "nonNull" (formula "12") (inst "i=i"))
                                       (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "greater_literals" (formula "12") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "notLeft" (formula "12"))
                                       (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "27") (inst "i=i"))
                                       (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "34")))
                                       (rule "greater_literals" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "11") (inst "i=i"))
                                       (rule "greater_literals" (formula "11") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "notLeft" (formula "11"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_24"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_25"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "31") (term "1,1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "replaceKnownSelect_taclet1011011100000_1" (formula "2") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1011011100000_2" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "31") (term "1,1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "31") (term "1,0,1,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " 0 ≤ iv_1 ∧ iv_1 < verif.selectvoting.system.core.ConservativeExtension.messages@heapAfter_chooseMsg.length - 0 FALSE"
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "11"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0") (ifseqformula "11"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "11"))
                                    (rule "castDel" (formula "26") (term "1,1"))
                                    (rule "castDel" (formula "26") (term "0"))
                                    (rule "castDel" (formula "26") (term "2,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,2,1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "eqSymm" (formula "8") (term "1,0"))
                                    (rule "eqSymm" (formula "27"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")))
                                    (rule "orRight" (formula "27"))
                                    (rule "notRight" (formula "27"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1"))
                                    (rule "times_zero_2" (formula "1") (term "1,1"))
                                    (rule "add_zero_right" (formula "1") (term "1"))
                                    (rule "polySimp_elimSub" (formula "27") (term "1"))
                                    (rule "times_zero_2" (formula "27") (term "1,1"))
                                    (rule "add_zero_right" (formula "27") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "nonNull" (formula "12") (inst "i=i"))
                                    (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "greater_literals" (formula "12") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "greater_literals" (formula "11") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "28"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "27") (inst "i=i"))
                                    (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
                                    (rule "greater_literals" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "pullOutSelect" (formula "20") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_26"))
                                    (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "31") (term "1,1,2,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "elementOfSingleton" (formula "20") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "applyEqReverse" (formula "31") (term "1,1,2,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "31") (term "1,0,1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "20"))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_27"))
                                    (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet111011100000_1" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111011100000_2" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "close" (formula "29") (ifseqformula "23"))
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "6"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "10"))
               (rule "orRight" (formula "27"))
               (rule "orRight" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "allRight" (formula "32") (inst "sk=f_2"))
               (rule "allRight" (formula "32") (inst "sk=o_2"))
               (rule "orRight" (formula "32"))
               (rule "orRight" (formula "32"))
               (rule "eqSymm" (formula "6") (term "1,0"))
               (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
               (rule "elementOfSingleton" (formula "32"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "8") (inst "i=i"))
               (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "greater_literals" (formula "8") (term "0,1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "25"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "7") (inst "i=i"))
               (rule "greater_literals" (formula "7") (term "0,1"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "notLeft" (formula "7"))
               (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "25"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "24") (inst "i=i"))
               (rule "greater_literals" (formula "24") (term "0,1"))
               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
               (rule "sub_literals" (formula "24") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "16") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_17"))
               (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "16"))
               (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
               (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "16"))
               (rule "applyEq" (formula "18") (term "1,0,0,1,0") (ifseqformula "16"))
               (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "16"))
               (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "elementOfSingleton" (formula "16") (term "0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "16"))
               (rule "hideAuxiliaryEq" (formula "16"))
               (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_Setup_secret_4"))
               (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "22"))
               (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "elementOfSingleton" (formula "22") (term "0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "22"))
               (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "22"))
               (rule "hideAuxiliaryEq" (formula "22"))
               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_2_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
               (rule "eqSymm" (formula "37"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "nnf_imp2or" (formula "8") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_notAnd" (formula "8") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
               (rule "commute_and" (formula "36"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or_2" (formula "26") (term "0"))
               (rule "commute_or_2" (formula "19") (term "0"))
               (rule "commute_or" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "9") (term "0,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "commute_or" (formula "19") (term "0,0"))
               (rule "cut_direct" (formula "37") (term "0,0"))
               (branch "CUT: o_2 = null TRUE"
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "false_right" (formula "38"))
                  (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "CUT: o_2 = null FALSE"
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "notRight" (formula "38"))
                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                  (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "38")))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
         (branch "Exceptional Post (chooseMsg)"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,1,1,1,0,1,1") (ifseqformula "10"))
            (rule "andLeft" (formula "16"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
            (rule "andLeft" (formula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,1,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,0,1,1,0,1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,0,0,1,1,0,1") (ifseqformula "10"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "notLeft" (formula "20"))
            (rule "close" (formula "23") (ifseqformula "22"))
         )
         (branch
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "17"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "nonNull" (formula "7") (inst "i=i") (userinteraction))
            (rule "nonNull" (formula "8") (inst "i=i") (userinteraction))
            (rule "sub_literals" (formula "7") (term "2,1,0,1,1") (userinteraction))
            (rule "sub_literals" (formula "8") (term "2,1,0,1,1") (userinteraction))
            (rule "greater_literals" (formula "7") (term "0,1") (userinteraction))
            (rule "greater_literals" (formula "8") (term "0,1") (userinteraction))
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "9"))
            (rule "notLeft" (formula "7"))
            (rule "andRight" (formula "22"))
            (branch "Case 1"
               (rule "andRight" (formula "22"))
               (branch "Case 1"
                  (rule "andRight" (formula "22"))
                  (branch "Case 1"
                     (rule "andRight" (formula "22"))
                     (branch "Case 1"
                        (rule "notRight" (formula "22"))
                        (rule "close" (formula "19") (ifseqformula "1"))
                     )
                     (branch "Case 2"
                        (rule "notRight" (formula "22"))
                        (rule "close" (formula "20") (ifseqformula "1"))
                     )
                  )
                  (branch
                     (rule "equalityToSeqGetAndSeqLen" (formula "16") (inst "iv=iv") (userinteraction))
                     (rule "andLeft" (formula "16") (userinteraction))
                     (rule "array2seq2dDef" (formula "16") (term "0,1") (inst "u=u") (userinteraction))
                     (rule "array2seq2dDef" (formula "16") (term "0,0") (inst "u=u") (userinteraction))
                     (rule "lenOfSeqDef" (formula "16") (term "1") (userinteraction))
                     (rule "lenOfSeqDef" (formula "16") (term "0") (userinteraction))
                     (rule "seqPermDef" (formula "12") (inst "s=s") (inst "iv=iv") (userinteraction))
                     (rule "andLeft" (formula "12") (userinteraction))
                     (rule "array2seq2dDef" (formula "12") (term "0,0") (inst "u=u") (userinteraction))
                     (rule "array2seq2dDef" (formula "12") (term "0,1") (inst "u=u") (userinteraction))
                     (rule "lenOfSeqDef" (formula "12") (term "0") (userinteraction))
                     (rule "lenOfSeqDef" (formula "12") (term "1") (userinteraction))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (ifseqformula "10"))
                     (rule "orRight" (formula "22"))
                     (rule "exLeft" (formula "13") (inst "sk=s_0"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "eqSymm" (formula "12"))
                     (rule "eqSymm" (formula "27"))
                     (rule "eqSymm" (formula "6") (term "1,0"))
                     (rule "eqSymm" (formula "15") (term "1,0"))
                     (rule "eqSymm" (formula "13"))
                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                     (rule "times_zero_2" (formula "19") (term "1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                     (rule "times_zero_2" (formula "19") (term "1,1,1"))
                     (rule "add_zero_right" (formula "19") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,0"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0"))
                     (rule "add_zero_right" (formula "12") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                     (rule "times_zero_2" (formula "12") (term "1,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                     (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "23"))
                     (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "22"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "19"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                     (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_10"))
                     (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "20") (term "1,0,1,1,1,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "21"))
                     (rule "applyEq" (formula "20") (term "1,0,0,1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "elementOfSingleton" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "applyEqReverse" (formula "20") (term "1,0,1,1,1,0,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "12") (term "0,1,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "19") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "19") (term "0,1,0") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "19"))
                     (rule "nnf_imp2or" (formula "7") (term "0"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_imp2or" (formula "6") (term "0"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_notAnd" (formula "7") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "6") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0"))
                     (rule "commute_or_2" (formula "8") (term "0"))
                     (rule "commute_or_2" (formula "15") (term "0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or" (formula "7") (term "0,0"))
                     (rule "commute_or" (formula "8") (term "0,0"))
                     (rule "commute_or" (formula "15") (term "0,0"))
                     (rule "commute_or" (formula "20") (term "0,0"))
                     (rule "commute_or" (formula "21") (term "0,0"))
                     (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "arrayLengthNotNegative" (formula "27") (term "1"))
                     (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "29") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "lenNonNegative" (formula "15") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                     (rule "lenNonNegative" (formula "16") (term "1"))
                     (rule "inEqSimp_commuteLeq" (formula "16"))
                     (rule "ifthenelse_split" (formula "22") (term "1"))
                     (branch "msg1.length ≥ 1 TRUE"
                        (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "22"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "ifthenelse_split" (formula "22") (term "0"))
                        (branch "msg2.length ≥ 1 TRUE"
                           (rule "close" (formula "31") (ifseqformula "23"))
                        )
                        (branch "msg2.length ≥ 1 FALSE"
                           (rule "eqSymm" (formula "22"))
                           (rule "inEqSimp_geqRight" (formula "25"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                     )
                     (branch "msg1.length ≥ 1 FALSE"
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_geqRight" (formula "25"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                        (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "inEqSimp_geqRight" (formula "24"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "30"))
                        (rule "add_zero_right" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0"))
                        (rule "qeq_literals" (formula "30") (term "0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "false_right" (formula "30"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "22"))
                  (branch
                     (rule "allRight" (formula "22") (inst "sk=i_10") (userinteraction))
                     (rule "impRight" (formula "22") (userinteraction))
                     (rule "andLeft" (formula "1") (userinteraction))
                     (rule "instAll" (formula "1") (term "1") (ifseqformula "8") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "8"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                        (rule "closeTrue" (formula "20"))
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (ifseqformula "13"))
                        (rule "orRight" (formula "23"))
                        (rule "eqSymm" (formula "26"))
                        (rule "eqSymm" (formula "1"))
                        (rule "eqSymm" (formula "9") (term "1,0"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "21"))
                        (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "22"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_7"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "1,0,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "26") (term "0,1") (inst "selectSK=arr_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=arr_11"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "eqSymm" (formula "27"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "8")))
                        (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "26"))
                        (rule "close" (formula "26") (ifseqformula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "22"))
                     (branch
                        (rule "nonNull" (formula "22") (inst "i=i") (userinteraction))
                        (rule "greater_literals" (formula "22") (term "0,1") (userinteraction))
                        (rule "sub_literals" (formula "22") (term "2,1,0,1,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "18")))
                        (rule "allRight" (formula "22") (inst "sk=i_11") (userinteraction))
                        (rule "impRight" (formula "22") (userinteraction))
                        (rule "andLeft" (formula "1") (userinteraction))
                        (rule "instAll" (formula "1") (term "1") (ifseqformula "9") (userinteraction))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (ifseqformula "13"))
                        (rule "notRight" (formula "25"))
                        (rule "orRight" (formula "24"))
                        (rule "eqSymm" (formula "10") (term "1,0"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "4")))
                        (rule "notLeft" (formula "2"))
                        (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "22"))
                        (rule "narrowSelectArrayType" (formula "21") (term "0") (ifseqformula "5") (ifseqformula "22"))
                        (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "23"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "19") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_8"))
                        (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "19"))
                        (rule "applyEq" (formula "21") (term "1,0,0,1,0") (ifseqformula "19"))
                        (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "elementOfSingleton" (formula "19") (term "0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "19"))
                        (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "19"))
                        (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "19"))
                        (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "19"))
                        (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_12"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "5") (ifseqformula "22"))
                        (rule "close" (formula "21") (ifseqformula "1"))
                     )
                     (branch
                        (rule "nonNull" (formula "22") (inst "i=i") (userinteraction))
                        (rule "greater_literals" (formula "22") (term "0,1") (userinteraction))
                        (rule "sub_literals" (formula "22") (term "2,1,0,1,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                        (rule "allRight" (formula "22") (inst "sk=i_12") (userinteraction))
                        (rule "instAll" (formula "22") (term "0,1,0") (ifseqformula "8") (userinteraction))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (ifseqformula "11"))
                        (rule "impRight" (formula "23"))
                        (rule "orRight" (formula "22"))
                        (rule "notRight" (formula "25"))
                        (rule "andLeft" (formula "2"))
                        (rule "eqSymm" (formula "10") (term "1,0"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                        (rule "notLeft" (formula "4"))
                        (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "22"))
                        (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "23"))
                        (rule "narrowSelectArrayType" (formula "21") (term "0") (ifseqformula "5") (ifseqformula "23"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_9"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "1,0,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_13"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "8")))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "5") (ifseqformula "23"))
                        (rule "close" (formula "21") (ifseqformula "1"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "22"))
               (branch "Case 1"
                  (rule "andRight" (formula "22"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (ifseqformula "10"))
                     (rule "wellFormedAnonEQ" (formula "22") (ifseqformula "14"))
                     (rule "wellFormedAnonEQ" (formula "22") (term "0") (ifseqformula "10"))
                     (rule "orRight" (formula "20"))
                     (rule "eqSymm" (formula "6") (term "1,0"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "2")) (ifInst ""  (formula "9")))
                     (rule "closeTrue" (formula "23"))
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "22"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (ifseqformula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0") (ifseqformula "10"))
                     (rule "orRight" (formula "20"))
                     (rule "orRight" (formula "23"))
                     (rule "orRight" (formula "23"))
                     (rule "eqSymm" (formula "6") (term "1,0"))
                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch "Case 2"
                  (rule "orRight" (formula "22"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0") (ifseqformula "10"))
                  (rule "orRight" (formula "20"))
                  (rule "orRight" (formula "23"))
                  (rule "orRight" (formula "23"))
                  (rule "eqSymm" (formula "6") (term "1,0"))
                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                  (rule "closeFalse" (formula "4"))
               )
            )
         )
      )
      (branch "Exceptional Post (storeMessages)"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,1,1,1,0,1,1") (ifseqformula "10"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0") (ifseqformula "10"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "19") (ifseqformula "18"))
      )
      (branch
         (builtin "One Step Simplification" (formula "13"))
         (rule "andRight" (formula "13") (userinteraction))
         (branch "Case 1"
            (rule "nonNull" (formula "13") (inst "i=i") (userinteraction))
            (rule "nonNull" (formula "8") (inst "i=i") (userinteraction))
            (rule "nonNull" (formula "7") (inst "i=i") (userinteraction))
            (rule "sub_literals" (formula "13") (term "2,1,0,1,1") (userinteraction))
            (rule "sub_literals" (formula "7") (term "2,1,0,1,1") (userinteraction))
            (rule "sub_literals" (formula "8") (term "2,1,0,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "greater_literals" (formula "7") (term "0,1") (userinteraction))
            (rule "greater_literals" (formula "8") (term "0,1") (userinteraction))
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "greater_literals" (formula "13") (term "0,1") (userinteraction))
            (builtin "One Step Simplification" (formula "13"))
            (rule "andRight" (formula "13") (userinteraction))
            (branch "Case 1"
               (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "13") (userinteraction))
               (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7") (userinteraction))
            )
            (branch "Case 2"
               (rule "andLeft" (formula "7") (userinteraction))
               (rule "allRight" (formula "14") (inst "sk=i_6") (userinteraction))
               (rule "instAll" (formula "14") (term "0,1,0") (ifseqformula "6") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "6"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "impRight" (formula "15"))
                  (rule "close" (formula "15") (ifseqformula "1"))
               )
               (branch "Case 2"
                  (rule "impRight" (formula "15") (userinteraction))
                  (rule "instAll" (formula "16") (term "0,2,0,0") (ifseqformula "10") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch "Case 1"
                     (rule "close" (formula "16") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "notRight" (formula "17"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "3"))
                     (rule "notLeft" (formula "2"))
                     (rule "notLeft" (formula "12"))
                     (rule "eqSymm" (formula "4"))
                     (rule "eqSymm" (formula "10") (term "1,0"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "19"))
                     (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "17"))
                     (rule "narrowSelectArrayType" (formula "18") (term "0") (ifseqformula "6") (ifseqformula "19"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "8")))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "6") (ifseqformula "19"))
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
               )
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "6"))
            (rule "wellFormedAnonEQ" (formula "13") (term "0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1") (ifseqformula "10"))
            (rule "eqSymm" (formula "6") (term "1,0"))
            (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "9")))
            (rule "orRight" (formula "13"))
            (rule "orRight" (formula "14"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "3"))
         )
      )
   )
   (branch "result_0 = TRUE FALSE"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
      (rule "eqSymm" (formula "5") (term "1,0"))
      (rule "eqSymm" (formula "11"))
      (rule "elementOfSingleton" (formula "13") (term "0,0,0,0,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
      (rule "blockThrow" (formula "13") (term "1"))
      (rule "apply_eq_boolean" (formula "11") (term "1") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1,1,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "7") (inst "i=i"))
      (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "greater_literals" (formula "7") (term "0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "7"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "11"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "14") (term "1,1,1,1,0,0,1") (inst "i=i"))
      (rule "greater_literals" (formula "14") (term "0,1,1,1,1,1,0,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1,1,1,1,1,0,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "nonNull" (formula "6") (inst "i=i"))
      (rule "greater_literals" (formula "6") (term "0,1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "sub_literals" (formula "6") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "notLeft" (formula "6"))
      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "11"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "5") (term "0"))
      (rule "nnf_imp2or" (formula "7") (term "0"))
      (rule "nnf_imp2or" (formula "6") (term "0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "6") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "15") (term "0,0,1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "15") (term "0,1,1,1,1,1,0,0,1"))
      (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,1,1,0,0,1"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,1,1,0,0,1"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,1,1,0,0,1"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,1,1,0,0,1"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,1,1,0,0,1"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,1,1,0,0,1"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0,0,1,1,0,0,1"))
      (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,1,1,1,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,1,1,1,1,0,0,1"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,1,1,1,1,0,0,1"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,1,1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1,1,1,1,0,0,1"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,1,1,1,0,0,1"))
      (rule "commute_or_2" (formula "7") (term "0"))
      (rule "commute_or_2" (formula "6") (term "0"))
      (rule "commute_or" (formula "7") (term "0,0"))
      (rule "commute_or" (formula "6") (term "0,0"))
      (rule "throwUnfold" (formula "15") (term "1") (inst "#v0=t"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "t"))
      (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_Throwable,self,exc_1,heapAfter_Throwable,anon_heap_Throwable") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
      (branch "Post (Throwable)"
         (builtin "One Step Simplification" (formula "17"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,0,1,0,1,0,1") (ifseqformula "9"))
         (rule "andLeft" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0,1,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,1,0,1,0") (ifseqformula "9"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "orRight" (formula "19"))
         (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
         (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0,0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "16") (term "1,0,1,0,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
         (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
         (rule "hideAuxiliaryEq" (formula "16"))
         (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
         (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "22")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0,0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "15") (term "0,0,1,0,0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")))
         (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "commuteUnion" (formula "12") (term "1,0"))
         (rule "methodCallParamThrow" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "tryCatchThrow" (formula "26") (term "1"))
         (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0,0"))
         (rule "arrayLengthIsAShort" (formula "6") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_2"))
         (rule "equality_comparison_simple" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "replace_known_right" (formula "27") (term "0,0,1,0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "ifElseSplit" (formula "28"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "28"))
            (branch "if t instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "28") (term "1") (newnames "e"))
               (rule "reference_type_cast" (formula "28") (term "1"))
               (branch "Normal Execution (t instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "29"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "emptyModality" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "23")))
                  (rule "allRight" (formula "28") (inst "sk=f_0"))
                  (rule "allRight" (formula "28") (inst "sk=o_0"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "eqSymm" (formula "30"))
                  (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
                  (rule "eqSymm" (formula "31"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and" (formula "29"))
                  (rule "commute_and" (formula "1") (term "1,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "1,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                  (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self ∧ ( f_0 = java.lang.Throwable::$cause ∨ f_0 = java.lang.Throwable::$message) ∧ (f_0 = java.lang.Throwable::$cause ∨ o_0 = self) ∧ (f_0 = java.lang.Throwable::$message ∨ o_0 = self) ∨ ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_setEquality«anonHeapFunction» = TRUE) TRUE"
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "eqSymm" (formula "31"))
                     (rule "orLeft" (formula "1"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self ∧ ( f_0 = java.lang.Throwable::$cause ∨ f_0 = java.lang.Throwable::$message) ∧ (f_0 = java.lang.Throwable::$cause ∨ o_0 = self) ∧ (f_0 = java.lang.Throwable::$message ∨ o_0 = self)"
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "1"))
                        (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "notRight" (formula "32"))
                        (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "false_right" (formula "32"))
                        (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "25") (ifseqformula "1"))
                     )
                     (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_setEquality«anonHeapFunction» = TRUE)"
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "21"))
                        (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "23")))
                        (rule "closeTrue" (formula "31"))
                     )
                  )
                  (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self ∧ ( f_0 = java.lang.Throwable::$cause ∨ f_0 = java.lang.Throwable::$message) ∧ (f_0 = java.lang.Throwable::$cause ∨ o_0 = self) ∧ (f_0 = java.lang.Throwable::$message ∨ o_0 = self) ∨ ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_setEquality«anonHeapFunction» = TRUE) FALSE"
                     (rule "close" (formula "32") (ifseqformula "1"))
                  )
               )
               (branch "ClassCastException (!(t instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "29"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "closeTrue" (formula "28"))
               )
            )
            (branch "if t instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Exceptional Post (Throwable)"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,0,1,0,1,0,1") (ifseqformula "9"))
         (rule "andLeft" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0,1,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,1,0,1,0") (ifseqformula "9"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "13"))
         (rule "close" (formula "20") (ifseqformula "19"))
      )
      (branch "Pre (Throwable)"
         (builtin "One Step Simplification" (formula "15"))
         (rule "wellFormedAnonEQ" (formula "15") (ifseqformula "9"))
         (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "8")))
         (rule "closeTrue" (formula "15"))
      )
   )
)
(branch "Exceptional Post (setEquality)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "13") (ifseqformula "12"))
)
(branch
   (rule "nonNull" (formula "6") (inst "i=i") (userinteraction))
   (rule "nonNull" (formula "7") (inst "i=i") (userinteraction))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
   (rule "nonNull" (formula "8") (term "0,1") (inst "i=i") (userinteraction))
   (rule "nonNull" (formula "8") (term "1,1") (inst "i=i") (userinteraction))
   (builtin "One Step Simplification" (formula "5"))
   (rule "greater_literals" (formula "6") (term "0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "greater_literals" (formula "8") (term "0,1,0,1"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")) (ifInst ""  (formula "6")))
   (rule "greater_literals" (formula "7") (term "0,1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "sub_literals" (formula "6") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "sub_literals" (formula "7") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "eqSymm" (formula "5") (term "1,0"))
   (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
   (rule "closeTrue" (formula "10"))
)
)

}
