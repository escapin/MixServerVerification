\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 05 18:04:58 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=2000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Aug 05 18:04:58 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "3807")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "in,result,exc,heapAtPre,o,f") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "assignment" (formula "7") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_second,savedHeapBefore_second,_inBefore_second") (userinteraction))
(builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "len") (userinteraction))
(builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_byteArrayToInt,result_0,exc_0,heapAfter_byteArrayToInt,anon_heap_byteArrayToInt") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
(branch "Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment" (formula "9") (term "1") (userinteraction))
   (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x") (userinteraction))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x") (userinteraction))
   (rule "compound_assignment_5_nonsimple" (formula "11") (term "1") (userinteraction))
   (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x_1") (userinteraction))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_39") (userinteraction))
   (rule "less_than_comparison_simple" (formula "11") (term "1") (userinteraction))
   (builtin "One Step Simplification" (formula "11"))
   (rule "ifthenelse_split" (formula "11") (term "0,1,0") (userinteraction))
   (branch
      (opengoal " ")
   )
   (branch
      (rule "ifElseSplit" (formula "12") (userinteraction))
      (branch "if x_39 true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch
         (rule "compound_greater_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_2") (inst "#v0=x_1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_51") (userinteraction))
         (rule "assignment" (formula "13") (term "1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "x_52") (userinteraction))
         (rule "remove_parentheses_right" (formula "13") (term "1,1") (userinteraction))
         (rule "compound_subtraction_1" (formula "13") (term "1,1") (inst "#v=x_53") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "x_53") (userinteraction))
         (rule "assignment_read_length" (formula "13") (term "1,1") (userinteraction))
         (branch "Normal Execution (_in != null)"
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
            (rule "false_right" (formula "13") (userinteraction))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1") (userinteraction))
            (builtin "One Step Simplification" (formula "12"))
            (rule "assignmentSubtractionInt" (formula "12") (term "1") (userinteraction))
            (rule "greater_than_comparison_simple" (formula "12") (term "1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "12"))
            (rule "translateJavaSubInt" (formula "12") (term "1,0,0,1,0") (userinteraction))
            (rule "ifthenelse_split" (formula "12") (term "0,1,0") (userinteraction))
            (branch "result_0 > in.length - 4 TRUE"
               (rule "blockEmpty" (formula "13") (term "1") (userinteraction))
               (opengoal " ")
            )
            (branch "result_0 > in.length - 4 FALSE"
               (rule "blockEmpty" (formula "13") (term "1") (userinteraction))
               (opengoal " ")
            )
         )
         (branch "Null Reference (_in = null)"
            (builtin "One Step Simplification" (formula "2"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
(branch "Exceptional Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaAddInt" (formula "4") (term "1"))
   (rule "translateJavaSubInt" (formula "9") (term "1,0,1,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "9") (term "0,1,0,1,0,0,0,1"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch
   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")))
   (rule "translateJavaAddInt" (formula "4") (term "1"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "inEqSimp_geqRight" (formula "7"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_homoInEq1" (formula "5"))
   (rule "polySimp_addComm1" (formula "5") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1"))
   (rule "polySimp_rightDist" (formula "5") (term "1"))
   (rule "mul_literals" (formula "5") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
   (rule "times_zero_1" (formula "6") (term "0,0"))
   (rule "add_zero_left" (formula "6") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "mul_literals" (formula "6") (term "1"))
   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
   (rule "qeq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeFalse" (formula "6"))
)
)

}
