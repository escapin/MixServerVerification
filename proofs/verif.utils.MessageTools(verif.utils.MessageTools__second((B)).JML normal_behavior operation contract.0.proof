\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Nov 28 16:37:32 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=8000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Nov 28 16:37:32 CET 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "09f735064ff7095c3fc50fbed0305eab50b24aa5"))

(autoModeTime "29029")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "in,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "assignment" (formula "7") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "7") (term "1,1") (newnames "heapBefore_second,savedHeapBefore_second,_inBefore_second") (userinteraction))
(builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "len") (userinteraction))
(builtin "Evaluate Query" (formula "5") (term "0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
(rule "notLeft" (formula "1") (userinteraction))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "queryResult") (userinteraction))
(builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_byteArrayToInt,result_0,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
(branch "Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "6"))
   (rule "assignment" (formula "7") (term "1") (userinteraction))
   (rule "methodCallEmpty" (formula "7") (term "1,1") (userinteraction))
   (rule "emptyModality" (formula "7") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "6") (userinteraction))
   (rule "andLeft" (formula "7") (userinteraction))
   (rule "notRight" (formula "8") (userinteraction))
   (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_byteArrayToInt_0,result_1,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
   (branch "Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9") (userinteraction))
      (rule "andLeft" (formula "10") (userinteraction))
      (rule "assignment" (formula "12") (term "1") (userinteraction))
      (rule "ifUnfold" (formula "12") (term "1,1") (inst "#boolv=x") (userinteraction))
      (rule "variableDeclaration" (formula "12") (term "1,1") (newnames "x") (userinteraction))
      (rule "compound_assignment_5_nonsimple" (formula "12") (term "1,1") (userinteraction))
      (rule "ifElseUnfold" (formula "12") (term "1,1") (inst "#boolv=x_1") (userinteraction))
      (rule "variableDeclaration" (formula "12") (term "1,1") (newnames "x_1") (userinteraction))
      (rule "less_than_comparison_simple" (formula "12") (term "1,1") (userinteraction))
      (rule "ifElse" (formula "12") (term "1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "12"))
      (rule "ifthenelse_split_for" (formula "12") (userinteraction))
      (branch "result_1 < 0 TRUE"
         (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "0"))
         (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "1,1"))
         (rule "translateJavaAddInt" (formula "6") (term "1"))
         (rule "eqSymm" (formula "9"))
         (rule "eqSymm" (formula "11"))
         (rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "ifEnterThen" (formula "13") (term "1"))
         (rule "inEqSimp_ltToLeq" (formula "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
         (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "9"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "9"))
         (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "9") (term "1") (ifseqformula "2"))
         (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "result_1 < 0 FALSE"
         (rule "compound_greater_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_2") (inst "#v0=x_1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3") (userinteraction))
         (rule "assignment" (formula "13") (term "1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "x_2") (userinteraction))
         (rule "remove_parentheses_right" (formula "13") (term "1,1") (userinteraction))
         (rule "compound_subtraction_1" (formula "13") (term "1,1") (inst "#v=x_4") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "x_4") (userinteraction))
         (rule "assignment_read_length" (formula "13") (term "1,1") (userinteraction))
         (branch "Normal Execution (_in != null)"
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
            (builtin "One Step Simplification" (formula "14"))
            (rule "assignmentSubtractionInt" (formula "14") (term "1") (userinteraction))
            (rule "greater_than_comparison_simple" (formula "14") (term "1,1") (userinteraction))
            (rule "blockEmpty" (formula "14") (term "1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "14"))
            (rule "if" (formula "14") (term "1") (userinteraction))
            (builtin "One Step Simplification" (formula "14"))
            (rule "ifthenelse_split_for" (formula "14") (userinteraction))
            (branch "result_1 > javaSubInt(in.length, 4) TRUE"
               (rule "false_right" (formula "14"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "1,1"))
               (rule "translateJavaSubInt" (formula "1") (term "1"))
               (rule "translateJavaAddInt" (formula "6") (term "1"))
               (rule "eqSymm" (formula "9"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_elimSub" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "inEqSimp_ltRight" (formula "13"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "2"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
               (rule "eqSymm" (formula "12"))
               (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
               (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
               (rule "applyEq" (formula "9") (term "1") (ifseqformula "2"))
               (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "11") (term "1") (ifseqformula "2"))
               (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "2"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
            (branch "result_1 > javaSubInt(in.length, 4) FALSE"
               (rule "false_right" (formula "13") (userinteraction))
               (rule "variableDeclarationAssign" (formula "14") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "m2") (userinteraction))
               (rule "arrayCreation" (formula "14") (term "1") (inst "#v0=x_arr") (userinteraction))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr") (userinteraction))
               (rule "variableDeclarationAssign" (formula "14") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "dim0") (userinteraction))
               (rule "compound_subtraction_1" (formula "14") (term "1") (inst "#v=x") (userinteraction))
               (rule "variableDeclarationAssign" (formula "14") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_5") (userinteraction))
               (rule "compound_subtraction_1" (formula "14") (term "1") (inst "#v=x_6") (userinteraction))
               (rule "variableDeclarationAssign" (formula "14") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_6") (userinteraction))
               (rule "assignment_read_length" (formula "14") (term "1") (userinteraction))
               (branch "Normal Execution (_in != null)"
                  (rule "assignmentSubtractionInt" (formula "15") (term "1,1") (userinteraction))
                  (rule "assignmentSubtractionInt" (formula "15") (term "1,1,1") (userinteraction))
                  (rule "ifUnfold" (formula "15") (term "1,1,1,1") (inst "#boolv=x") (userinteraction))
                  (rule "variableDeclaration" (formula "15") (term "1,1,1,1") (newnames "x_7") (userinteraction))
                  (rule "less_than_comparison_simple" (formula "15") (term "1,1,1,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
                  (rule "false_right" (formula "14") (userinteraction))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "if" (formula "14") (term "1") (userinteraction))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "ifthenelse_split_for" (formula "14") (userinteraction))
                  (branch "javaSubInt(javaSubInt(in.length, result_1), 4) < 0 TRUE"
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "0"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "1,1"))
                     (rule "translateJavaSubInt" (formula "1") (term "0"))
                     (rule "translateJavaSubInt" (formula "14") (term "1"))
                     (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                     (rule "translateJavaAddInt" (formula "6") (term "1"))
                     (rule "translateJavaSubInt" (formula "1") (term "0,0"))
                     (rule "translateJavaSubInt" (formula "15") (term "0,0,1,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "15") (term "1,0,0,1,0,1"))
                     (rule "eqSymm" (formula "9"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "polySimp_elimSub" (formula "14") (term "1"))
                     (rule "mul_literals" (formula "14") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0"))
                     (rule "mul_literals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "1"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0"))
                     (rule "inEqSimp_ltRight" (formula "13"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "14"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "blockThrow" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                     (rule "eqSymm" (formula "13"))
                     (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "11") (term "1") (ifseqformula "4"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "3"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "3"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch "javaSubInt(javaSubInt(in.length, result_1), 4) < 0 FALSE"
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=x_arr_1") (userinteraction))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_1") (userinteraction))
                     (rule "variableDeclarationAssign" (formula "15") (term "1") (userinteraction))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "length_1") (userinteraction))
                     (rule "assignment" (formula "15") (term "1") (userinteraction))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createArray>_0,savedHeapBefore_<createArray>_0") (userinteraction))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "newObject_1") (userinteraction))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=x_arr_2") (userinteraction))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_3") (userinteraction))
                     (rule "variableDeclarationAssign" (formula "15") (term "1") (userinteraction))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "length_3") (userinteraction))
                     (rule "assignment" (formula "15") (term "1") (userinteraction))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "allocateInstanceWithLength" (formula "15") (userinteraction))
                     (rule "blockEmpty" (formula "16") (term "1,1") (userinteraction))
                     (rule "assignment" (formula "16") (term "1,1") (userinteraction))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "methodCall" (formula "16") (term "1") (userinteraction))
                     (branch "Normal Execution (newObject_1 != null )"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>") (userinteraction))
                        (rule "assignment_write_attribute_this" (formula "17") (term "1,1") (userinteraction))
                        (rule "methodCallWithinClass" (formula "17") (term "1,1,1") (userinteraction))
                        (rule "methodBodyExpand" (formula "17") (term "1,1,1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>") (userinteraction))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "arrayInitialisation" (formula "17") (term "1") (userinteraction))
                        (rule "methodCallEmpty" (formula "17") (term "1,1") (userinteraction))
                        (rule "blockEmpty" (formula "17") (term "1,1") (userinteraction))
                        (rule "assignment_write_attribute_this" (formula "17") (term "1,1") (userinteraction))
                        (rule "methodCallReturnIgnoreResult" (formula "17") (term "1,1,1") (userinteraction))
                        (rule "blockEmpty" (formula "17") (term "1,1,1") (userinteraction))
                        (rule "methodCallReturn" (formula "17") (term "1,1,1") (userinteraction))
                        (rule "assignment" (formula "17") (term "1,1,1") (userinteraction))
                        (rule "methodCallEmpty" (formula "17") (term "1,1,1,1") (userinteraction))
                        (rule "blockEmpty" (formula "17") (term "1,1,1,1") (userinteraction))
                        (rule "assignment" (formula "17") (term "1,1,1,1") (userinteraction))
                        (rule "blockEmpty" (formula "17") (term "1,1,1,1,1") (userinteraction))
                        (rule "assignment" (formula "17") (term "1,1,1,1,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "for_to_while" (formula "17") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0") (userinteraction))
                        (rule "variableDeclarationAssign" (formula "17") (term "1") (userinteraction))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "i") (userinteraction))
                        (rule "assignment" (formula "17") (term "1") (userinteraction))
                        (builtin "One Step Simplification" (formula "17"))
                        (builtin "Loop Invariant" (formula "17") (newnames "variant,b_0,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
                        (branch
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "3")))
                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "andRight" (formula "19") (userinteraction))
                           (branch "Case 1"
                              (rule "andRight" (formula "19") (userinteraction))
                              (branch "Case 1"
                                 (rule "andRight" (formula "19") (userinteraction))
                                 (branch "Case 1"
                                    (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                                    (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1"))
                                    (rule "translateJavaSubInt" (formula "19") (term "1,1,0"))
                                    (rule "translateJavaSubInt" (formula "16") (term "1"))
                                    (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "17") (term "0"))
                                    (rule "translateJavaSubInt" (formula "1") (term "1"))
                                    (rule "translateJavaSubInt" (formula "19") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "7") (term "1"))
                                    (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "17") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "13")) (ifInst ""  (formula "1")))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "0"))
                                    (rule "mul_literals" (formula "17") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                    (rule "mul_literals" (formula "19") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_ltRight" (formula "15"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_gtRight" (formula "16"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "17"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                    (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_leqRight" (formula "19"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "1") (ifseqformula "13"))
                                    (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0"))
                                    (rule "add_zero_right" (formula "8") (term "0"))
                                    (rule "leq_literals" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                                 (branch "Case 2"
                                    (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1") (userinteraction))
                                    (rule "translateJavaAddInt" (formula "7") (term "1") (userinteraction))
                                    (builtin "Evaluate Query" (formula "19") (term "1") (newnames "b_2,callee,queryResult_1,res_byteArrayToInt_1"))
                                    (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(store(memset(store(store(store(create(heap,x_arr_3),x_arr_3,java_lang_Object__transient_,Z(0(#))),x_arr_3,java_lang_Object__transactionConditionallyUpdated_,FALSE),x_arr_3,java_lang_Object__initialized_,FALSE),arrayRange(x_arr_3,Z(0(#)),sub(length(x_arr_3),Z(1(#)))),Z(0(#))),x_arr_3,java_lang_Object__initialized_,TRUE),in)_100001010100_1" (formula "20") (term "1") (userinteraction))
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "variableDeclaration" (formula "13") (term "1") (newnames "queryResult_1") (userinteraction))
                                    (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_byteArrayToInt_4,result_13,exc_11") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
                                    (branch
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "assignment" (formula "14") (term "1") (userinteraction))
                                       (rule "methodCallEmpty" (formula "14") (term "1,1") (userinteraction))
                                       (rule "emptyModality" (formula "14") (term "1,1") (userinteraction))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "notRight" (formula "14") (userinteraction))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "pullOut" (formula "15") (term "0,1") (inst "sk=array2seq_0") (userinteraction))
                                       (rule "pullOut" (formula "13") (term "0,1") (inst "sk=array2seq_1") (userinteraction))
                                       (rule "cut" (inst "cutFormula=array2seq_1 = array2seq_0") (userinteraction))
                                       (branch "CUT: array2seq_1 = array2seq_0 TRUE"
                                          (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "10") (term "0"))
                                          (rule "translateJavaSubInt" (formula "23") (term "0"))
                                          (rule "translateJavaSubInt" (formula "22") (term "1"))
                                          (rule "translateJavaSubInt" (formula "3") (term "1"))
                                          (rule "translateJavaSubInt" (formula "23") (term "0,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "0,1"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_elimSub" (formula "17") (term "2,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,2,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "23") (term "0"))
                                          (rule "mul_literals" (formula "23") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                                          (rule "polySimp_elimSub" (formula "23") (term "0,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "2,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_ltRight" (formula "21"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_gtRight" (formula "22"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "23"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0,0") (ifseqformula "6"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,2,1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,2,1,0,0,0"))
                                          (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "21") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "15") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
                                          (rule "close" (formula "25") (ifseqformula "21"))
                                       )
                                       (branch "CUT: array2seq_1 = array2seq_0 FALSE"
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "16") (userinteraction))
                                          (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "13") (userinteraction))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv") (userinteraction))
                                          (rule "andRight" (formula "18") (userinteraction))
                                          (branch "Case 1"
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "9") (term "0"))
                                             (rule "translateJavaSubInt" (formula "2") (term "1"))
                                             (rule "translateJavaSubInt" (formula "23") (term "0"))
                                             (rule "translateJavaSubInt" (formula "22") (term "1"))
                                             (rule "translateJavaSubInt" (formula "2") (term "0,1"))
                                             (rule "translateJavaSubInt" (formula "23") (term "0,0"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "polySimp_elimSub" (formula "16") (term "2,1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,2,1,0,0,0"))
                                             (rule "polySimp_elimSub" (formula "22") (term "1"))
                                             (rule "mul_literals" (formula "22") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimSub" (formula "23") (term "0,0"))
                                             (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0,0"))
                                             (rule "polySimp_elimSub" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "23") (term "0"))
                                             (rule "mul_literals" (formula "23") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "2,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "22") (term "1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "1"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_gtRight" (formula "22"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "23"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0") (ifseqformula "5"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "19") (term "1,2,1,0,0,0") (ifseqformula "5"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,2,1,0,0,0"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "20") (term "1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "19"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "14"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "18") (term "0,1,0,2,1,0,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "array2seqDef" (formula "13") (term "0") (inst "u=u"))
                                             (rule "lenOfSeqDefEQ" (formula "18") (term "0") (ifseqformula "13"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                             (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "1,0"))
                                             (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "5") (ifseqformula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0"))
                                             (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                                             (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
                                             (rule "lenOfSeqDefEQ" (formula "18") (term "1") (ifseqformula "16"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                             (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "closeTrue" (formula "18"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "18") (inst "sk=iv_1") (userinteraction))
                                             (rule "impRight" (formula "18") (userinteraction))
                                             (rule "getOfArray2seq" (formula "19") (term "0") (userinteraction))
                                             (branch "Case 1"
                                                (rule "getOfArray2seq" (formula "19") (term "1") (userinteraction))
                                                (branch "Case 1"
                                                   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "10") (term "0"))
                                                   (rule "translateJavaSubInt" (formula "3") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "24") (term "0"))
                                                   (rule "translateJavaSubInt" (formula "23") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "3") (term "0,1"))
                                                   (rule "translateJavaSubInt" (formula "24") (term "0,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "20"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "eqSymm" (formula "19"))
                                                   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1"))
                                                   (rule "mul_literals" (formula "24") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "25") (term "0"))
                                                   (rule "mul_literals" (formula "25") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimSub" (formula "25") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "2,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "23"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "21") (term "1") (ifseqformula "8") (ifseqformula "23"))
                                                   (rule "inEqSimp_gtRight" (formula "24"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "25"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "21") (term "1,2,1,0,0,0") (ifseqformula "7"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,2,1,0,0") (ifseqformula "7"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,2,1,0,0"))
                                                   (rule "applyEq" (formula "16") (term "1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "22") (term "1") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "27") (term "0") (ifseqformula "16"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0") (ifseqformula "15"))
                                                   (rule "apply_eq_monomials" (formula "20") (term "1,0,2,1,0,0,0") (ifseqformula "15"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "0,1,0,2,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,2,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "20") (term "1,0,2,1,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,1,0,2,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,1,0,2,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "1,0,2,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,2,1,0,0,0"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "15"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "array2seqDef" (formula "15") (term "0") (inst "u=u"))
                                                   (rule "lenOfSeqDefEQ" (formula "2") (term "0") (ifseqformula "15"))
                                                   (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                   (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "1,0"))
                                                   (rule "narrowSelectArrayType" (formula "15") (term "2,0") (ifseqformula "7") (ifseqformula "22"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                                   (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                                                   (rule "dismissNonSelectedField" (formula "18") (term "2,0"))
                                                   (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_16"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_17"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "8") (ifseqformula "21"))
                                                   (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " x_arr_3 = in & in.length >= 5 + iv_1 + res_byteArrayToInt TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "eqSymm" (formula "21"))
                                                      (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                      (rule "polySimp_homoEq" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "22") (ifseqformula "10"))
                                                   )
                                                   (branch " x_arr_3 = in & in.length >= 5 + iv_1 + res_byteArrayToInt FALSE"
                                                      (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeTrue" (formula "21"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "10") (term "0"))
                                                   (rule "translateJavaSubInt" (formula "25") (term "0"))
                                                   (rule "translateJavaSubInt" (formula "24") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "3") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                                   (rule "translateJavaSubInt" (formula "3") (term "0,1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "eqSymm" (formula "19"))
                                                   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "26") (term "0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimSub" (formula "26") (term "0,0"))
                                                   (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "2,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_ltRight" (formula "24"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "22") (term "0") (ifseqformula "9") (ifseqformula "24"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "inEqSimp_gtRight" (formula "25"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "26"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "5"))
                                                   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "22") (term "1,2,1,0,0,0") (ifseqformula "8"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0"))
                                                   (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0") (ifseqformula "8"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,2,1,0,0,0,0"))
                                                   (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "17"))
                                                   (rule "eqSymm" (formula "20"))
                                                   (rule "applyEq" (formula "23") (term "1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "17") (term "1") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "19") (term "1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "19"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                                                   (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "8") (ifseqformula "23"))
                                                   (rule "lenOfSeqDefEQ" (formula "3") (term "0") (ifseqformula "16"))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                                   (rule "array2seqDef" (formula "19") (term "0") (inst "u=u"))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                                   (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "11"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "10") (term "0"))
                                                (rule "translateJavaSubInt" (formula "25") (term "0"))
                                                (rule "translateJavaSubInt" (formula "24") (term "1"))
                                                (rule "translateJavaSubInt" (formula "3") (term "1"))
                                                (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                                (rule "translateJavaSubInt" (formula "3") (term "0,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "eqSymm" (formula "19"))
                                                (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1"))
                                                (rule "mul_literals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "26") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "4") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "26") (term "0"))
                                                (rule "mul_literals" (formula "26") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "18") (term "2,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_ltRight" (formula "24"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_gtRight" (formula "25"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "26"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "5"))
                                                (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "22"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "applyEq" (formula "22") (term "1,2,1,0,0,0") (ifseqformula "8"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "10"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "17"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "19"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "19"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                                                (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "8") (ifseqformula "23"))
                                                (rule "lenOfSeqDefEQ" (formula "3") (term "0") (ifseqformula "16"))
                                                (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "3") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                                (rule "array2seqDef" (formula "19") (term "0") (inst "u=u"))
                                                (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                                (rule "getOfSeqDefEQ" (formula "21") (term "0") (ifseqformula "16"))
                                                (rule "castDel" (formula "21") (term "2,0"))
                                                (rule "castDel" (formula "21") (term "1,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,2,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "21") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "21") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "11"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Exceptional Post (byteArrayToInt)"
                                       (builtin "One Step Simplification" (formula "13"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                                       (rule "translateJavaSubInt" (formula "19") (term "0"))
                                       (rule "translateJavaSubInt" (formula "18") (term "1"))
                                       (rule "translateJavaSubInt" (formula "1") (term "1"))
                                       (rule "translateJavaSubInt" (formula "19") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "close" (formula "16") (ifseqformula "15"))
                                    )
                                    (branch "Pre (byteArrayToInt)"
                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                       (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                                       (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "17") (term "1"))
                                       (rule "translateJavaSubInt" (formula "18") (term "0"))
                                       (rule "translateJavaSubInt" (formula "1") (term "1"))
                                       (rule "translateJavaSubInt" (formula "18") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "10"))
                                       (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "13") (term "1,2,1,0,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,1"))
                                       (rule "mul_literals" (formula "13") (term "1,2,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1"))
                                       (rule "mul_literals" (formula "17") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "0"))
                                       (rule "mul_literals" (formula "18") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_ltRight" (formula "16"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,1"))
                                       (rule "inEqSimp_gtRight" (formula "17"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "18"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,1,1") (ifseqformula "4"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "2,1,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,2,1,0,0,1,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,2,1,0,0,1,1"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,1") (ifseqformula "4"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "2,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,2,1,0,0,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,2,1,0,0,1"))
                                       (rule "applyEq" (formula "13") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "5"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,2,1,0,0,1,1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,2,1,0,0,1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,2,1,0,0,1,1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "14"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "4") (ifseqformula "15"))
                                       (rule "wellFormedMemsetArrayPrimitive" (formula "13") (term "0,1"))
                                       (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
                                       (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
                                       (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
                                       (rule "wellFormedCreate" (formula "13") (term "0,1"))
                                       (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "pullOutSelect" (formula "13") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "14") (term "0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "13"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1"))
                                 (rule "translateJavaSubInt" (formula "1") (term "1"))
                                 (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "16") (term "1"))
                                 (rule "translateJavaSubInt" (formula "17") (term "0"))
                                 (rule "translateJavaAddInt" (formula "7") (term "1"))
                                 (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                                 (rule "translateJavaAddInt" (formula "19") (term "0,0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "17") (term "0,0"))
                                 (rule "allRight" (formula "19") (inst "sk=j_0"))
                                 (rule "impRight" (formula "19"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1"))
                                 (rule "mul_literals" (formula "18") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "0"))
                                 (rule "mul_literals" (formula "19") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,1"))
                                 (rule "mul_literals" (formula "21") (term "1,2,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,2,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "17"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                 (rule "inEqSimp_gtRight" (formula "18"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "19"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "applyEq" (formula "21") (term "1,2,1,0,0") (ifseqformula "6"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,2,1,0,1"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "8"))
                                 (rule "applyEq" (formula "21") (term "1,2,1,0,0") (ifseqformula "6"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,2,1,0,1"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,0") (ifseqformula "14"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "1,0,2,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "14"))
                                 (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "14"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,0") (ifseqformula "14"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "wellFormedStorePrimitive" (formula "19"))
                              (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                              (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1"))
                              (rule "translateJavaSubInt" (formula "1") (term "1"))
                              (rule "translateJavaSubInt" (formula "16") (term "1"))
                              (rule "translateJavaSubInt" (formula "17") (term "0"))
                              (rule "translateJavaAddInt" (formula "7") (term "1"))
                              (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                              (rule "translateJavaSubInt" (formula "17") (term "0,0"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "10"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "polySimp_elimSub" (formula "19") (term "2,1,0"))
                              (rule "mul_literals" (formula "19") (term "1,2,1,0"))
                              (rule "polySimp_elimSub" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                              (rule "polySimp_elimSub" (formula "17") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "17") (term "0"))
                              (rule "mul_literals" (formula "17") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "2,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "1"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "inEqSimp_ltRight" (formula "15"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_gtRight" (formula "16"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "17"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "19") (term "1,2,1,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "19") (term "2,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,2,1,0"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                              (rule "eqSymm" (formula "15"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "6"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "18") (term "0,1,0,2,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "5"))
                              (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,1,0,2,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "14"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "4") (ifseqformula "14"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "16"))
                              (rule "wellFormedStorePrimitive" (formula "16"))
                              (rule "wellFormedStorePrimitive" (formula "16"))
                              (rule "wellFormedStorePrimitive" (formula "16"))
                              (rule "wellFormedCreate" (formula "16"))
                              (rule "close" (formula "16") (ifseqformula "4"))
                           )
                        )
                        (branch "Body Preserves Invariant"
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "3")))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "0"))
                           (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "1,1"))
                           (rule "translateJavaSubInt" (formula "16") (term "1"))
                           (rule "translateJavaSubInt" (formula "17") (term "0"))
                           (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0"))
                           (rule "translateJavaAddInt" (formula "13") (term "0,0,2,1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "0,1,1,0"))
                           (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,0,1,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "6") (term "1"))
                           (rule "translateJavaSubInt" (formula "17") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "13") (term "0,1,1,0,0,0"))
                           (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "13") (term "0,1,1,0,0,0,0,0"))
                           (rule "translateJavaSubInt" (formula "1") (term "1,1,0"))
                           (rule "translateJavaAddInt" (formula "19") (term "0,0,2,1,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,0,0,1,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,0,1,1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "19") (term "0,0,0,1,1,1,0,1"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "1"))
                           (rule "impRight" (formula "21"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "16"))
                           (rule "notLeft" (formula "2"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "notLeft" (formula "17"))
                           (rule "eqSymm" (formula "11"))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "19") (term "1,0"))
                           (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1,0,0,1"))
                           (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "eqSymm" (formula "26") (term "1,0,0,0,1,1,0,1"))
                           (rule "eqSymm" (formula "26") (term "1,0,1,0,0,1,1,0,1"))
                           (rule "eqSymm" (formula "18"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_elimSub" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "24") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,1,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,1,1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "1") (term "1,2,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "2") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "17") (term "1"))
                           (rule "mul_literals" (formula "17") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "16") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "19") (term "2,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "1,2,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "19") (term "2,1,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "1,2,1,0,0,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0,0"))
                           (rule "polySimp_elimSub" (formula "24") (term "0"))
                           (rule "mul_literals" (formula "24") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,0,1,1,1,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,1,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,0,1,1,1,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "16") (term "1"))
                           (rule "mul_literals" (formula "16") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,0,0,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "0,0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,2,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "1"))
                           (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltRight" (formula "22"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "18") (term "1"))
                           (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "2,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,1,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,2,0,1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,2,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,1,1,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_gtRight" (formula "23"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "24"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                           (rule "variableDeclarationAssign" (formula "4") (term "1"))
                           (rule "variableDeclarationAssign" (formula "25") (term "1"))
                           (rule "variableDeclaration" (formula "4") (term "1") (newnames "b_0_1"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "exc_12"))
                           (rule "assignment" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "thrownExc"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "16"))
                           (rule "applyEq" (formula "14") (term "1") (ifseqformula "7"))
                           (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,2,1,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,2,1,0,0,0,0"))
                           (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,0,1,0"))
                           (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "4") (term "2,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "4") (term "0,0,2,1,0,0,0,1,1,0"))
                           (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,1,0,1,1,0,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,1,0,1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,1,0,1,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,1,0,1,1,0,0"))
                           (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,1,0,0"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                           (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,1,1,0"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "16"))
                           (rule "applyEq" (formula "21") (term "1,0,0,2,0,1,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "6"))
                           (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,1,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,1,0,1,1,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "1,0,0,2,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "1") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "3") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "24") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "15"))
                           (rule "blockThrow" (formula "24") (term "1,0,0,1"))
                           (rule "blockThrow" (formula "24") (term "1,0,0,1"))
                           (rule "Query_axiom_for_byteArrayToInt_[B__in_verif_utils_MessageTools" (formula "19") (term "0") (inst "byteArrayToInt_sk=byteArrayToInt_sk_2") (inst "#p0=x_arr") (inst "#res=x"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "eqSymm" (formula "20"))
                           (rule "eqSymm" (formula "19") (term "0,1"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "25") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "20"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1,1,0,0"))
                           (rule "applyEq" (formula "3") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "21") (term "1,0,0,2,0,1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "25") (term "0,1,0,2,1,0,0,0,1,0,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "13") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "25") (term "0,1,0,2,1,0,0,0,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "20"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                           (rule "applyEqRigid" (formula "19") (term "0,1,0,2,1,0,0,0,0,0") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "20"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                           (rule "mul_literals" (formula "16") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,1"))
                           (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                           (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "21"))
                           (rule "array2seqDef" (formula "23") (term "0,0,0,0,0,1,0,0,1") (inst "u=u"))
                           (rule "array2seqDef" (formula "23") (term "0,1,0,0,0,0,1,0,0,1") (inst "u=u"))
                           (rule "boxToDiamond" (formula "1") (term "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "boxToDiamond" (formula "16") (term "1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1,0,0,1,1,0,1"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,0,1,1,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,0,1"))
                           (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_46"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_47"))
                           (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_byteArrayToInt_5,savedHeapBefore_byteArrayToInt_1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "variableDeclarationAssign" (formula "19") (term "1"))
                           (rule "variableDeclaration" (formula "19") (term "1") (newnames "result_14"))
                           (rule "assignment" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "compound_subtraction_1" (formula "20") (term "1") (inst "#v=x_48"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_48"))
                           (rule "compound_assignment_op_plus" (formula "19") (term "1"))
                           (rule "compound_subtraction_1" (formula "20") (term "1") (inst "#v=x_49"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_49"))
                           (rule "assignment_read_length" (formula "20") (term "1"))
                           (branch "Normal Execution (_in != null)"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                              (rule "false_right" (formula "20"))
                              (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_1"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_50"))
                              (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                              (rule "remove_parentheses_right" (formula "19") (term "1"))
                              (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                              (rule "compound_addition_2" (formula "19") (term "1") (inst "#v1=x_52") (inst "#v0=x_51"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_51"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_52"))
                              (rule "less_than_comparison_simple" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                              (rule "remove_parentheses_right" (formula "19") (term "1"))
                              (rule "methodCallEmpty" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "compound_multiplication_2" (formula "19") (term "1") (inst "#v1=x_54") (inst "#v0=x_53"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_53"))
                              (rule "emptyModality" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "notRight" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "compound_multiplication_1" (formula "19") (term "1") (inst "#v=x_55"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_55"))
                              (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_56"))
                              (rule "assignmentMultiplicationInt" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "translateJavaMulInt" (formula "19") (term "0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_58") (inst "#v0=x_57"))
                              (rule "variableDeclarationAssign" (formula "23") (term "1"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_57"))
                              (rule "assignment" (formula "23") (term "1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "variableDeclarationAssign" (formula "23") (term "1"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_58"))
                              (rule "assignmentMultiplicationInt" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "translateJavaMulInt" (formula "19") (term "0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_54"))
                              (rule "compound_subtraction_1" (formula "23") (term "1") (inst "#v=x_59"))
                              (rule "variableDeclarationAssign" (formula "23") (term "1"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_59"))
                              (rule "compound_subtraction_1" (formula "23") (term "1") (inst "#v=x_60"))
                              (rule "variableDeclarationAssign" (formula "23") (term "1"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_60"))
                              (rule "assignment_read_length" (formula "23") (term "1"))
                              (branch "Normal Execution (_in != null)"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                                 (rule "false_right" (formula "23"))
                                 (rule "assignmentSubtractionInt" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                 (rule "assignmentSubtractionInt" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                 (rule "less_than_comparison_simple" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                 (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_8"))
                                 (rule "assignment_array2" (formula "19") (term "1"))
                                 (branch "Normal Execution (x_arr != null)"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")))
                                    (rule "less_literals" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_leqRight" (formula "19"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_18"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__2"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_19"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_20"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_unsign_7,result_15,exc_13") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                    (branch "Post (unsign)"
                                       (builtin "One Step Simplification" (formula "22"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "assignment" (formula "23") (term "1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "blockEmpty" (formula "23") (term "1"))
                                       (rule "defOfunsign" (formula "22") (term "0"))
                                       (rule "translateJavaAddInt" (formula "22") (term "1,0"))
                                       (rule "translateJavaCastInt" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0"))
                                       (rule "assignmentMultiplicationInt" (formula "23") (term "1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "translateJavaMulInt" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                       (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                       (rule "assignment" (formula "23") (term "1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "compound_assignment_op_plus" (formula "23") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=x_1"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_61"))
                                       (rule "remove_parentheses_right" (formula "23") (term "1"))
                                       (rule "compound_addition_2" (formula "23") (term "1") (inst "#v1=x_63") (inst "#v0=x_62"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_62"))
                                       (rule "assignment" (formula "23") (term "1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_63"))
                                       (rule "remove_parentheses_right" (formula "23") (term "1"))
                                       (rule "compound_multiplication_2" (formula "23") (term "1") (inst "#v1=x_65") (inst "#v0=x_64"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_64"))
                                       (rule "assignmentMultiplicationInt" (formula "23") (term "1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "translateJavaMulInt" (formula "23") (term "0,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_65"))
                                       (rule "ifSplit" (formula "27"))
                                       (branch "if x_56 true"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "eval_order_array_access3" (formula "27") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                          (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_arr_4"))
                                          (rule "assignment" (formula "27") (term "1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                          (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_66"))
                                          (rule "assignment" (formula "27") (term "1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "methodCallWithAssignmentUnfoldArguments" (formula "23") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                          (rule "variableDeclaration" (formula "23") (term "1") (newnames "var_9"))
                                          (rule "assignment_array2" (formula "23") (term "1"))
                                          (branch "Normal Execution (x_arr != null)"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")))
                                             (rule "less_literals" (formula "23") (term "1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_leqRight" (formula "23"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_21"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000101010100_2" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "1") (term "0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_22"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                             (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_23"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_unsign_8,result_16,exc_14") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                             (branch "Post (unsign)"
                                                (builtin "One Step Simplification" (formula "25"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "eqSymm" (formula "26"))
                                                (rule "assignment" (formula "27") (term "1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "blockEmpty" (formula "27") (term "1"))
                                                (rule "defOfunsign" (formula "26") (term "0"))
                                                (rule "translateJavaAddInt" (formula "26") (term "1,0"))
                                                (rule "translateJavaCastInt" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                (rule "assignmentMultiplicationInt" (formula "27") (term "1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "translateJavaMulInt" (formula "27") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                                                (rule "assignmentAdditionInt" (formula "27") (term "1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "translateJavaAddInt" (formula "27") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "27") (term "1"))
                                                (rule "assignment" (formula "27") (term "1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "compound_assignment_op_plus" (formula "27") (term "1"))
                                                (rule "compound_int_cast_expression" (formula "27") (term "1") (inst "#v=x_1"))
                                                (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_67"))
                                                (rule "remove_parentheses_right" (formula "27") (term "1"))
                                                (rule "compound_addition_2" (formula "27") (term "1") (inst "#v1=x_69") (inst "#v0=x_68"))
                                                (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_68"))
                                                (rule "assignment" (formula "27") (term "1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_69"))
                                                (rule "remove_parentheses_right" (formula "27") (term "1"))
                                                (rule "compound_multiplication_2" (formula "27") (term "1") (inst "#v1=x_71") (inst "#v0=x_70"))
                                                (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_70"))
                                                (rule "assignment" (formula "27") (term "1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_71"))
                                                (rule "ifUnfold" (formula "31") (term "1") (inst "#boolv=x_67"))
                                                (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_72"))
                                                (rule "compound_assignment_5_nonsimple" (formula "31") (term "1"))
                                                (rule "methodCallWithAssignmentUnfoldArguments" (formula "27") (term "1"))
                                                (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                                (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_10"))
                                                (rule "assignment_array2" (formula "27") (term "1"))
                                                (branch "Normal Execution (x_arr != null)"
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
                                                   (rule "less_literals" (formula "27") (term "1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_leqRight" (formula "27"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_24"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "replaceKnownSelect_taclet000101010100_2" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "1") (term "0,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "5") (term "0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_25"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_26"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_unsign_9,result_17,exc_15") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                   (branch "Post (unsign)"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "eqSymm" (formula "30"))
                                                      (rule "assignment" (formula "31") (term "1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "blockEmpty" (formula "31") (term "1"))
                                                      (rule "defOfunsign" (formula "30") (term "0"))
                                                      (rule "translateJavaCastInt" (formula "30") (term "0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "30") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0"))
                                                      (rule "assignmentMultiplicationInt" (formula "31") (term "1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "translateJavaMulInt" (formula "31") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                      (rule "assignmentAdditionInt" (formula "31") (term "1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "translateJavaAddInt" (formula "31") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "31") (term "1"))
                                                      (rule "assignment" (formula "31") (term "1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "compound_assignment_op_plus" (formula "31") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "31") (term "1") (inst "#v=x_1"))
                                                      (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_73"))
                                                      (rule "remove_parentheses_right" (formula "31") (term "1"))
                                                      (rule "compound_addition_2" (formula "31") (term "1") (inst "#v1=x_75") (inst "#v0=x_74"))
                                                      (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_74"))
                                                      (rule "assignment" (formula "31") (term "1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_75"))
                                                      (rule "remove_parentheses_right" (formula "31") (term "1"))
                                                      (rule "ifElseUnfold" (formula "35") (term "1") (inst "#boolv=x_73"))
                                                      (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_76"))
                                                      (rule "compound_less_equal_than_comparison_1" (formula "35") (term "1") (inst "#v0=x_77"))
                                                      (rule "variableDeclarationAssign" (formula "35") (term "1"))
                                                      (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_77"))
                                                      (rule "eval_order_access2" (formula "35") (term "1") (inst "#v0=x_arr_5"))
                                                      (rule "variableDeclarationAssign" (formula "35") (term "1"))
                                                      (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_arr_5"))
                                                      (rule "remove_parentheses_right" (formula "35") (term "1"))
                                                      (rule "assignment" (formula "35") (term "1"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "assignment_read_length" (formula "35") (term "1"))
                                                      (branch "Normal Execution (x_arr_5 != null)"
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
                                                         (rule "false_right" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "9"))
                                                         (rule "less_equal_than_comparison_simple" (formula "35") (term "1"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "35") (term "0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "methodCallWithAssignmentUnfoldArguments" (formula "31") (term "1"))
                                                         (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                         (rule "variableDeclaration" (formula "31") (term "1") (newnames "var_11"))
                                                         (rule "assignment_array2" (formula "31") (term "1"))
                                                         (branch "Normal Execution (x_arr != null)"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "34")))
                                                            (rule "less_literals" (formula "31") (term "1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_leqRight" (formula "31"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "32") (term "0,1,0") (inst "selectSK=arr_27"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "replaceKnownSelect_taclet000101010100_2" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "1") (term "0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_28"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_29"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_unsign_10,result_18,exc_16") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                            (branch "Post (unsign)"
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "eqSymm" (formula "34"))
                                                               (rule "assignment" (formula "35") (term "1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "blockEmpty" (formula "35") (term "1"))
                                                               (rule "defOfunsign" (formula "34") (term "0"))
                                                               (rule "translateJavaCastInt" (formula "34") (term "0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "34") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "34") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0"))
                                                               (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                               (rule "assignmentAdditionInt" (formula "35") (term "1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "translateJavaAddInt" (formula "35") (term "0,1,0"))
                                                               (rule "widening_identity_cast_5" (formula "35") (term "1"))
                                                               (rule "assignment" (formula "35") (term "1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "methodCallReturn" (formula "35") (term "1"))
                                                               (rule "assignment" (formula "35") (term "1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "methodCallEmpty" (formula "35") (term "1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "emptyModality" (formula "35") (term "1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "notRight" (formula "35"))
                                                               (rule "polySimp_homoEq" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "35") (term "1") (ifseqformula "1"))
                                                               (rule "ifElseSplit" (formula "39"))
                                                               (branch "if x_76 true"
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_76 false"
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "less_than_comparison_simple" (formula "39") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                                                  (rule "blockEmpty" (formula "39") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "39") (term "1,0,0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,1,0") (ifseqformula "25"))
                                                                  (rule "qeq_literals" (formula "39") (term "0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "ifSplit" (formula "39"))
                                                                  (branch "if x_72 true"
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_72 false"
                                                                     (builtin "One Step Simplification" (formula "40"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                     (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_78"))
                                                                     (rule "eval_order_array_access5" (formula "39") (term "1") (inst "#v1=x_79") (inst "#ar1=x_arr_5"))
                                                                     (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                     (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_6"))
                                                                     (rule "assignment" (formula "39") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                     (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_79"))
                                                                     (rule "compound_addition_1" (formula "39") (term "1") (inst "#v=x_80"))
                                                                     (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                     (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_80"))
                                                                     (rule "assignmentAdditionInt" (formula "39") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "translateJavaAddInt" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "39") (term "0,1,0"))
                                                                     (rule "assignmentAdditionInt" (formula "39") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "translateJavaAddInt" (formula "39") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                                     (rule "assignment_array2" (formula "39") (term "1"))
                                                                     (branch "Normal Execution (x_arr_6 != null)"
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "37")))
                                                                        (rule "orRight" (formula "39"))
                                                                        (rule "inEqSimp_ltRight" (formula "40"))
                                                                        (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_leqRight" (formula "40"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "41") (term "0,1,0") (inst "selectSK=arr_30"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownSelect_taclet000101010100_2" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "1") (term "0,0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "assignment_to_primitive_array_component" (formula "42") (term "1"))
                                                                        (branch "Normal Execution (x_arr_4 != null)"
                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "29")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_31"))
                                                                           (rule "simplifySelectOfMemset" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                                                           (rule "times_zero_2" (formula "1") (term "1,0,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                                                           (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_32"))
                                                                           (rule "simplifySelectOfCreate" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "postincrement" (formula "42") (term "1"))
                                                                           (rule "compound_int_cast_expression" (formula "42") (term "1") (inst "#v=x"))
                                                                           (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                           (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_81"))
                                                                           (rule "remove_parentheses_right" (formula "42") (term "1"))
                                                                           (rule "assignmentAdditionInt" (formula "42") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "translateJavaAddInt" (formula "42") (term "0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "42") (term "0,1,0"))
                                                                           (rule "widening_identity_cast_5" (formula "42") (term "1"))
                                                                           (rule "assignment" (formula "42") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "tryEmpty" (formula "42") (term "1"))
                                                                           (rule "methodCallEmpty" (formula "42") (term "1"))
                                                                           (rule "emptyModality" (formula "42") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "15")) (ifInst ""  (formula "21")))
                                                                           (rule "eqSymm" (formula "42") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1"))
                                                                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,0,0"))
                                                                           (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "42") (term "1,0,0,0,0") (ifseqformula "14"))
                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "42") (term "0,0,1,1,0,0,0,1,0"))
                                                                           (rule "precOfInt" (formula "42") (term "1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "42") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "42") (term "1,0,1,0,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,0,0,1,1"))
                                                                           (rule "mul_literals" (formula "42") (term "0,0,0,1,0,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "42") (term "1,0,0,1,0,0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,1"))
                                                                           (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "0,0,1,1"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,1,1"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,1,1"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,1,1"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "0,0,1,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,1"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,1,1"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,1,1"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "0,0,1,1"))
                                                                           (rule "add_literals" (formula "42") (term "0,0,0,1,1"))
                                                                           (rule "add_zero_left" (formula "42") (term "0,0,1,1"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,1"))
                                                                           (rule "add_literals" (formula "42") (term "1,0,1,1"))
                                                                           (rule "times_zero_1" (formula "42") (term "0,1,1"))
                                                                           (rule "leq_literals" (formula "42") (term "1,1"))
                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "42") (term "1"))
                                                                           (rule "times_zero_2" (formula "42") (term "1,0,1"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,1"))
                                                                           (rule "Query_axiom_for_byteArrayToInt_[B__in_verif_utils_MessageTools" (formula "42") (term "0,1,0,0,0") (inst "byteArrayToInt_sk=byteArrayToInt_sk_3") (inst "#p0=x_arr") (inst "#res=x"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "43") (term "1,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "43") (term "0,1,1"))
                                                                           (rule "mul_literals" (formula "43") (term "0,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "1,0,1,1"))
                                                                           (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "15"))
                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption1" (formula "43") (term "0,0,0") (ifseqformula "29"))
                                                                           (rule "leq_literals" (formula "43") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "boxToDiamond" (formula "1") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "notLeft" (formula "1"))
                                                                           (rule "methodBodyExpand" (formula "39") (term "1") (newnames "heapBefore_byteArrayToInt_6,savedHeapBefore_byteArrayToInt_2"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "result_19"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "compound_assignment_op_plus" (formula "39") (term "1"))
                                                                           (rule "compound_int_cast_expression" (formula "39") (term "1") (inst "#v=x_1"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_82"))
                                                                           (rule "remove_parentheses_right" (formula "39") (term "1"))
                                                                           (rule "compound_addition_2" (formula "39") (term "1") (inst "#v1=x_84") (inst "#v0=x_83"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_83"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_84"))
                                                                           (rule "remove_parentheses_right" (formula "39") (term "1"))
                                                                           (rule "compound_multiplication_2" (formula "39") (term "1") (inst "#v1=x_86") (inst "#v0=x_85"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_85"))
                                                                           (rule "compound_multiplication_1" (formula "39") (term "1") (inst "#v=x_87"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_87"))
                                                                           (rule "assignmentMultiplicationInt" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "translateJavaMulInt" (formula "39") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                                           (rule "assignmentMultiplicationInt" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "translateJavaMulInt" (formula "39") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_86"))
                                                                           (rule "methodCallWithAssignmentUnfoldArguments" (formula "39") (term "1"))
                                                                           (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                                           (rule "variableDeclaration" (formula "39") (term "1") (newnames "var_12"))
                                                                           (rule "assignment_array2" (formula "39") (term "1"))
                                                                           (branch "Normal Execution (x_arr != null)"
                                                                              (builtin "One Step Simplification" (formula "40"))
                                                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")))
                                                                              (rule "less_literals" (formula "39") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "39"))
                                                                              (rule "inEqSimp_leqRight" (formula "39"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                              (rule "pullOutSelect" (formula "40") (term "0,1,0") (inst "selectSK=arr_33"))
                                                                              (rule "simplifySelectOfStore" (formula "1"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "replaceKnownSelect_taclet000101010100_1" (formula "1") (term "2,0"))
                                                                              (rule "castDel" (formula "1") (term "1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                              (rule "mul_literals" (formula "2") (term "1"))
                                                                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
                                                                              (rule "leq_literals" (formula "2") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_unsign_11,result_20,exc_17") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                                              (branch "Post (unsign)"
                                                                                 (builtin "One Step Simplification" (formula "41"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "andLeft" (formula "40"))
                                                                                 (rule "andLeft" (formula "41"))
                                                                                 (rule "eqSymm" (formula "41"))
                                                                                 (rule "assignment" (formula "42") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "blockEmpty" (formula "42") (term "1"))
                                                                                 (rule "defOfunsign" (formula "41") (term "0"))
                                                                                 (rule "translateJavaAddInt" (formula "41") (term "1,0"))
                                                                                 (rule "translateJavaCastInt" (formula "41") (term "0,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "41") (term "1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                                                 (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                                                 (rule "assignmentMultiplicationInt" (formula "42") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "translateJavaMulInt" (formula "42") (term "0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0"))
                                                                                 (rule "assignmentAdditionInt" (formula "42") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "translateJavaAddInt" (formula "42") (term "0,1,0"))
                                                                                 (rule "add_zero_left" (formula "42") (term "0,1,0"))
                                                                                 (rule "widening_identity_cast_5" (formula "42") (term "1"))
                                                                                 (rule "assignment" (formula "42") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "compound_assignment_op_plus" (formula "42") (term "1"))
                                                                                 (rule "compound_int_cast_expression" (formula "42") (term "1") (inst "#v=x_1"))
                                                                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_88"))
                                                                                 (rule "remove_parentheses_right" (formula "42") (term "1"))
                                                                                 (rule "compound_addition_2" (formula "42") (term "1") (inst "#v1=x_90") (inst "#v0=x_89"))
                                                                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_89"))
                                                                                 (rule "assignment" (formula "42") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_90"))
                                                                                 (rule "remove_parentheses_right" (formula "42") (term "1"))
                                                                                 (rule "compound_multiplication_2" (formula "42") (term "1") (inst "#v1=x_92") (inst "#v0=x_91"))
                                                                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_91"))
                                                                                 (rule "assignmentMultiplicationInt" (formula "42") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "translateJavaMulInt" (formula "42") (term "0,1,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_92"))
                                                                                 (rule "methodCallWithAssignmentUnfoldArguments" (formula "42") (term "1"))
                                                                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_13"))
                                                                                 (rule "assignment_array2" (formula "42") (term "1"))
                                                                                 (branch "Normal Execution (x_arr != null)"
                                                                                    (builtin "One Step Simplification" (formula "43"))
                                                                                    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "45")))
                                                                                    (rule "less_literals" (formula "42") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "inEqSimp_leqRight" (formula "42"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "pullOutSelect" (formula "43") (term "0,1,0") (inst "selectSK=arr_34"))
                                                                                    (rule "simplifySelectOfStore" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "replaceKnownSelect_taclet000000101010100_11" (formula "1") (term "2,0"))
                                                                                    (rule "castDel" (formula "1") (term "1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                    (rule "mul_literals" (formula "2") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                                                    (rule "leq_literals" (formula "2") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (builtin "Use Operation Contract" (formula "43") (newnames "heapBefore_unsign_12,result_21,exc_18") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                                                    (branch "Post (unsign)"
                                                                                       (builtin "One Step Simplification" (formula "44"))
                                                                                       (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "andLeft" (formula "43"))
                                                                                       (rule "andLeft" (formula "44"))
                                                                                       (rule "eqSymm" (formula "44"))
                                                                                       (rule "assignment" (formula "45") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "45"))
                                                                                       (rule "blockEmpty" (formula "45") (term "1"))
                                                                                       (rule "defOfunsign" (formula "44") (term "0"))
                                                                                       (rule "translateJavaCastInt" (formula "44") (term "0,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "44") (term "1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "44") (term "1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "44") (term "0,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                                                       (rule "assignmentMultiplicationInt" (formula "45") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "45"))
                                                                                       (rule "translateJavaMulInt" (formula "45") (term "0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "45") (term "0,1,0"))
                                                                                       (rule "assignmentAdditionInt" (formula "45") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "45"))
                                                                                       (rule "translateJavaAddInt" (formula "45") (term "0,1,0"))
                                                                                       (rule "widening_identity_cast_5" (formula "45") (term "1"))
                                                                                       (rule "assignment" (formula "45") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "45"))
                                                                                       (rule "compound_assignment_op_plus" (formula "45") (term "1"))
                                                                                       (rule "compound_int_cast_expression" (formula "45") (term "1") (inst "#v=x_1"))
                                                                                       (rule "variableDeclarationAssign" (formula "45") (term "1"))
                                                                                       (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_93"))
                                                                                       (rule "remove_parentheses_right" (formula "45") (term "1"))
                                                                                       (rule "compound_addition_2" (formula "45") (term "1") (inst "#v1=x_95") (inst "#v0=x_94"))
                                                                                       (rule "variableDeclarationAssign" (formula "45") (term "1"))
                                                                                       (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_94"))
                                                                                       (rule "assignment" (formula "45") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "45"))
                                                                                       (rule "variableDeclarationAssign" (formula "45") (term "1"))
                                                                                       (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_95"))
                                                                                       (rule "remove_parentheses_right" (formula "45") (term "1"))
                                                                                       (rule "compound_multiplication_2" (formula "45") (term "1") (inst "#v1=x_97") (inst "#v0=x_96"))
                                                                                       (rule "variableDeclarationAssign" (formula "45") (term "1"))
                                                                                       (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_96"))
                                                                                       (rule "assignment" (formula "45") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "45"))
                                                                                       (rule "variableDeclarationAssign" (formula "45") (term "1"))
                                                                                       (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_97"))
                                                                                       (rule "methodCallWithAssignmentUnfoldArguments" (formula "45") (term "1"))
                                                                                       (rule "variableDeclarationAssign" (formula "45") (term "1"))
                                                                                       (rule "variableDeclaration" (formula "45") (term "1") (newnames "var_14"))
                                                                                       (rule "assignment_array2" (formula "45") (term "1"))
                                                                                       (branch "Normal Execution (x_arr != null)"
                                                                                          (builtin "One Step Simplification" (formula "46"))
                                                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "48")))
                                                                                          (rule "less_literals" (formula "45") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "45"))
                                                                                          (rule "inEqSimp_leqRight" (formula "45"))
                                                                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                          (rule "add_literals" (formula "1") (term "0,0"))
                                                                                          (rule "pullOutSelect" (formula "46") (term "0,1,0") (inst "selectSK=arr_35"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "replaceKnownSelect_taclet00000000101010100_15" (formula "1") (term "2,0"))
                                                                                          (rule "castDel" (formula "1") (term "1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                          (rule "mul_literals" (formula "2") (term "1"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                                                          (rule "leq_literals" (formula "2") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (rule "true_left" (formula "2"))
                                                                                          (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_unsign_13,result_22,exc_19") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                                                          (branch "Post (unsign)"
                                                                                             (builtin "One Step Simplification" (formula "47"))
                                                                                             (builtin "One Step Simplification" (formula "46"))
                                                                                             (rule "andLeft" (formula "46"))
                                                                                             (rule "andLeft" (formula "47"))
                                                                                             (rule "eqSymm" (formula "47"))
                                                                                             (rule "assignment" (formula "48") (term "1"))
                                                                                             (builtin "One Step Simplification" (formula "48"))
                                                                                             (rule "blockEmpty" (formula "48") (term "1"))
                                                                                             (rule "defOfunsign" (formula "47") (term "0"))
                                                                                             (rule "translateJavaAddInt" (formula "47") (term "1,0"))
                                                                                             (rule "translateJavaCastInt" (formula "47") (term "0,1,0"))
                                                                                             (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                                                                                             (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                                                             (rule "add_zero_right" (formula "47") (term "0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0"))
                                                                                             (rule "mul_literals" (formula "47") (term "1,0,0"))
                                                                                             (rule "assignmentMultiplicationInt" (formula "48") (term "1"))
                                                                                             (builtin "One Step Simplification" (formula "48"))
                                                                                             (rule "translateJavaMulInt" (formula "48") (term "0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
                                                                                             (rule "assignmentAdditionInt" (formula "48") (term "1"))
                                                                                             (builtin "One Step Simplification" (formula "48"))
                                                                                             (rule "translateJavaAddInt" (formula "48") (term "0,1,0"))
                                                                                             (rule "widening_identity_cast_5" (formula "48") (term "1"))
                                                                                             (rule "assignment" (formula "48") (term "1"))
                                                                                             (builtin "One Step Simplification" (formula "48"))
                                                                                             (rule "compound_assignment_op_plus" (formula "48") (term "1"))
                                                                                             (rule "compound_int_cast_expression" (formula "48") (term "1") (inst "#v=x_1"))
                                                                                             (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_98"))
                                                                                             (rule "remove_parentheses_right" (formula "48") (term "1"))
                                                                                             (rule "compound_addition_2" (formula "48") (term "1") (inst "#v1=x_100") (inst "#v0=x_99"))
                                                                                             (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_99"))
                                                                                             (rule "assignment" (formula "48") (term "1"))
                                                                                             (builtin "One Step Simplification" (formula "48"))
                                                                                             (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_100"))
                                                                                             (rule "remove_parentheses_right" (formula "48") (term "1"))
                                                                                             (rule "methodCallWithAssignmentUnfoldArguments" (formula "48") (term "1"))
                                                                                             (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "48") (term "1") (newnames "var_15"))
                                                                                             (rule "assignment_array2" (formula "48") (term "1"))
                                                                                             (branch "Normal Execution (x_arr != null)"
                                                                                                (builtin "One Step Simplification" (formula "49"))
                                                                                                (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "51")))
                                                                                                (rule "less_literals" (formula "48") (term "1"))
                                                                                                (builtin "One Step Simplification" (formula "48"))
                                                                                                (rule "inEqSimp_leqRight" (formula "48"))
                                                                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                (rule "pullOutSelect" (formula "49") (term "0,1,0") (inst "selectSK=arr_36"))
                                                                                                (rule "simplifySelectOfStore" (formula "1"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "replaceKnownSelect_taclet00000000000101010100_19" (formula "1") (term "2,0"))
                                                                                                (rule "castDel" (formula "1") (term "1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                                (rule "mul_literals" (formula "2") (term "1"))
                                                                                                (builtin "Use Operation Contract" (formula "49") (newnames "heapBefore_unsign_14,result_23,exc_20") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                                                                (branch "Post (unsign)"
                                                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                                                   (rule "andLeft" (formula "49"))
                                                                                                   (rule "andLeft" (formula "50"))
                                                                                                   (rule "eqSymm" (formula "50"))
                                                                                                   (rule "assignment" (formula "51") (term "1"))
                                                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                                                   (rule "blockEmpty" (formula "51") (term "1"))
                                                                                                   (rule "defOfunsign" (formula "50") (term "0"))
                                                                                                   (rule "translateJavaAddInt" (formula "50") (term "1,0"))
                                                                                                   (rule "translateJavaCastInt" (formula "50") (term "0,1,0"))
                                                                                                   (rule "polySimp_addComm0" (formula "50") (term "1,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0"))
                                                                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,0"))
                                                                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0"))
                                                                                                   (rule "mul_literals" (formula "50") (term "1,0,0"))
                                                                                                   (rule "assignmentAdditionInt" (formula "51") (term "1"))
                                                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                                                   (rule "translateJavaAddInt" (formula "51") (term "0,1,0"))
                                                                                                   (rule "widening_identity_cast_5" (formula "51") (term "1"))
                                                                                                   (rule "assignment" (formula "51") (term "1"))
                                                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                                                   (rule "methodCallReturn" (formula "51") (term "1"))
                                                                                                   (rule "assignment" (formula "51") (term "1"))
                                                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                                                   (rule "methodCallEmpty" (formula "51") (term "1"))
                                                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                                                   (rule "emptyModality" (formula "51") (term "1"))
                                                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                                                   (rule "notRight" (formula "51"))
                                                                                                   (rule "polySimp_homoEq" (formula "1"))
                                                                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                                                   (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                                                   (rule "polySimp_sepNegMonomial" (formula "1"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                   (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                                                   (branch " x_arr_3 = in & in.length >= 9 + byteArrayToInt_sk_2 * 2 + i_0 TRUE"
                                                                                                      (rule "andLeft" (formula "6"))
                                                                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                                                                      (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                                                      (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                                                      (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                                                      (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                                                      (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "19"))
                                                                                                      (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "19"))
                                                                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "19"))
                                                                                                      (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "19"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "19"))
                                                                                                      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                                                      (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "12"))
                                                                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "12"))
                                                                                                      (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "12"))
                                                                                                      (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "12"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "12"))
                                                                                                      (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                                                      (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "16"))
                                                                                                      (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "16"))
                                                                                                      (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "16"))
                                                                                                      (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "16"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "16"))
                                                                                                      (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                                                      (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "14"))
                                                                                                      (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "14"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "14"))
                                                                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "5"))
                                                                                                      (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                                                      (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                                                      (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                                                                                                      (rule "applyEqReverse" (formula "52") (term "3,0,1,1,0,1,0") (ifseqformula "8"))
                                                                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "8"))
                                                                                                      (rule "applyEqReverse" (formula "52") (term "3,0,0,1,0,0,1") (ifseqformula "8"))
                                                                                                      (rule "applyEqReverse" (formula "52") (term "3,0,0,1,0,1,0") (ifseqformula "8"))
                                                                                                      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "8"))
                                                                                                      (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "8"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                                                                      (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                                                                                      (builtin "One Step Simplification" (formula "13"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "31") (term "1,0,0,1,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "0,1,0,0,0,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,1,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,1,0,0,1") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,1,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "31") (term "0,1,0,0,0,1,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,1,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "31") (term "1,0,0,0,0,1,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "0,1,0,0,0,1,0,0,1") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "6"))
                                                                                                      (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "6"))
                                                                                                      (rule "close" (formula "48") (ifseqformula "20"))
                                                                                                   )
                                                                                                   (branch " x_arr_3 = in & in.length >= 9 + byteArrayToInt_sk_2 * 2 + i_0 FALSE"
                                                                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                                                      (branch "x_arr_3 = in TRUE"
                                                                                                         (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "56") (term "3,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "56") (term "3,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "56") (term "3,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                         (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "17"))
                                                                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "17"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "17"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "17"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "17"))
                                                                                                         (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                                                         (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                                                         (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                                                         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                                                         (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "16"))
                                                                                                         (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                                                         (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "13"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "13"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "13"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "13"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "13"))
                                                                                                         (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "14"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "14"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "14"))
                                                                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "14"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "14"))
                                                                                                         (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                                                         (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "10"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "10"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "10"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "10"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "10"))
                                                                                                         (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "6"))
                                                                                                         (builtin "One Step Simplification" (formula "47"))
                                                                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "0,1,0,1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,1,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,1,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "7"))
                                                                                                         (rule "polySimp_homoEq" (formula "16"))
                                                                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                                                                         (rule "add_literals" (formula "16") (term "1,1,0"))
                                                                                                         (rule "times_zero_1" (formula "16") (term "1,0"))
                                                                                                         (rule "add_zero_right" (formula "16") (term "0"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,1,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,0,1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,1,1,0,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,1,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "50") (term "1,0,1,1,0,0,1") (ifseqformula "7"))
                                                                                                         (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "7"))
                                                                                                         (rule "close" (formula "48") (ifseqformula "20"))
                                                                                                      )
                                                                                                      (branch "x_arr_3 = in FALSE"
                                                                                                         (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "56") (term "3,0,0,1,0,1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "56") (term "3,0,1,1,0,1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "56") (term "3,0,0,1,0,0,1") (ifseqformula "6"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "50"))
                                                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                                                         (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "5"))
                                                                                                         (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "5"))
                                                                                                         (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "5"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                                                                         (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "49"))
                                                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                                                         (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                         (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "48"))
                                                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "7"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                         (rule "replace_known_right" (formula "12") (term "0,0,0") (ifseqformula "47"))
                                                                                                         (builtin "One Step Simplification" (formula "12"))
                                                                                                         (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "12"))
                                                                                                         (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "46"))
                                                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                                                         (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                                                                         (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "45"))
                                                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                                                         (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "2"))
                                                                                                         (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "2"))
                                                                                                         (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "2"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                         (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "44"))
                                                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "9"))
                                                                                                         (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "9"))
                                                                                                         (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "9"))
                                                                                                         (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "9"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "9"))
                                                                                                         (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                                                         (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "3"))
                                                                                                         (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "3"))
                                                                                                         (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "3"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                         (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "42"))
                                                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                         (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "41"))
                                                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                                                         (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "7"))
                                                                                                         (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "7"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "40"))
                                                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                                                         (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "6"))
                                                                                                         (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "6"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                         (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "39"))
                                                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "2"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "2"))
                                                                                                         (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "2"))
                                                                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                         (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "38"))
                                                                                                         (builtin "One Step Simplification" (formula "39"))
                                                                                                         (rule "false_right" (formula "39"))
                                                                                                         (rule "applyEq" (formula "35") (term "0") (ifseqformula "27"))
                                                                                                         (rule "eqSymm" (formula "35"))
                                                                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "37"))
                                                                                                         (rule "polySimp_homoEq" (formula "29"))
                                                                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0"))
                                                                                                         (rule "applyEq" (formula "31") (term "0") (ifseqformula "23"))
                                                                                                         (rule "eqSymm" (formula "31"))
                                                                                                         (rule "applyEq" (formula "33") (term "0") (ifseqformula "25"))
                                                                                                         (rule "eqSymm" (formula "33"))
                                                                                                         (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "35"))
                                                                                                         (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                                                                         (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0"))
                                                                                                         (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                                                                         (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                                                                         (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "35"))
                                                                                                         (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                                                                         (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "35"))
                                                                                                         (rule "polySimp_addComm1" (formula "37") (term "1"))
                                                                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                                                                                         (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "33"))
                                                                                                         (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                                         (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                                                                         (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                                                         (rule "add_zero_right" (formula "29") (term "0,0"))
                                                                                                         (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "31"))
                                                                                                         (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                                                                                                         (rule "add_literals" (formula "29") (term "1,1,0"))
                                                                                                         (rule "times_zero_1" (formula "29") (term "1,0"))
                                                                                                         (rule "add_zero_right" (formula "29") (term "0"))
                                                                                                         (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "33"))
                                                                                                         (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                                                                         (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "33"))
                                                                                                         (rule "polySimp_addComm1" (formula "37") (term "1"))
                                                                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                                                                                         (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "31"))
                                                                                                         (rule "polySimp_addComm1" (formula "37") (term "1"))
                                                                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                                                                                         (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "31"))
                                                                                                         (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                                                                         (rule "polySimp_sepNegMonomial" (formula "29"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                         (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "29"))
                                                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                                                         (rule "applyEqRigid" (formula "37") (term "0,0,0,1") (ifseqformula "29"))
                                                                                                         (rule "applyEqRigid" (formula "1") (term "0,0,0,1") (ifseqformula "29"))
                                                                                                         (rule "andRight" (formula "42"))
                                                                                                         (branch "Case 1"
                                                                                                            (rule "allRight" (formula "42") (inst "sk=j_1"))
                                                                                                            (rule "orRight" (formula "42"))
                                                                                                            (rule "orRight" (formula "42"))
                                                                                                            (rule "eqSymm" (formula "44"))
                                                                                                            (rule "inEqSimp_leqRight" (formula "42"))
                                                                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                            (rule "inEqSimp_geqRight" (formula "43"))
                                                                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                                            (rule "pullOutSelect" (formula "44") (term "1") (inst "selectSK=arr_37"))
                                                                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                                            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "41"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                                            (rule "replaceKnownSelect_taclet000101010100_2" (formula "1") (term "0,0,0"))
                                                                                                            (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "1") (term "0,0,0"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                                                            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "44")))
                                                                                                            (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "1"))
                                                                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                                                                            (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=arr_38"))
                                                                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                                                                            (rule "eqSymm" (formula "45"))
                                                                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_39"))
                                                                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                                                            (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                                                            (rule "add_zero_left" (formula "3") (term "0"))
                                                                                                            (rule "ifthenelse_split" (formula "40") (term "0"))
                                                                                                            (branch "in[3] <= -1 TRUE"
                                                                                                               (rule "polySimp_homoEq" (formula "41"))
                                                                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                                                                               (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                                                                               (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                                                                               (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                                                                                               (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                                                               (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                                                                                                               (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,0"))
                                                                                                               (rule "polySimp_sepNegMonomial" (formula "41"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                                               (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,0"))
                                                                                                               (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0"))
                                                                                                               (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                                                                                                               (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                                                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "0,1"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1"))
                                                                                                               (rule "polySimp_rightDist" (formula "40") (term "0,0,1"))
                                                                                                               (rule "mul_literals" (formula "40") (term "0,0,0,1"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1"))
                                                                                                               (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1"))
                                                                                                               (rule "ifthenelse_split" (formula "30") (term "0"))
                                                                                                               (branch "in[2] <= -1 TRUE"
                                                                                                                  (rule "polySimp_homoEq" (formula "31"))
                                                                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                                                                  (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                                                  (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                                                                                  (rule "polySimp_sepNegMonomial" (formula "31"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                                                                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                                                                                  (rule "inEqSimp_homoInEq0" (formula "30"))
                                                                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                                                  (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                                                  (rule "add_literals" (formula "30") (term "0,0"))
                                                                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                                                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                                                  (rule "inEqSimp_exactShadow1" (formula "41") (ifseqformula "30"))
                                                                                                                  (rule "greater_literals" (formula "41") (term "0"))
                                                                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                                                                  (rule "mul_literals" (formula "41") (term "1,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                                                                                                  (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "41") (term "0,0,0"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                                                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "41") (term "0,0,0,0"))
                                                                                                                  (rule "mul_literals" (formula "41") (term "0,0,0,0,0"))
                                                                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                                                                  (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                                                                                  (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                                                                                  (rule "polySimp_rightDist" (formula "41") (term "0,1"))
                                                                                                                  (rule "mul_literals" (formula "41") (term "0,0,1"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                                                                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,0,1"))
                                                                                                                  (rule "ifthenelse_split" (formula "28") (term "0"))
                                                                                                                  (branch "in[1] <= -1 TRUE"
                                                                                                                     (rule "polySimp_homoEq" (formula "29"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                     (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "29"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                                     (rule "add_literals" (formula "28") (term "0,0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                                                     (rule "inEqSimp_exactShadow1" (formula "42") (ifseqformula "28"))
                                                                                                                     (rule "greater_literals" (formula "42") (term "0"))
                                                                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                                                                     (rule "mul_literals" (formula "42") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                                                                                                     (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "42") (term "0,0,0"))
                                                                                                                     (rule "mul_literals" (formula "42") (term "0,0,0,0"))
                                                                                                                     (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                                                                                     (rule "add_literals" (formula "42") (term "0,0,0"))
                                                                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                                                                                     (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                                                                                     (rule "mul_literals" (formula "42") (term "0,1"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                                                                                     (rule "ifthenelse_split" (formula "26") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "27"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "27"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                                                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "26"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                                                                        (rule "add_literals" (formula "26") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                                                                        (rule "inEqSimp_exactShadow1" (formula "43") (ifseqformula "26"))
                                                                                                                        (rule "greater_literals" (formula "43") (term "0"))
                                                                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                                                                        (rule "mul_literals" (formula "43") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                                                                                                        (rule "mul_literals" (formula "43") (term "0,0,0"))
                                                                                                                        (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                                                                                        (rule "add_literals" (formula "43") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                                           (rule "applyEq" (formula "52") (term "1,0,2,0") (ifseqformula "1"))
                                                                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                                                                           (rule "closeTrue" (formula "52"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "1"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                                                                           (rule "eqSymm" (formula "52"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "47"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "47") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "47") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "47"))
                                                                                                                           (rule "false_right" (formula "47"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                                                                           (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "2") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                                                           (rule "mul_literals" (formula "2") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                                                                                                                           (rule "leq_literals" (formula "22") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                                                                           (rule "true_left" (formula "22"))
                                                                                                                           (rule "allLeft" (formula "23") (inst "t=Z(3(#))"))
                                                                                                                           (rule "leq_literals" (formula "23") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "eqSymm" (formula "23") (term "1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "23") (term "0,2,1,1"))
                                                                                                                           (rule "add_literals" (formula "23") (term "0,0,2,1,1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "23") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=arr_50"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "23"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "23"))
                                                                                                                           (rule "eqSymm" (formula "23") (term "1"))
                                                                                                                           (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=arr_51"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "eqSymm" (formula "23") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "23") (term "0,0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "23") (term "0,0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "23") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "23"))
                                                                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")) (ifInst ""  (formula "52")))
                                                                                                                           (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "23"))
                                                                                                                           (rule "allLeft" (formula "24") (inst "t=Z(2(#))"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "24") (term "0,2,1,1"))
                                                                                                                           (rule "add_literals" (formula "24") (term "0,0,2,1,1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "24") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=arr_52"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "24"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "24"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=arr_53"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "52")))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "ifthenelse_negated" (formula "24") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "24") (term "1,0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "24") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "24") (term "0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")) (ifInst ""  (formula "53")))
                                                                                                                           (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "24"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=Z(1(#))"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "25") (term "0,2,1,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "0,0,2,1,1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "25") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_54"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "25"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "25"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_55"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "53")))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "51"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "25") (term "0,0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "25") (term "0,0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "51"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")) (ifInst ""  (formula "54")))
                                                                                                                           (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "25"))
                                                                                                                           (rule "allLeft" (formula "26") (inst "t=Z(0(#))"))
                                                                                                                           (rule "add_zero_right" (formula "26") (term "0,2,0,1"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "26") (term "0"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                                                                                           (rule "qeq_literals" (formula "26") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_56"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "26"))
                                                                                                                           (rule "eqSymm" (formula "26"))
                                                                                                                           (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_57"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "54")))
                                                                                                                           (rule "eqSymm" (formula "27"))
                                                                                                                           (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "27"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "51"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "ifthenelse_negated" (formula "26") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "1,0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "26") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "26") (term "0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_58"))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "eqSymm" (formula "27"))
                                                                                                                           (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "27"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "51"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_59"))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")) (ifInst ""  (formula "55")))
                                                                                                                           (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "26"))
                                                                                                                           (rule "eqSymm" (formula "26"))
                                                                                                                           (rule "allLeft" (formula "27") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "27") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "27") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "27") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "27") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "27") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "56"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "1"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "27") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "27"))
                                                                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                                                                           (rule "closeFalse" (formula "3"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "46"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                                                                                                                        (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                                                                                           (rule "applyEqRigid" (formula "50") (term "1,0,2,0") (ifseqformula "2"))
                                                                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                                                                           (rule "closeTrue" (formula "50"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                                           (rule "eqSymm" (formula "51"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "46"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "46") (ifseqformula "2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "46") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                                                                           (rule "false_right" (formula "46"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                                                                           (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "3") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                                                                           (rule "mul_literals" (formula "3") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                                                                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "true_left" (formula "23"))
                                                                                                                           (rule "allLeft" (formula "24") (inst "t=Z(3(#))"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "24") (term "0,2,1,1"))
                                                                                                                           (rule "add_literals" (formula "24") (term "0,0,2,1,1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "24") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=arr_40"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "24"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "24"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=arr_41"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "48"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "24") (term "0,0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "24") (term "0,0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "48"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "24"))
                                                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")) (ifInst ""  (formula "51")))
                                                                                                                           (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "24"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=Z(2(#))"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "25") (term "0,2,1,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "0,0,2,1,1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "25") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_42"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "25"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "25"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_43"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "ifthenelse_negated" (formula "25") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "25") (term "1,0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "25") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "25") (term "0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "25"))
                                                                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")) (ifInst ""  (formula "52")))
                                                                                                                           (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "25"))
                                                                                                                           (rule "allLeft" (formula "26") (inst "t=Z(1(#))"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "polySimp_addComm1" (formula "26") (term "0,2,1,1"))
                                                                                                                           (rule "add_literals" (formula "26") (term "0,0,2,1,1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "26") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "26") (term "0,1") (inst "selectSK=arr_44"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "26"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "26"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "pullOutSelect" (formula "26") (term "0,1") (inst "selectSK=arr_45"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")))
                                                                                                                           (rule "eqSymm" (formula "27") (term "1"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "ifthenelse_negated" (formula "26") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "1,0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "26") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "26") (term "0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "simplifySelectOfStore" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")))
                                                                                                                           (rule "simplifySelectOfStore" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "26"))
                                                                                                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")) (ifInst ""  (formula "53")))
                                                                                                                           (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "26"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "26"))
                                                                                                                           (rule "allLeft" (formula "27") (inst "t=Z(0(#))"))
                                                                                                                           (rule "add_zero_right" (formula "27") (term "0,2,0,1"))
                                                                                                                           (rule "leq_literals" (formula "27") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "eqSymm" (formula "27") (term "1"))
                                                                                                                           (rule "inEqSimp_commuteGeq" (formula "27") (term "0"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "qeq_literals" (formula "27") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_46"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "27"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "27"))
                                                                                                                           (rule "eqSymm" (formula "27"))
                                                                                                                           (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_47"))
                                                                                                                           (rule "simplifySelectOfAnon" (formula "27"))
                                                                                                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")))
                                                                                                                           (rule "eqSymm" (formula "28"))
                                                                                                                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "28"))
                                                                                                                           (rule "eqSymm" (formula "27") (term "0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "ifthenelse_negated" (formula "27") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "27") (term "1,0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownSelect_taclet000101010100_2" (formula "27") (term "0,0,0"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet000101010100_7" (formula "27") (term "0,0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_48"))
                                                                                                                           (rule "simplifySelectOfMemset" (formula "27"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "eqSymm" (formula "28"))
                                                                                                                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "28"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                                                                                                           (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                                                                                           (rule "eqSymm" (formula "27") (term "0,0,0,0"))
                                                                                                                           (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                                                                                                           (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                                                                                                           (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_49"))
                                                                                                                           (rule "simplifySelectOfCreate" (formula "27"))
                                                                                                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")) (ifInst ""  (formula "54")))
                                                                                                                           (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "27"))
                                                                                                                           (rule "eqSymm" (formula "27"))
                                                                                                                           (rule "allLeft" (formula "28") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "28") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "28") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "28") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "28") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "28") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "55"))
                                                                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "28") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "28"))
                                                                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                                                                           (rule "closeFalse" (formula "4"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  (branch "in[1] <= -1 FALSE"
                                                                                                                     (rule "inEqSimp_leqRight" (formula "44"))
                                                                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
                                                                                                                     (rule "ifthenelse_split" (formula "27") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "28"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "28"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                                                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "27"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                                        (rule "add_literals" (formula "27") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                                                                           (rule "add_literals" (formula "3") (term "1,0"))
                                                                                                                           (rule "times_zero_1" (formula "3") (term "0"))
                                                                                                                           (rule "qeq_literals" (formula "3"))
                                                                                                                           (rule "true_left" (formula "3"))
                                                                                                                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                                                                                           (rule "applyEqRigid" (formula "48") (term "1,0,2,0") (ifseqformula "2"))
                                                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                                                           (rule "closeTrue" (formula "48"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                                           (rule "eqSymm" (formula "50"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "45"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "45") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "45") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "45"))
                                                                                                                           (rule "false_right" (formula "45"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                                                                           (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "3") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                                                                           (rule "mul_literals" (formula "3") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                                                                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "true_left" (formula "23"))
                                                                                                                           (rule "allLeft" (formula "24") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "24") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "24") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "24") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "24") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                                                                                           (rule "qeq_literals" (formula "24") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "24"))
                                                                                                                           (rule "andLeft" (formula "2"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                                                                           (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                                                           (rule "add_zero_right" (formula "2") (term "0"))
                                                                                                                           (rule "leq_literals" (formula "2"))
                                                                                                                           (rule "closeFalse" (formula "2"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "45"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "28"))
                                                                                                                        (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                                                                           (rule "qeq_literals" (formula "4"))
                                                                                                                           (rule "true_left" (formula "4"))
                                                                                                                           (rule "applyEqRigid" (formula "48") (term "1,0,2,0") (ifseqformula "3"))
                                                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                                                           (rule "closeTrue" (formula "48"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "eqSymm" (formula "50"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "45"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "3"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "45") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "45") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "45"))
                                                                                                                           (rule "false_right" (formula "45"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "4") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                                           (rule "mul_literals" (formula "4") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "true_left" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "25") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "25"))
                                                                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                                                                           (rule "closeFalse" (formula "5"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                               (branch "in[2] <= -1 FALSE"
                                                                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "31"))
                                                                                                                  (rule "ifthenelse_split" (formula "29") (term "0"))
                                                                                                                  (branch "in[1] <= -1 TRUE"
                                                                                                                     (rule "polySimp_homoEq" (formula "30"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                                                     (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "30"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                                                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                     (rule "add_literals" (formula "29") (term "0,0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                     (rule "ifthenelse_split" (formula "27") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "28"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "28"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                                                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "27"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                                        (rule "add_literals" (formula "27") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "applyEqRigid" (formula "49") (term "1,0,2,0") (ifseqformula "2"))
                                                                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                                                                           (rule "closeTrue" (formula "49"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                                                                           (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "3") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                                                                           (rule "mul_literals" (formula "3") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                                                                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "true_left" (formula "23"))
                                                                                                                           (rule "allLeft" (formula "24") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "24") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "24") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "24") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "24") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "24"))
                                                                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                                                                           (rule "closeFalse" (formula "4"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "44"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "28"))
                                                                                                                        (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "applyEqRigid" (formula "48") (term "1,0,2,0") (ifseqformula "3"))
                                                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                                                           (rule "closeTrue" (formula "48"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "3"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "4") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                                           (rule "mul_literals" (formula "4") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "true_left" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "25") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "25"))
                                                                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                                                                           (rule "closeFalse" (formula "5"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  (branch "in[1] <= -1 FALSE"
                                                                                                                     (rule "inEqSimp_leqRight" (formula "43"))
                                                                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                                                                                                                     (rule "ifthenelse_split" (formula "28") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "29"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "29"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                                        (rule "add_literals" (formula "28") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                                                                           (rule "qeq_literals" (formula "4"))
                                                                                                                           (rule "true_left" (formula "4"))
                                                                                                                           (rule "applyEq" (formula "48") (term "1,0,2,0") (ifseqformula "3"))
                                                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                                                           (rule "closeTrue" (formula "48"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "3"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "4") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                                           (rule "mul_literals" (formula "4") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "true_left" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "25") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "25"))
                                                                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                                                                           (rule "closeFalse" (formula "5"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "44"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
                                                                                                                        (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "5"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                                                                           (rule "applyEqRigid" (formula "49") (term "1,0,2,0") (ifseqformula "4"))
                                                                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                                                                           (rule "closeTrue" (formula "49"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "4"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                                                                                           (rule "times_zero_1" (formula "5") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "5") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                                                                           (rule "mul_literals" (formula "5") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "5"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "true_left" (formula "25"))
                                                                                                                           (rule "allLeft" (formula "26") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "26") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "26") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "26") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "26") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "6"))
                                                                                                                           (rule "qeq_literals" (formula "26") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "4"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                                                                           (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                                                                           (rule "add_zero_right" (formula "26") (term "0"))
                                                                                                                           (rule "leq_literals" (formula "26"))
                                                                                                                           (rule "closeFalse" (formula "26"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                            (branch "in[3] <= -1 FALSE"
                                                                                                               (rule "inEqSimp_leqRight" (formula "41"))
                                                                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "41"))
                                                                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                               (rule "ifthenelse_split" (formula "31") (term "0"))
                                                                                                               (branch "in[2] <= -1 TRUE"
                                                                                                                  (rule "polySimp_homoEq" (formula "32"))
                                                                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                                                  (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                                                                                  (rule "polySimp_sepNegMonomial" (formula "32"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                                                                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                                                                                  (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                                                                  (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                                                  (rule "add_literals" (formula "31") (term "0,0"))
                                                                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                                                                  (rule "ifthenelse_split" (formula "29") (term "0"))
                                                                                                                  (branch "in[1] <= -1 TRUE"
                                                                                                                     (rule "polySimp_homoEq" (formula "30"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                                                     (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "30"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                                                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                     (rule "add_literals" (formula "29") (term "0,0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                     (rule "ifthenelse_split" (formula "27") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "28"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "28"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                                                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "27"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                                        (rule "add_literals" (formula "27") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                                                                                           (rule "applyEqRigid" (formula "48") (term "1,0,2,0") (ifseqformula "2"))
                                                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                                                           (rule "closeTrue" (formula "48"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "2"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                                                                           (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "3") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                                                                           (rule "mul_literals" (formula "3") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                                                                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                                                           (rule "true_left" (formula "23"))
                                                                                                                           (rule "allLeft" (formula "24") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "24") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "24") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "24") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "24") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "24") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "2"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "24"))
                                                                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                                                                           (rule "closeFalse" (formula "4"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "44"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "28"))
                                                                                                                        (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                                                                           (rule "qeq_literals" (formula "4"))
                                                                                                                           (rule "true_left" (formula "4"))
                                                                                                                           (rule "applyEqRigid" (formula "47") (term "1,0,2,0") (ifseqformula "3"))
                                                                                                                           (builtin "One Step Simplification" (formula "47"))
                                                                                                                           (rule "closeTrue" (formula "47"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "3"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "4") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                                           (rule "mul_literals" (formula "4") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "true_left" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "25") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "25"))
                                                                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                                                                           (rule "closeFalse" (formula "5"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  (branch "in[1] <= -1 FALSE"
                                                                                                                     (rule "inEqSimp_leqRight" (formula "43"))
                                                                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                                                                                                                     (rule "ifthenelse_split" (formula "28") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "29"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "29"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                                        (rule "add_literals" (formula "28") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "applyEqRigid" (formula "49") (term "1,0,2,0") (ifseqformula "3"))
                                                                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                                                                           (rule "closeTrue" (formula "49"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "3"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                                                                                           (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "4") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                                           (rule "mul_literals" (formula "4") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                                                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                                                           (rule "true_left" (formula "24"))
                                                                                                                           (rule "allLeft" (formula "25") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "25") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "25") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "25") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "25") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "3"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "5"))
                                                                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "closeFalse" (formula "25"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "44"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
                                                                                                                        (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "5"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                                                                                           (rule "applyEq" (formula "48") (term "1,0,2,0") (ifseqformula "4"))
                                                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                                                           (rule "closeTrue" (formula "48"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "eqSymm" (formula "49"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "44"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "4"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "44"))
                                                                                                                           (rule "false_right" (formula "44"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                                                                                           (rule "times_zero_1" (formula "5") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "5") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                                                                           (rule "mul_literals" (formula "5") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "5"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "true_left" (formula "25"))
                                                                                                                           (rule "allLeft" (formula "26") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "26") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "26") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "26") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "26") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "49"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "6"))
                                                                                                                           (rule "qeq_literals" (formula "26") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "4"))
                                                                                                                           (rule "andLeft" (formula "26"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                                                                           (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                                                                           (rule "add_zero_right" (formula "26") (term "0"))
                                                                                                                           (rule "leq_literals" (formula "26"))
                                                                                                                           (rule "closeFalse" (formula "26"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                               (branch "in[2] <= -1 FALSE"
                                                                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                                                                                  (rule "inEqSimp_exactShadow2" (formula "1") (ifseqformula "2"))
                                                                                                                  (rule "greater_literals" (formula "1") (term "0"))
                                                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                  (rule "ifthenelse_split" (formula "31") (term "0"))
                                                                                                                  (branch "in[1] <= -1 TRUE"
                                                                                                                     (rule "polySimp_homoEq" (formula "32"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                                                     (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                                                                                     (rule "polySimp_sepNegMonomial" (formula "32"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                                                                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                                                                                     (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                                                                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                                                     (rule "add_literals" (formula "31") (term "0,0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                                                                     (rule "ifthenelse_split" (formula "29") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "30"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "30"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                                                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                                        (rule "add_literals" (formula "29") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "5"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                                                                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                                                                           (rule "add_literals" (formula "5") (term "1,0"))
                                                                                                                           (rule "times_zero_1" (formula "5") (term "0"))
                                                                                                                           (rule "qeq_literals" (formula "5"))
                                                                                                                           (rule "true_left" (formula "5"))
                                                                                                                           (rule "applyEq" (formula "49") (term "1,0,2,0") (ifseqformula "4"))
                                                                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                                                                           (rule "closeTrue" (formula "49"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                                           (rule "eqSymm" (formula "50"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "45"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "4"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "45") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "45") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "45"))
                                                                                                                           (rule "false_right" (formula "45"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                                                                                           (rule "times_zero_1" (formula "5") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "5") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                                                                           (rule "mul_literals" (formula "5") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "5"))
                                                                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                                                           (rule "true_left" (formula "25"))
                                                                                                                           (rule "allLeft" (formula "26") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "26") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "26") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "26") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "26") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "26") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "4"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "6"))
                                                                                                                           (rule "qeq_literals" (formula "26") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "closeFalse" (formula "26"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "45"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                                                                                                                        (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "6"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                                           (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "5"))
                                                                                                                           (rule "applyEq" (formula "49") (term "1,0,2,0") (ifseqformula "5"))
                                                                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                                                                           (rule "closeTrue" (formula "49"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "5"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                                                                           (rule "eqSymm" (formula "50"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "45"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "5"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "45") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "45") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "45"))
                                                                                                                           (rule "false_right" (formula "45"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                                                                                           (rule "mul_literals" (formula "6") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "6") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                                                                           (rule "mul_literals" (formula "6") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "6"))
                                                                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                                                           (rule "true_left" (formula "26"))
                                                                                                                           (rule "allLeft" (formula "27") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "27") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "27") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "27") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "27") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "27") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "50"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "5"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                                                                                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                                                                                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                                                                                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                                                                                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                                                                                           (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                                                                                           (rule "leq_literals" (formula "27") (term "0,1"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "7"))
                                                                                                                           (rule "qeq_literals" (formula "27") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "closeFalse" (formula "27"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  (branch "in[1] <= -1 FALSE"
                                                                                                                     (rule "inEqSimp_leqRight" (formula "44"))
                                                                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                                                                                     (rule "inEqSimp_exactShadow2" (formula "1") (ifseqformula "2"))
                                                                                                                     (rule "greater_literals" (formula "1") (term "0"))
                                                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                                                                     (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                     (rule "ifthenelse_split" (formula "31") (term "0"))
                                                                                                                     (branch "in[0] <= -1 TRUE"
                                                                                                                        (rule "polySimp_homoEq" (formula "32"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                                                        (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                                                                                        (rule "polySimp_sepNegMonomial" (formula "32"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                                                                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                                                                                        (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                                                                        (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                                                                        (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                                                                        (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                                                        (rule "add_literals" (formula "31") (term "0,0"))
                                                                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                                                                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "7"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                                           (rule "applyEq" (formula "51") (term "1,0,2,0") (ifseqformula "6"))
                                                                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                                                                           (rule "closeTrue" (formula "51"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "6"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                                           (rule "eqSymm" (formula "51"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "46"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "46") (ifseqformula "6"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "46") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                                                                           (rule "false_right" (formula "46"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                                                                                                           (rule "times_zero_1" (formula "7") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "7") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                                                                           (rule "mul_literals" (formula "7") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "7"))
                                                                                                                           (rule "leq_literals" (formula "27") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                                                           (rule "true_left" (formula "27"))
                                                                                                                           (rule "allLeft" (formula "28") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "28") (term "0,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "28") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "28") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "28") (term "1,1"))
                                                                                                                           (rule "eqSymm" (formula "28") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "51"))
                                                                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "8"))
                                                                                                                           (rule "qeq_literals" (formula "28") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "28"))
                                                                                                                           (rule "andLeft" (formula "6"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                                                                           (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                                                                           (rule "add_zero_right" (formula "6") (term "0"))
                                                                                                                           (rule "leq_literals" (formula "6"))
                                                                                                                           (rule "closeFalse" (formula "6"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                     (branch "in[0] <= -1 FALSE"
                                                                                                                        (rule "inEqSimp_leqRight" (formula "46"))
                                                                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                                                                                                                        (rule "inEqSimp_exactShadow2" (formula "1") (ifseqformula "2"))
                                                                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                                                                        (rule "greater_literals" (formula "1") (term "0"))
                                                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                                                        (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                                                                        (branch "j_1 = i_0 TRUE"
                                                                                                                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "8"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                                                                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                                                                                                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                                                                                           (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                                                                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                                                                                           (rule "add_literals" (formula "8") (term "1,0"))
                                                                                                                           (rule "times_zero_1" (formula "8") (term "0"))
                                                                                                                           (rule "qeq_literals" (formula "8"))
                                                                                                                           (rule "true_left" (formula "8"))
                                                                                                                           (rule "applyEqRigid" (formula "49") (term "1,0,2,0") (ifseqformula "7"))
                                                                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                                                                           (rule "closeTrue" (formula "49"))
                                                                                                                        )
                                                                                                                        (branch "j_1 = i_0 FALSE"
                                                                                                                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "7"))
                                                                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                                           (rule "eqSymm" (formula "51"))
                                                                                                                           (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "46"))
                                                                                                                           (rule "inEqSimp_contradEq3" (formula "46") (ifseqformula "7"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                                                                                                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                                                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                                                                           (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                                                                           (rule "qeq_literals" (formula "46") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                                                                           (rule "false_right" (formula "46"))
                                                                                                                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                                                                                                           (rule "times_zero_1" (formula "8") (term "0,0"))
                                                                                                                           (rule "add_zero_left" (formula "8") (term "0"))
                                                                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                                                                           (rule "mul_literals" (formula "8") (term "1"))
                                                                                                                           (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "8"))
                                                                                                                           (rule "leq_literals" (formula "28") (term "0"))
                                                                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                                                                           (rule "true_left" (formula "28"))
                                                                                                                           (rule "allLeft" (formula "29") (inst "t=j_1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_53" (formula "29") (term "1,1"))
                                                                                                                           (rule "replaceKnownSelect_taclet011000000000011000000000000101010100_46" (formula "29") (term "0,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_54" (formula "29") (term "1,1"))
                                                                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011000000000011000000000000101010100_51" (formula "29") (term "0,1"))
                                                                                                                           (rule "eqSymm" (formula "29") (term "1"))
                                                                                                                           (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "51"))
                                                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "9"))
                                                                                                                           (rule "qeq_literals" (formula "29") (term "0,0"))
                                                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                                                           (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "29"))
                                                                                                                           (rule "andLeft" (formula "7"))
                                                                                                                           (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                                                                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                                                                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                                                                           (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                                                                           (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                                                                           (rule "add_zero_right" (formula "7") (term "0"))
                                                                                                                           (rule "leq_literals" (formula "7"))
                                                                                                                           (rule "closeFalse" (formula "7"))
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )
                                                                                                         (branch "Case 2"
                                                                                                            (rule "allRight" (formula "42") (inst "sk=f_0"))
                                                                                                            (rule "allRight" (formula "42") (inst "sk=o_0"))
                                                                                                            (rule "orRight" (formula "42"))
                                                                                                            (rule "orRight" (formula "42"))
                                                                                                            (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=f_0_0"))
                                                                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                                                                            (rule "eqSymm" (formula "45"))
                                                                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                                            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
                                                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                                                                            (rule "closeFalse" (formula "1"))
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                                (branch "Exceptional Post (unsign)"
                                                                                                   (builtin "One Step Simplification" (formula "50"))
                                                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                                                   (rule "andLeft" (formula "49"))
                                                                                                   (rule "andLeft" (formula "49"))
                                                                                                   (rule "andLeft" (formula "51"))
                                                                                                   (rule "notLeft" (formula "49"))
                                                                                                   (rule "close" (formula "52") (ifseqformula "51"))
                                                                                                )
                                                                                                (branch "Pre (unsign)"
                                                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                                                   (rule "wellFormedStorePrimitiveArray" (formula "49"))
                                                                                                   (rule "wellFormedAnon" (formula "49"))
                                                                                                   (rule "wellFormedStorePrimitive" (formula "49") (term "0"))
                                                                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "31"))
                                                                                                   (builtin "One Step Simplification" (formula "49"))
                                                                                                   (rule "wellFormedMemsetArrayPrimitive" (formula "49"))
                                                                                                   (rule "wellFormedStorePrimitive" (formula "49"))
                                                                                                   (rule "wellFormedStorePrimitive" (formula "49"))
                                                                                                   (rule "wellFormedStorePrimitive" (formula "49"))
                                                                                                   (rule "wellFormedCreate" (formula "49"))
                                                                                                   (rule "close" (formula "49") (ifseqformula "22"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Null Reference (x_arr = null)"
                                                                                                (builtin "One Step Simplification" (formula "49"))
                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                                (rule "closeFalse" (formula "1"))
                                                                                             )
                                                                                             (branch "Index Out of Bounds (x_arr != null, but 3 Out of Bounds!)"
                                                                                                (builtin "One Step Simplification" (formula "49"))
                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                                (rule "less_literals" (formula "1") (term "1"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "blockThrow" (formula "49") (term "1"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "closeFalse" (formula "1"))
                                                                                             )
                                                                                          )
                                                                                          (branch "Exceptional Post (unsign)"
                                                                                             (builtin "One Step Simplification" (formula "47"))
                                                                                             (builtin "One Step Simplification" (formula "46"))
                                                                                             (rule "andLeft" (formula "46"))
                                                                                             (rule "andLeft" (formula "46"))
                                                                                             (rule "andLeft" (formula "48"))
                                                                                             (rule "notLeft" (formula "46"))
                                                                                             (rule "close" (formula "49") (ifseqformula "48"))
                                                                                          )
                                                                                          (branch "Pre (unsign)"
                                                                                             (builtin "One Step Simplification" (formula "46"))
                                                                                             (rule "wellFormedStorePrimitiveArray" (formula "46"))
                                                                                             (rule "wellFormedAnon" (formula "46"))
                                                                                             (rule "wellFormedStorePrimitive" (formula "46") (term "0"))
                                                                                             (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "30"))
                                                                                             (builtin "One Step Simplification" (formula "46"))
                                                                                             (rule "wellFormedMemsetArrayPrimitive" (formula "46"))
                                                                                             (rule "wellFormedStorePrimitive" (formula "46"))
                                                                                             (rule "wellFormedStorePrimitive" (formula "46"))
                                                                                             (rule "wellFormedStorePrimitive" (formula "46"))
                                                                                             (rule "wellFormedCreate" (formula "46"))
                                                                                             (rule "close" (formula "46") (ifseqformula "21"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Null Reference (x_arr = null)"
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                                          (rule "closeFalse" (formula "1"))
                                                                                       )
                                                                                       (branch "Index Out of Bounds (x_arr != null, but 2 Out of Bounds!)"
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                                          (rule "less_literals" (formula "1") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "blockThrow" (formula "46") (term "1"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                                                                          (rule "qeq_literals" (formula "1") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "closeFalse" (formula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch "Exceptional Post (unsign)"
                                                                                       (builtin "One Step Simplification" (formula "43"))
                                                                                       (builtin "One Step Simplification" (formula "44"))
                                                                                       (rule "andLeft" (formula "43"))
                                                                                       (rule "andLeft" (formula "43"))
                                                                                       (rule "andLeft" (formula "45"))
                                                                                       (rule "notLeft" (formula "43"))
                                                                                       (rule "close" (formula "46") (ifseqformula "45"))
                                                                                    )
                                                                                    (branch "Pre (unsign)"
                                                                                       (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "wellFormedStorePrimitiveArray" (formula "43"))
                                                                                       (rule "wellFormedAnon" (formula "43"))
                                                                                       (rule "wellFormedStorePrimitive" (formula "43") (term "0"))
                                                                                       (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "29"))
                                                                                       (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "wellFormedMemsetArrayPrimitive" (formula "43"))
                                                                                       (rule "wellFormedStorePrimitive" (formula "43"))
                                                                                       (rule "wellFormedStorePrimitive" (formula "43"))
                                                                                       (rule "wellFormedStorePrimitive" (formula "43"))
                                                                                       (rule "wellFormedCreate" (formula "43"))
                                                                                       (rule "close" (formula "43") (ifseqformula "20"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Null Reference (x_arr = null)"
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch "Index Out of Bounds (x_arr != null, but 1 Out of Bounds!)"
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                                                    (rule "less_literals" (formula "1") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "blockThrow" (formula "43") (term "1"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "9") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "closeFalse" (formula "9"))
                                                                                 )
                                                                              )
                                                                              (branch "Exceptional Post (unsign)"
                                                                                 (builtin "One Step Simplification" (formula "41"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "andLeft" (formula "40"))
                                                                                 (rule "andLeft" (formula "40"))
                                                                                 (rule "andLeft" (formula "42"))
                                                                                 (rule "notLeft" (formula "40"))
                                                                                 (rule "close" (formula "43") (ifseqformula "42"))
                                                                              )
                                                                              (branch "Pre (unsign)"
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "wellFormedStorePrimitiveArray" (formula "40"))
                                                                                 (rule "wellFormedAnon" (formula "40"))
                                                                                 (rule "wellFormedStorePrimitive" (formula "40") (term "0"))
                                                                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "28"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "wellFormedMemsetArrayPrimitive" (formula "40"))
                                                                                 (rule "wellFormedStorePrimitive" (formula "40"))
                                                                                 (rule "wellFormedStorePrimitive" (formula "40"))
                                                                                 (rule "wellFormedStorePrimitive" (formula "40"))
                                                                                 (rule "wellFormedCreate" (formula "40"))
                                                                                 (rule "close" (formula "40") (ifseqformula "19"))
                                                                              )
                                                                           )
                                                                           (branch "Null Reference (x_arr = null)"
                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch "Index Out of Bounds (x_arr != null, but 0 Out of Bounds!)"
                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                                              (rule "less_literals" (formula "1") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "blockThrow" (formula "40") (term "1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "8") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "closeFalse" (formula "8"))
                                                                           )
                                                                        )
                                                                        (branch "Null Reference (x_arr_4 = null)"
                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "Index Out of Bounds (x_arr_4 != null, but x_66 Out of Bounds!)"
                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "16"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "14"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                           (rule "leq_literals" (formula "1") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "28"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                     (branch "Null Reference (x_arr_6 = null)"
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "Index Out of Bounds (x_arr_6 != null, but x_79 Out of Bounds!)"
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "12"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "1") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                                                                        (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "26") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "20") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "closeFalse" (formula "20"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "Exceptional Post (unsign)"
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "notLeft" (formula "33"))
                                                               (rule "close" (formula "36") (ifseqformula "35"))
                                                            )
                                                            (branch "Pre (unsign)"
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "wellFormedAnon" (formula "33"))
                                                               (rule "wellFormedStorePrimitive" (formula "33") (term "0"))
                                                               (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "wellFormedMemsetArrayPrimitive" (formula "33"))
                                                               (rule "wellFormedStorePrimitive" (formula "33"))
                                                               (rule "wellFormedStorePrimitive" (formula "33"))
                                                               (rule "wellFormedStorePrimitive" (formula "33"))
                                                               (rule "wellFormedCreate" (formula "33"))
                                                               (rule "close" (formula "33") (ifseqformula "14"))
                                                            )
                                                         )
                                                         (branch "Null Reference (x_arr = null)"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "Index Out of Bounds (x_arr != null, but 3 Out of Bounds!)"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                            (rule "less_literals" (formula "1") (term "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "blockThrow" (formula "32") (term "1"))
                                                            (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "37") (term "1,2,1,0,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "2,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,2,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                                            (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "36") (term "1,2,1,0,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "4"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "2,1,0,0,0,1,0,1,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,2,1,0,0,0,1,0,1,1,0,0,0,0,0"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                            (rule "add_literals" (formula "16") (term "0,0"))
                                                            (rule "applyEq" (formula "32") (term "1,2,1,0,0,0,0,0,0") (ifseqformula "4"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "2,1,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,2,1,0,0,0,0,0,0"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0,1,1,1,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,1,1,1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,1,1,1,0,0,0,0,0"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "2,1,0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "24") (term "0,2,1,0,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8"))
                                                            (rule "mul_literals" (formula "8") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0"))
                                                            (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "2,1,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "24") (term "0,2,1,0,0,0,1,1,0"))
                                                            (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                            (rule "add_literals" (formula "9") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "closeFalse" (formula "16"))
                                                         )
                                                      )
                                                      (branch "Null Reference (x_arr_5 = null)"
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Exceptional Post (unsign)"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "andLeft" (formula "31"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "close" (formula "32") (ifseqformula "31"))
                                                   )
                                                   (branch "Pre (unsign)"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "wellFormedAnon" (formula "29"))
                                                      (rule "wellFormedStorePrimitive" (formula "29") (term "0"))
                                                      (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "wellFormedMemsetArrayPrimitive" (formula "29"))
                                                      (rule "wellFormedStorePrimitive" (formula "29"))
                                                      (rule "wellFormedStorePrimitive" (formula "29"))
                                                      (rule "wellFormedStorePrimitive" (formula "29"))
                                                      (rule "wellFormedCreate" (formula "29"))
                                                      (rule "close" (formula "29") (ifseqformula "12"))
                                                   )
                                                )
                                                (branch "Null Reference (x_arr = null)"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Index Out of Bounds (x_arr != null, but 2 Out of Bounds!)"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                   (rule "less_literals" (formula "1") (term "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "blockThrow" (formula "28") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                   (rule "add_literals" (formula "14") (term "0,0"))
                                                   (rule "applyEq" (formula "32") (term "1,2,1,0,0,0,1,0,1,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "2,1,0,0,0,1,0,1,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,2,1,0,0,0,1,0,1,1,0,0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "1,2,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "2,1,0,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,2,1,0,0,0,1,0,0,0,0"))
                                                   (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "2,1,0,0,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,2,1,0,0,0,0,0,0,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "2,1,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,2,1,0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "31") (term "1,0,1,1,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,1,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,1,1,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,1,1,1,0,0,0,0"))
                                                   (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                   (rule "add_literals" (formula "7") (term "0,1"))
                                                   (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "2,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "22") (term "0,2,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                             )
                                             (branch "Exceptional Post (unsign)"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "close" (formula "28") (ifseqformula "27"))
                                             )
                                             (branch "Pre (unsign)"
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "wellFormedAnon" (formula "25"))
                                                (rule "wellFormedStorePrimitive" (formula "25") (term "0"))
                                                (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "wellFormedMemsetArrayPrimitive" (formula "25"))
                                                (rule "wellFormedStorePrimitive" (formula "25"))
                                                (rule "wellFormedStorePrimitive" (formula "25"))
                                                (rule "wellFormedStorePrimitive" (formula "25"))
                                                (rule "wellFormedCreate" (formula "25"))
                                                (rule "close" (formula "25") (ifseqformula "10"))
                                             )
                                          )
                                          (branch "Null Reference (x_arr = null)"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (x_arr != null, but 1 Out of Bounds!)"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                             (rule "less_literals" (formula "1") (term "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "blockThrow" (formula "24") (term "1"))
                                             (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,1,0,1,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addComm1" (formula "29") (term "2,1,0,0,0,1,0,1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,2,1,0,0,0,1,0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "mul_literals" (formula "13") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addComm1" (formula "25") (term "2,1,0,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,2,1,0,0,0,0,0,0,0,0"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "27") (term "2,1,0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,2,1,0,0,0,1,0,0,0,0"))
                                             (rule "applyEq" (formula "27") (term "1,0,1,1,1,0,0,0,0") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,1,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "5") (term "1"))
                                             (rule "add_literals" (formula "5") (term "0,1"))
                                             (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,2,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "closeFalse" (formula "11"))
                                          )
                                       )
                                       (branch "if x_56 false"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Exceptional Post (unsign)"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "close" (formula "24") (ifseqformula "23"))
                                    )
                                    (branch "Pre (unsign)"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "wellFormedAnon" (formula "21"))
                                       (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
                                       (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "wellFormedMemsetArrayPrimitive" (formula "21"))
                                       (rule "wellFormedStorePrimitive" (formula "21"))
                                       (rule "wellFormedStorePrimitive" (formula "21"))
                                       (rule "wellFormedStorePrimitive" (formula "21"))
                                       (rule "wellFormedCreate" (formula "21"))
                                       (rule "close" (formula "21") (ifseqformula "8"))
                                    )
                                 )
                                 (branch "Null Reference (x_arr = null)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr != null, but 0 Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "less_literals" (formula "1") (term "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "blockThrow" (formula "20") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "applyEq" (formula "24") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
                                    (rule "add_zero_right" (formula "24") (term "0,1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "9"))
                                    (rule "add_zero_right" (formula "24") (term "2,1,0,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                    (rule "add_zero_right" (formula "20") (term "2,1,0,0,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "9"))
                                    (rule "seqDef_lower_equals_upper" (formula "13") (term "0,0"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "times_zero_2" (formula "10") (term "1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0"))
                                    (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "9"))
                                    (rule "add_zero_right" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,1,1,0,0,0") (ifseqformula "9"))
                                    (rule "add_zero_right" (formula "24") (term "2,1,0,0,0,1,0,1,1,0,0,0"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "times_zero_2" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "8"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "8"))
                                    (rule "add_zero_right" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                              )
                              (branch "Null Reference (_in = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (_in = null)"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Use Case"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "3")))
                           (rule "variableDeclarationAssign" (formula "19") (term "1,1") (userinteraction))
                           (rule "variableDeclaration" (formula "19") (term "1,1") (newnames "b_0_2") (userinteraction))
                           (rule "compound_less_than_comparison_2" (formula "19") (term "1,1") (inst "#v1=x_1") (inst "#v0=x") (userinteraction))
                           (rule "variableDeclarationAssign" (formula "19") (term "1,1") (userinteraction))
                           (rule "variableDeclaration" (formula "19") (term "1,1") (newnames "x_101") (userinteraction))
                           (rule "assignment" (formula "19") (term "1,1") (userinteraction))
                           (rule "variableDeclarationAssign" (formula "19") (term "1,1,1") (userinteraction))
                           (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "x_102") (userinteraction))
                           (rule "compound_subtraction_1" (formula "19") (term "1,1,1") (inst "#v=x_103") (userinteraction))
                           (rule "variableDeclarationAssign" (formula "19") (term "1,1,1") (userinteraction))
                           (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "x_103") (userinteraction))
                           (rule "compound_subtraction_1" (formula "19") (term "1,1,1") (inst "#v=x_104") (userinteraction))
                           (rule "variableDeclarationAssign" (formula "19") (term "1,1,1") (userinteraction))
                           (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "x_104") (userinteraction))
                           (rule "assignment_read_length" (formula "19") (term "1,1,1") (userinteraction))
                           (branch "Normal Execution (_in != null)"
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "assignmentSubtractionInt" (formula "20") (term "1") (userinteraction))
                              (rule "assignmentSubtractionInt" (formula "20") (term "1,1") (userinteraction))
                              (rule "less_than_comparison_simple" (formula "20") (term "1,1,1") (userinteraction))
                              (rule "methodCallEmpty" (formula "20") (term "1,1,1,1") (userinteraction))
                              (rule "emptyModality" (formula "20") (term "1,1,1,1") (userinteraction))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "19") (userinteraction))
                              (rule "impRight" (formula "19"))
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")) (ifInst ""  (formula "21")) (ifInst ""  (formula "1")))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "blockEmpty" (formula "26") (term "1") (userinteraction))
                              (rule "tryReturn" (formula "26") (term "1") (userinteraction))
                              (rule "methodCallReturn" (formula "26") (term "1") (userinteraction))
                              (rule "assignment" (formula "26") (term "1") (userinteraction))
                              (rule "methodCallEmpty" (formula "26") (term "1,1") (userinteraction))
                              (rule "tryEmpty" (formula "26") (term "1,1") (userinteraction))
                              (rule "emptyModality" (formula "26") (term "1,1") (userinteraction))
                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "19")) (ifInst ""  (formula "25")))
                              (builtin "Evaluate Query" (formula "17") (term "1") (newnames "b_3,callee,queryResult_2,res_byteArrayToInt_2"))
                              (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult_2") (userinteraction))
                              (rule "notLeft" (formula "1") (userinteraction))
                              (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_byteArrayToInt_7,result_24,exc_21") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
                              (branch "Post (byteArrayToInt)"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "assignment" (formula "20") (term "1") (userinteraction))
                                 (rule "methodCallEmpty" (formula "20") (term "1,1") (userinteraction))
                                 (rule "emptyModality" (formula "20") (term "1,1") (userinteraction))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "notRight" (formula "20") (userinteraction))
                                 (rule "andLeft" (formula "20") (userinteraction))
                                 (rule "andLeft" (formula "21") (userinteraction))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(anon(store(memset(store(store(store(create(heap,x_arr_3),x_arr_3,java_lang_Object__transient_,Z(0(#))),x_arr_3,java_lang_Object__transactionConditionallyUpdated_,FALSE),x_arr_3,java_lang_Object__initialized_,FALSE),arrayRange(x_arr_3,Z(0(#)),sub(length(x_arr_3),Z(1(#)))),Z(0(#))),x_arr_3,java_lang_Object__initialized_,TRUE),allFields(x_arr_3),anon_heap_LOOP__anonHeapFunction__),in)_0201010100_1" (formula "18") (term "1") (userinteraction))
                                 (rule "pullOut" (formula "21") (term "0,1") (inst "sk=array2seq_2") (userinteraction))
                                 (rule "cut" (inst "cutFormula=array2seq(heap, in) = array2seq_2") (userinteraction))
                                 (branch "CUT: array2seq(heap, in) = array2seq_2 TRUE"
                                    (rule "andRight" (formula "31") (userinteraction))
                                    (branch "Case 1"
                                       (rule "defOfmSecond" (formula "31") (term "1") (userinteraction))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv") (userinteraction))
                                       (rule "andRight" (formula "31") (userinteraction))
                                       (branch "Case 1"
                                          (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "10") (term "0"))
                                          (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "9") (term "1,1"))
                                          (rule "translateJavaSubInt" (formula "25") (term "1"))
                                          (rule "translateJavaSubInt" (formula "29") (term "0"))
                                          (rule "translateJavaSubInt" (formula "28") (term "1"))
                                          (rule "translateJavaAddInt" (formula "20") (term "0,2,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "1"))
                                          (rule "translateJavaSubInt" (formula "18") (term "1"))
                                          (rule "translateJavaSubInt" (formula "17") (term "1"))
                                          (rule "translateJavaAddInt" (formula "9") (term "1"))
                                          (rule "translateJavaSubInt" (formula "25") (term "0,1"))
                                          (rule "translateJavaSubInt" (formula "29") (term "0,0"))
                                          (rule "translateJavaAddInt" (formula "20") (term "0,0,2,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "0,1"))
                                          (rule "translateJavaSubInt" (formula "17") (term "0,1"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "eqSymm" (formula "23"))
                                          (rule "eqSymm" (formula "20") (term "1,0"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1"))
                                          (rule "mul_literals" (formula "18") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "29") (term "0"))
                                          (rule "mul_literals" (formula "29") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                                          (rule "polySimp_elimSub" (formula "17") (term "0,1"))
                                          (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,2,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,2,0,0"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "25") (term "0,1"))
                                          (rule "polySimp_elimSub" (formula "29") (term "0,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1"))
                                          (rule "mul_literals" (formula "17") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1"))
                                          (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "1"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "2,1,0,0,0,0,2,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "1"))
                                          (rule "inEqSimp_ltRight" (formula "27"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17"))
                                          (rule "inEqSimp_gtRight" (formula "28"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "lenOfSeqSub" (formula "31") (term "0"))
                                          (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "1,0"))
                                          (rule "inEqSimp_ltRight" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "29"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "21"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                          (rule "applyEq" (formula "30") (term "1,2,1,0,0,0,0,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addComm1" (formula "30") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "2,1,0,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,2,1,0,0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,2,1,0,0,0,0,1,0,1,0"))
                                          (rule "applyEq" (formula "30") (term "0,1,0,0,0,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "30") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "2,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,2,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,2,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,2,1,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,0"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "26") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,2,0,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,2,1,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0,1") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,2,1,0,0,0,0,1"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "29") (term "0,1,0,1,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "16"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,2,1,0,0,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "29") (term "0,0,1,0,0,0") (ifseqformula "25"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "28") (term "1,0,0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "28") (term "0,0,1,1,0") (ifseqformula "24"))
                                          (rule "polySimp_addComm1" (formula "28") (term "1,0"))
                                          (rule "applyEq" (formula "5") (term "1") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,2,0,1,0") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "20") (term "0,1,0,0") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "22") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "6") (term "0,1,0,1") (ifseqformula "17"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "28") (term "0,1,0,2,1,0,0,0,0,1") (ifseqformula "21"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,1"))
                                          (rule "array2seqDef" (formula "2") (term "0") (inst "u=u"))
                                          (rule "lenOfSeqDefEQ" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,0,0,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,0,0,0"))
                                          (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "7") (ifseqformula "24"))
                                          (rule "lenOfSeqDefEQ" (formula "26") (term "1,1,0") (ifseqformula "2"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,1,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,1,0"))
                                          (rule "array2seqDef" (formula "22") (term "0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "lenOfSeqDef" (formula "26") (term "0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "26") (term "0,1,0,0,0") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                          (rule "eqSeqDef2" (formula "2") (inst "iv=iv") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "1,0"))
                                          (rule "times_zero_1" (formula "18") (term "0"))
                                          (rule "leq_literals" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "24") (term "0,0,1,1,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "17"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,2,1,0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,2,1,0,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,2,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "0,2,1,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "23") (term "0,0,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "23") (term "1,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,1,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "23") (term "1,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                                          (rule "add_literals" (formula "23") (term "0,1,1"))
                                          (rule "add_zero_left" (formula "23") (term "1,1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "eqSymm" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,2,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,2,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,2,1,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "2") (term "1"))
                                          (rule "add_literals" (formula "2") (term "1,1,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,1"))
                                          (rule "add_zero_right" (formula "2") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "add_zero_left" (formula "2") (term "1"))
                                          (rule "inEqSimp_invertInEq0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "times_zero_2" (formula "8") (term "1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1,1,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                          (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1"))
                                          (rule "mul_literals" (formula "15") (term "0,1"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "15")))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "23") (term "1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,0"))
                                          (rule "add_literals" (formula "23") (term "0,1,0"))
                                          (rule "add_zero_left" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeTrue" (formula "23"))
                                       )
                                       (branch
                                          (rule "allRight" (formula "31") (inst "sk=iv_5") (userinteraction))
                                          (rule "impRight" (formula "31") (userinteraction))
                                          (rule "andLeft" (formula "1") (userinteraction))
                                          (rule "lenOfArray2seq" (formula "2") (term "1") (userinteraction))
                                          (rule "getOfArray2seq" (formula "33") (term "0") (userinteraction))
                                          (branch
                                             (rule "getOfSeqSub" (formula "33") (term "1") (userinteraction))
                                             (rule "ifthenelse_split" (formula "33") (term "1") (userinteraction))
                                             (branch " 0 <= iv_5 & iv_5 < array2seq(heap[create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, x_arr_3.length - 1), 0)] [x_arr_3.<initialized> := TRUE] [anon(x_arr_3.*)], in).length - ( 4 + seq2int(array2seq(heap[create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, x_arr_3.length - 1), 0)] [x_arr_3.<initialized> := TRUE] [anon(x_arr_3.*)], in))) TRUE"
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "13") (term "0"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "12") (term "1,1"))
                                                (rule "translateJavaAddInt" (formula "23") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "21") (term "1"))
                                                (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                (rule "translateJavaSubInt" (formula "6") (term "1"))
                                                (rule "translateJavaSubInt" (formula "31") (term "1"))
                                                (rule "translateJavaSubInt" (formula "32") (term "0"))
                                                (rule "translateJavaSubInt" (formula "28") (term "1"))
                                                (rule "translateJavaAddInt" (formula "12") (term "1"))
                                                (rule "translateJavaAddInt" (formula "23") (term "0,0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "20") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "6") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "32") (term "0,0"))
                                                (rule "translateJavaSubInt" (formula "28") (term "0,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "eqSymm" (formula "17"))
                                                (rule "eqSymm" (formula "26"))
                                                (rule "eqSymm" (formula "23") (term "1,0"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,0,1,1,1,1"))
                                                (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,0,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1"))
                                                (rule "mul_literals" (formula "21") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "1"))
                                                (rule "mul_literals" (formula "31") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "6") (term "1"))
                                                (rule "mul_literals" (formula "6") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "32") (term "0"))
                                                (rule "mul_literals" (formula "32") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "1"))
                                                (rule "mul_literals" (formula "28") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0,0,0,1,1,1"))
                                                (rule "mul_literals" (formula "1") (term "1,2,1,0,0,0,0,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "1,2,1,0,0,0,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                (rule "mul_literals" (formula "20") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "6") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "32") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,0,1,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "21") (term "1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0,0,0,1,1,1,1"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "1"))
                                                (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "1"))
                                                (rule "inEqSimp_ltRight" (formula "30"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "polySimp_addComm0" (formula "29") (term "0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "inEqSimp_gtRight" (formula "31"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "32"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "31"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "24"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                (rule "applyEq" (formula "5") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "10"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "2,1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,2,1,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,2,1,0,0,0,0,0,1,0,0"))
                                                (rule "applyEq" (formula "33") (term "1,2,1,0,0,0,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "33") (term "0,1,1,1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "10"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "26") (term "1,0,0,2,0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "29") (term "1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "33") (term "1,2,1,0,0,0,0,1") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "2,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "33") (term "0,0,2,1,0,0,0,0,1"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "25"))
                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "12"))
                                                (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,1") (ifseqformula "24"))
                                                (rule "applyEq" (formula "5") (term "0,0,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "5") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,2,1,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "19"))
                                                (rule "eqSymm" (formula "28"))
                                                (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "27"))
                                                (rule "applyEq" (formula "27") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "32") (term "1,1,1") (ifseqformula "19"))
                                                (rule "applyEq" (formula "32") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "25") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "26"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "apply_eq_monomials" (formula "2") (term "1,0,0") (ifseqformula "27"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "27"))
                                                (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "27"))
                                                (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "27"))
                                                (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "24") (term "1,0,0,2,0,1,0") (ifseqformula "27"))
                                                (rule "applyEqRigid" (formula "22") (term "0,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "27"))
                                                (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "27"))
                                                (rule "applyEq" (formula "31") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "27"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "27"))
                                                (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "23"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "array2seqDef" (formula "5") (term "0") (inst "u=u"))
                                                (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "10") (ifseqformula "27"))
                                                (rule "lenOfSeqDefEQ" (formula "2") (term "0") (ifseqformula "5"))
                                                (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "2") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                                (rule "array2seqDef" (formula "24") (term "0") (inst "u=u"))
                                                (rule "getOfSeqDefEQ" (formula "29") (term "1") (ifseqformula "5"))
                                                (rule "castDel" (formula "29") (term "2,1"))
                                                (rule "castDel" (formula "29") (term "1,1"))
                                                (rule "add_zero_right" (formula "29") (term "0,2,1,1"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "29") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0,0"))
                                                (rule "times_zero_2" (formula "29") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                                                (rule "replace_known_left" (formula "29") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                (rule "eqSeqDef2" (formula "24") (inst "iv=iv") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "eqSeqDef2" (formula "5") (inst "iv=iv") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0"))
                                                (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "1,0"))
                                                (rule "times_zero_1" (formula "20") (term "0"))
                                                (rule "leq_literals" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "19"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,2,1,0,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,2,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "18"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "5") (term "1"))
                                                (rule "add_literals" (formula "5") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "5") (term "1,1"))
                                                (rule "add_zero_right" (formula "5") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                (rule "add_literals" (formula "5") (term "0,1"))
                                                (rule "add_zero_left" (formula "5") (term "1"))
                                                (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "18"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,2,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,2,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,2,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,1") (ifseqformula "18"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,2,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "26") (term "2,1,0,0,0,1"))
                                                (rule "add_literals" (formula "26") (term "1,1,2,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "26") (term "1,2,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "2,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,1"))
                                                (rule "add_literals" (formula "26") (term "0,2,1,0,0,0,1"))
                                                (rule "inEqSimp_invertInEq0" (formula "11"))
                                                (rule "times_zero_2" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "pullOutSelect" (formula "25") (term "1") (inst "selectSK=arr_108"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "narrowSelectArrayType" (formula "25") (term "1") (ifseqformula "15") (ifseqformula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "nnf_imp2or" (formula "19") (term "0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "ifthenelse_split" (formula "25") (term "0"))
                                                (branch "res_byteArrayToInt >= -4 + iv_5 * -1 TRUE"
                                                   (rule "eqSymm" (formula "26"))
                                                   (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "allLeft" (formula "20") (inst "t=iv_5"))
                                                   (rule "eqSymm" (formula "20") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,2,1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "20") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=arr_109"))
                                                   (rule "simplifySelectOfAnon" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "simplifySelectOfAnon" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")))
                                                   (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                                                   (rule "hideAuxiliaryEq" (formula "21"))
                                                   (rule "eqSymm" (formula "20") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "20") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                   (rule "simplifySelectOfMemset" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "simplifySelectOfStore" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "simplifySelectOfStore" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "simplifySelectOfStore" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "simplifySelectOfCreate" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")))
                                                   (rule "castDel" (formula "20") (term "1,0"))
                                                   (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "applyEqReverse" (formula "21") (term "0,0,1,0,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "hideAuxiliaryEq" (formula "20"))
                                                   (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_110"))
                                                   (rule "simplifySelectOfMemset" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                                                   (rule "eqSymm" (formula "20") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                   (rule "replace_known_left" (formula "20") (term "1,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0"))
                                                   (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_111"))
                                                   (rule "simplifySelectOfCreate" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "28")))
                                                   (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                                                   (rule "hideAuxiliaryEq" (formula "20"))
                                                   (rule "ifthenelse_split" (formula "20") (term "0"))
                                                   (branch " x_arr_3 = in & res_byteArrayToInt <= -5 + i_0 + iv_5 * -1 TRUE"
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "applyEqReverse" (formula "23") (term "2,0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22"))
                                                      (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,1,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "0,1,0,1,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "0,1,0,0,0,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "0,1,0,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "20"))
                                                      (rule "close" (formula "26") (ifseqformula "10"))
                                                   )
                                                   (branch " x_arr_3 = in & res_byteArrayToInt <= -5 + i_0 + iv_5 * -1 FALSE"
                                                      (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                                                      (rule "hideAuxiliaryEq" (formula "20"))
                                                      (rule "ifthenelse_split" (formula "20") (term "0"))
                                                      (branch "x_arr_3 = in TRUE"
                                                         (rule "eqSymm" (formula "21"))
                                                         (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "20"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_leqRight" (formula "25"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,1,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,1,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "23") (term "0,1,0,0,1,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,1,1,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,1,0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "21"))
                                                         (rule "close" (formula "26") (ifseqformula "11"))
                                                      )
                                                      (branch "x_arr_3 = in FALSE"
                                                         (rule "eqSymm" (formula "20"))
                                                         (rule "close" (formula "29") (ifseqformula "20"))
                                                      )
                                                   )
                                                )
                                                (branch "res_byteArrayToInt >= -4 + iv_5 * -1 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "25"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                             (branch " 0 <= iv_5 & iv_5 < array2seq(heap[create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, x_arr_3.length - 1), 0)] [x_arr_3.<initialized> := TRUE] [anon(x_arr_3.*)], in).length - ( 4 + seq2int(array2seq(heap[create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, x_arr_3.length - 1), 0)] [x_arr_3.<initialized> := TRUE] [anon(x_arr_3.*)], in))) FALSE"
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "12") (term "0"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "11") (term "1,1"))
                                                (rule "translateJavaSubInt" (formula "19") (term "1"))
                                                (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "27") (term "1"))
                                                (rule "translateJavaSubInt" (formula "31") (term "0"))
                                                (rule "castDel" (formula "34") (term "1"))
                                                (rule "translateJavaSubInt" (formula "30") (term "1"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1"))
                                                (rule "translateJavaAddInt" (formula "11") (term "1"))
                                                (rule "translateJavaSubInt" (formula "19") (term "0,1"))
                                                (rule "translateJavaAddInt" (formula "22") (term "0,0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "27") (term "0,1"))
                                                (rule "translateJavaSubInt" (formula "31") (term "0,0"))
                                                (rule "translateJavaSubInt" (formula "5") (term "0,1"))
                                                (rule "eqSymm" (formula "14"))
                                                (rule "eqSymm" (formula "25"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "eqSymm" (formula "22") (term "1,0"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                (rule "mul_literals" (formula "20") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "30") (term "1"))
                                                (rule "mul_literals" (formula "30") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "19") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "27") (term "1"))
                                                (rule "mul_literals" (formula "27") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0"))
                                                (rule "mul_literals" (formula "31") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,0,1,1,1"))
                                                (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,0,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "33") (term "2,1,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "33") (term "1,2,1,0,0,0,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1"))
                                                (rule "mul_literals" (formula "19") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "27") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "33") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,0,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "1"))
                                                (rule "polySimp_addComm0" (formula "30") (term "1"))
                                                (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "27") (term "1"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,0,1,1,1,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,2,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "1"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                                                (rule "inEqSimp_ltRight" (formula "29"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "1"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "inEqSimp_gtRight" (formula "30"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltRight" (formula "31"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "33"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "24"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "10"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "33") (term "1,2,1,0,0,0,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "26") (term "1,0,0,2,0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "29") (term "1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "12"))
                                                (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "25"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,1") (ifseqformula "24"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "23"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "23"))
                                                (rule "applyEq" (formula "31") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "23"))
                                                (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "23"))
                                                (rule "apply_eq_monomials" (formula "2") (term "1,0,0") (ifseqformula "18"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "applyEqRigid" (formula "24") (term "1,0,0,2,0,1,0") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "22") (term "0,1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "26") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "31") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "23"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                                                (rule "mul_literals" (formula "21") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "array2seqDef" (formula "5") (term "0") (inst "u=u"))
                                                (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "10") (ifseqformula "27"))
                                                (rule "lenOfSeqDefEQ" (formula "1") (term "0") (ifseqformula "5"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                                (rule "array2seqDef" (formula "24") (term "0") (inst "u=u"))
                                                (rule "eqSeqDef2" (formula "5") (inst "iv=iv") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_112"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "narrowSelectArrayType" (formula "27") (term "0") (ifseqformula "17") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "1,0"))
                                                (rule "times_zero_1" (formula "20") (term "0"))
                                                (rule "leq_literals" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0"))
                                                (rule "add_zero_right" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "19"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,2,1,0,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,2,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "18"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "5") (term "1"))
                                                (rule "add_literals" (formula "5") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "5") (term "1,1"))
                                                (rule "add_zero_right" (formula "5") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                (rule "add_literals" (formula "5") (term "0,1"))
                                                (rule "add_zero_left" (formula "5") (term "1"))
                                                (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "18"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,2,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,2,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,2,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_invertInEq0" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "times_zero_2" (formula "11") (term "1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "nnf_imp2or" (formula "19") (term "0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                (rule "mul_literals" (formula "17") (term "0,1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "17"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "12") (term "0"))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "11") (term "1,1"))
                                             (rule "translateJavaSubInt" (formula "19") (term "1"))
                                             (rule "translateJavaSubInt" (formula "20") (term "1"))
                                             (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "30") (term "1"))
                                             (rule "translateJavaSubInt" (formula "27") (term "1"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1"))
                                             (rule "translateJavaSubInt" (formula "31") (term "0"))
                                             (rule "translateJavaAddInt" (formula "11") (term "1"))
                                             (rule "translateJavaSubInt" (formula "19") (term "0,1"))
                                             (rule "translateJavaAddInt" (formula "22") (term "0,0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "27") (term "0,1"))
                                             (rule "translateJavaSubInt" (formula "5") (term "0,1"))
                                             (rule "translateJavaSubInt" (formula "31") (term "0,0"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "eqSymm" (formula "22") (term "1,0"))
                                             (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")))
                                             (rule "closeTrue" (formula "33"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "10") (term "0"))
                                       (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "9") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "28") (term "1"))
                                       (rule "translateJavaAddInt" (formula "20") (term "0,2,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "25") (term "1"))
                                       (rule "translateJavaSubInt" (formula "29") (term "0"))
                                       (rule "translateJavaSubInt" (formula "18") (term "1"))
                                       (rule "translateJavaSubInt" (formula "3") (term "1"))
                                       (rule "translateJavaSubInt" (formula "17") (term "1"))
                                       (rule "translateJavaAddInt" (formula "9") (term "1"))
                                       (rule "translateJavaAddInt" (formula "20") (term "0,0,2,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "25") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "29") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "3") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "17") (term "0,1"))
                                       (rule "allRight" (formula "31") (inst "sk=f_1"))
                                       (rule "allRight" (formula "31") (inst "sk=o_1"))
                                       (rule "orRight" (formula "31"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "23"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "eqSymm" (formula "20") (term "1,0"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1"))
                                       (rule "mul_literals" (formula "18") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "25") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "29") (term "0"))
                                       (rule "mul_literals" (formula "29") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "32") (term "2,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,2,1,0,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1"))
                                       (rule "mul_literals" (formula "25") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "29") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1"))
                                       (rule "mul_literals" (formula "17") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1"))
                                       (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,2,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "1"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_ltRight" (formula "27"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_gtRight" (formula "28"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "27"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltRight" (formula "29"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0") (ifseqformula "7"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,0"))
                                       (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "31") (term "1,2,1,0,0,0,0") (ifseqformula "7"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,2,1,0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,2,1,0,0,0,0"))
                                       (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "7"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,2,1,0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "7"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,2,1,0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "16") (term "1") (ifseqformula "9"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "23") (term "1,0,0,2,0,1,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "18") (term "1") (ifseqformula "22"))
                                       (rule "applyEq" (formula "26") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "22"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "6"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "29") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "applyEqRigid" (formula "22") (term "1,0,0,2,0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "15"))
                                       (rule "apply_eq_monomials" (formula "1") (term "1,0,0") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "24") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "29") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "21"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                       (rule "mul_literals" (formula "19") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "array2seqDef" (formula "2") (term "0") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "7") (ifseqformula "24"))
                                       (rule "array2seqDef" (formula "22") (term "0") (inst "u=u"))
                                       (rule "eqSeqDef2" (formula "2") (inst "iv=iv") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_1_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "2"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                       (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,0"))
                                       (rule "times_zero_1" (formula "19") (term "0"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "applyEq" (formula "1") (term "1,2,1,0,0,2,0") (ifseqformula "18"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,2,1,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,1,0,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "2,1,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,2,1,0,0,2,0"))
                                       (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,1,0,0") (ifseqformula "18"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,2,1,0,0,0,1,1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,0,1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,2,1,0,0,0,1,1,0,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,2,1,0,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,2,1,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,2,1,0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "19") (term "2,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,2,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,2,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,2,1,0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "1,1,1"))
                                       (rule "times_zero_1" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "add_zero_left" (formula "3") (term "1"))
                                       (rule "inEqSimp_invertInEq0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "times_zero_2" (formula "9") (term "1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                       (rule "simplifySelectOfMemset" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_5"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "nnf_imp2or" (formula "25") (term "0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "cut_direct" (formula "30") (term "0,0"))
                                       (branch "CUT: o_1 = null TRUE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "false_right" (formula "31"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "9") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "5") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "4") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "25") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeTrue" (formula "23"))
                                       )
                                       (branch "CUT: o_1 = null FALSE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "notRight" (formula "31"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,1,0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,1,0,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "commute_and" (formula "5") (term "0,0"))
                                          (rule "commute_and" (formula "4") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_1 = java.lang.Object::<created> & o_1 = x_arr_3 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")))
                                             (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "23") (ifseqformula "1"))
                                          )
                                          (branch "f_1 = java.lang.Object::<created> & o_1 = x_arr_3 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_1 = java.lang.Object::<transient> & o_1 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "2,1") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "32") (term "1") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "32") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "32") (term "0") (ifseqformula "20"))
                                                (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "26") (ifseqformula "1"))
                                             )
                                             (branch "f_1 = java.lang.Object::<transient> & o_1 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_1 = java.lang.Object::<transactionConditionallyUpdated> & o_1 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "31"))
                                                   (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "31") (term "2,1") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "31") (term "1") (ifseqformula "10"))
                                                   (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "false_right" (formula "25"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "false_right" (formula "24"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "23") (ifseqformula "1"))
                                                )
                                                (branch " f_1 = java.lang.Object::<transactionConditionallyUpdated> & o_1 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_1 = java.lang.Object::<initialized> & o_1 = x_arr_3 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "31"))
                                                      (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "false_right" (formula "26"))
                                                      (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "false_right" (formula "25"))
                                                      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "29") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "17"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "24") (ifseqformula "1"))
                                                   )
                                                   (branch "f_1 = java.lang.Object::<initialized> & o_1 = x_arr_3 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch " o_1 = x_arr_3 & exists int iv; (arr(iv) = f_1 & iv >= 0 & iv <= -1 + i_0) & !f_1 = java.lang.Object::<created> TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "exLeft" (formula "3") (inst "sk=iv_3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "26")))
                                                         (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "34"))
                                                         (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "25"))
                                                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "2")))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "false_right" (formula "27"))
                                                         (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "false_right" (formula "26"))
                                                         (rule "applyEqRigid" (formula "31") (term "2,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "2"))
                                                         (rule "narrowSelectArrayType" (formula "31") (term "1") (ifseqformula "10") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "false_right" (formula "26"))
                                                         (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "2"))
                                                         (rule "narrowSelectArrayType" (formula "30") (term "0") (ifseqformula "18") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "false_right" (formula "25"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                         (rule "close" (formula "25") (ifseqformula "1"))
                                                      )
                                                      (branch " o_1 = x_arr_3 & exists int iv; (arr(iv) = f_1 & iv >= 0 & iv <= -1 + i_0) & !f_1 = java.lang.Object::<created> FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "cut_direct" (formula "26") (term "1"))
                                                         (branch "CUT: o_1 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "eqSymm" (formula "31"))
                                                            (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
                                                            (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "27") (ifseqformula "2"))
                                                         )
                                                         (branch "CUT: o_1 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "false_right" (formula "27"))
                                                            (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: array2seq(heap, in) = array2seq_2 FALSE"
                                    (rule "hide_right" (formula "31") (userinteraction))
                                    (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "21") (userinteraction))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv") (userinteraction))
                                    (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "9") (term "0"))
                                    (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "1,1"))
                                    (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "28") (term "1"))
                                    (rule "translateJavaSubInt" (formula "2") (term "1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "0"))
                                    (rule "translateJavaSubInt" (formula "25") (term "1"))
                                    (rule "translateJavaSubInt" (formula "17") (term "1"))
                                    (rule "translateJavaSubInt" (formula "16") (term "1"))
                                    (rule "translateJavaAddInt" (formula "8") (term "1"))
                                    (rule "translateJavaAddInt" (formula "19") (term "0,0,2,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "2") (term "0,1"))
                                    (rule "translateJavaSubInt" (formula "29") (term "0,0"))
                                    (rule "translateJavaSubInt" (formula "25") (term "0,1"))
                                    (rule "translateJavaSubInt" (formula "16") (term "0,1"))
                                    (rule "eqSymm" (formula "23") (term "0"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "eqSymm" (formula "23") (term "1,0,1"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "eqSymm" (formula "19") (term "1,0"))
                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1"))
                                    (rule "mul_literals" (formula "28") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1"))
                                    (rule "mul_literals" (formula "17") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "29") (term "0"))
                                    (rule "mul_literals" (formula "29") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "1"))
                                    (rule "mul_literals" (formula "25") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "16") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,0,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "19") (term "2,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "19") (term "1,2,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "1,2,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "29") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,0,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "2,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,2,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                    (rule "inEqSimp_gtRight" (formula "28"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "29"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "28"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,0,1,0,1") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,0,0,1,0,1"))
                                    (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,0,0,1,0,1"))
                                    (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,2,1,0,0,0,0"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "25") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "15") (term "1") (ifseqformula "8"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,2,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "26") (term "0,0,1,0,1") (ifseqformula "24"))
                                    (rule "eqSymm" (formula "26") (term "1,0,1"))
                                    (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "24"))
                                    (rule "eqSymm" (formula "26") (term "0"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "15"))
                                    (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "21") (term "1,0,0,2,0,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "14"))
                                    (rule "applyEq" (formula "20") (term "1") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "21") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0,2,1,0,0,0,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "20"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1"))
                                    (rule "mul_literals" (formula "17") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,1"))
                                    (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "2,0,0") (ifseqformula "6") (ifseqformula "25"))
                                    (rule "array2seqDef" (formula "23") (term "0,0,1,0,1") (inst "u=u"))
                                    (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                                    (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                                    (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "narrowSelectArrayType" (formula "23") (term "1,0,1,0,1") (ifseqformula "6") (ifseqformula "25"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                    (rule "array2seqDef" (formula "23") (term "0,0,0") (inst "u=u"))
                                    (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                    (rule "array2seqDef" (formula "21") (term "0") (inst "u=u"))
                                    (rule "lenOfSeqDefEQ" (formula "23") (term "1,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "23") (term "0"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "eqSymm" (formula "23") (term "0"))
                                    (rule "array2seqDef" (formula "23") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                    (rule "lenOfSeqDef" (formula "23") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1,1,1,1,0,0,1"))
                                    (rule "times_zero_2" (formula "23") (term "1,1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "1,1,1,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                    (rule "getOfSeqDefEQ" (formula "23") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "castDel" (formula "23") (term "1,1,1,0,1"))
                                    (rule "castDel" (formula "23") (term "2,1,1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0,1"))
                                    (rule "eqSymm" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                    (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                    (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,2,1,0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,2,1,0,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,2,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,2,1,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,2,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "2,1,0,0,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,2,1,0,0,0,1,0,1,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,2,1,0,0,0,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "2,1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,2,1,0,0,0,1,0,1,0,1"))
                                    (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "23") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "eqSymm" (formula "23") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,0,0,1,0,1") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1,0,1,1,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,1,1,0,1,1,0,1"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,1,0,0,1") (ifseqformula "17"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,0"))
                                    (rule "times_zero_1" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "21") (term "0,0,1,1,1,0,0,1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1,1,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,1,1,0,0,1"))
                                    (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "21") (term "1,1,1,0,0,1,0,1") (ifseqformula "16"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,1,0,0,1,0,1"))
                                    (rule "eqSymm" (formula "21") (term "1,0,1"))
                                    (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "16"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "16"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,2,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,2,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,2,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "21") (term "0"))
                                    (rule "inEqSimp_invertInEq0" (formula "8"))
                                    (rule "times_zero_2" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "eqSymm" (formula "20") (term "0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1"))
                                    (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                    (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "eqSymm" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_homoEq" (formula "21") (term "1,0"))
                                    (rule "times_zero_2" (formula "21") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "21") (term "0"))
                                    (rule "inEqSimp_or_weaken1" (formula "21") (term "0"))
                                    (rule "replace_known_left" (formula "21") (term "1,0") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "allRight" (formula "21") (inst "sk=iv_2"))
                                    (rule "orRight" (formula "21"))
                                    (rule "orRight" (formula "21"))
                                    (rule "inEqSimp_geqRight" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "22"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,0,1,0,1"))
                                    (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=arr_60"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "16") (ifseqformula "26"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_61"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                                    (rule "simplifySelectOfMemset" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_62"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "9") (ifseqformula "27"))
                                    (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "res_byteArrayToInt >= -3 + i_0 * -1 TRUE"
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "5")))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "x_arr_3 = in & iv_2 <= -1 + i_0 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "26") (ifseqformula "11"))
                                       )
                                       (branch "x_arr_3 = in & iv_2 <= -1 + i_0 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "x_arr_3 = in TRUE"
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_leqRight" (formula "24"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "0,1,0,0,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "2"))
                                             (rule "close" (formula "26") (ifseqformula "11"))
                                          )
                                          (branch "x_arr_3 = in FALSE"
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "closeTrue" (formula "26"))
                                          )
                                       )
                                    )
                                    (branch "res_byteArrayToInt >= -3 + i_0 * -1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "25"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "times_zero_2" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                              (branch "Exceptional Post (byteArrayToInt)"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(anon(store(memset(store(store(store(create(heap,x_arr_3),x_arr_3,java_lang_Object__transient_,Z(0(#))),x_arr_3,java_lang_Object__transactionConditionallyUpdated_,FALSE),x_arr_3,java_lang_Object__initialized_,FALSE),arrayRange(x_arr_3,Z(0(#)),sub(length(x_arr_3),Z(1(#)))),Z(0(#))),x_arr_3,java_lang_Object__initialized_,TRUE),allFields(x_arr_3),anon_heap_LOOP__anonHeapFunction__),in)_0201010100_1" (formula "17") (term "1"))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1"))
                                 (rule "translateJavaSubInt" (formula "22") (term "1"))
                                 (rule "translateJavaSubInt" (formula "1") (term "1"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "25") (term "1"))
                                 (rule "translateJavaSubInt" (formula "26") (term "0"))
                                 (rule "translateJavaSubInt" (formula "16") (term "1"))
                                 (rule "translateJavaSubInt" (formula "15") (term "1"))
                                 (rule "translateJavaAddInt" (formula "7") (term "1"))
                                 (rule "translateJavaSubInt" (formula "22") (term "0,1"))
                                 (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "15") (term "0,1"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "close" (formula "22") (ifseqformula "21"))
                              )
                              (branch "Pre (byteArrayToInt)"
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(anon(store(memset(store(store(store(create(heap,x_arr_3),x_arr_3,java_lang_Object__transient_,Z(0(#))),x_arr_3,java_lang_Object__transactionConditionallyUpdated_,FALSE),x_arr_3,java_lang_Object__initialized_,FALSE),arrayRange(x_arr_3,Z(0(#)),sub(length(x_arr_3),Z(1(#)))),Z(0(#))),x_arr_3,java_lang_Object__initialized_,TRUE),allFields(x_arr_3),anon_heap_LOOP__anonHeapFunction__),in)_0201010100_1" (formula "17") (term "1"))
                                 (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1"))
                                 (rule "wellFormedAnon" (formula "19") (term "0,1"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,0,1"))
                                 (rule "translateJavaSubInt" (formula "24") (term "1"))
                                 (rule "translateJavaSubInt" (formula "25") (term "0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "1"))
                                 (rule "translateJavaSubInt" (formula "1") (term "1"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "16") (term "1"))
                                 (rule "translateJavaSubInt" (formula "15") (term "1"))
                                 (rule "translateJavaAddInt" (formula "7") (term "1"))
                                 (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "0,1"))
                                 (rule "translateJavaSubInt" (formula "1") (term "0,1"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "15") (term "0,1"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "19") (term "1,0,1") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1"))
                                 (rule "mul_literals" (formula "16") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1"))
                                 (rule "mul_literals" (formula "15") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "2,1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "1,2,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "2,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "19") (term "1,2,1,0,0,0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "0"))
                                 (rule "mul_literals" (formula "25") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "1"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "2,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "2,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,2,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "1"))
                                 (rule "inEqSimp_ltRight" (formula "23"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,1"))
                                 (rule "inEqSimp_gtRight" (formula "24"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "25"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "24"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,1,0,0,1") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "applyEq" (formula "22") (term "1,2,1,0,0,1") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,1"))
                                 (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "14"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,1") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0,1,1"))
                                 (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "26") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,1,0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,2,0,1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0,0,0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "26") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,2,1,0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "26") (term "0,1,0,2,1,0,0,0,0,1,0,0,1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,2,1,0,0,0,1,1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "19") (term "1") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "20") (term "1,0,0,2,0,1,0") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,2,1,0,0,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "19"))
                                 (rule "apply_eq_monomials" (formula "21") (term "1,0,2,1,0,0,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,1,0,2,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,2,1,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "1,0,2,1,0,0,0,1,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,1,0,2,1,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,1,0,2,1,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "21") (term "1,0,2,1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,2,1,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,2,1,0,0,0,0,1,0,0,1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "25") (term "0,1,0,2,1,0,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,2,1,0,0,1") (ifseqformula "19"))
                                 (rule "applyEqRigid" (formula "25") (term "0,1,0,2,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,0,0,1,1,0") (ifseqformula "15"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                                 (rule "mul_literals" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,1"))
                                 (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "21"))
                                 (rule "array2seqDef" (formula "23") (term "0,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "23") (term "0"))
                                 (rule "wellFormedMemsetArrayPrimitive" (formula "19") (term "0,1"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,1"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,1"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,1"))
                                 (rule "wellFormedCreate" (formula "19") (term "0,1"))
                                 (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "array2seqDef" (formula "23") (term "1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "23") (term "0"))
                                 (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,1") (ifseqformula "16"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,2,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "20") (term "2,1,0,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,2,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,2,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "2,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,2,1,0,0,0,1"))
                                 (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "16"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "24") (term "1,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "1,0,0"))
                                 (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,2,0,0") (ifseqformula "16"))
                                 (rule "eqSymm" (formula "24") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,2,1,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,2,1,0,0,0,2,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "24") (term "2,1,0,0,0,2,1,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,2,1,0,0,0,2,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,2,1,0,0,0,2,1,0"))
                                 (rule "add_zero_right" (formula "24") (term "2,1,0,0,0,2,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,2,1,0"))
                                 (rule "add_literals" (formula "24") (term "0,2,1,0,0,0,2,1,0"))
                                 (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "16"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,2,1,0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,2,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,2,1,0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,1,0,0,1") (ifseqformula "16"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "24") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "24") (term "0,2,1,0,0,0,0,1,0,0,1"))
                                 (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,0"))
                                 (rule "times_zero_1" (formula "16") (term "0"))
                                 (rule "leq_literals" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,2,0,0,0") (ifseqformula "15"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,2,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,1,0,0,0,2,0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "22") (term "2,1,0,0,0,2,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,2,1,0,0,0,2,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,2,1,0,0,0,2,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "2,1,0,0,0,2,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,2,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,2,1,0,0,0,2,0,0,0"))
                                 (rule "eqSymm" (formula "22") (term "0"))
                                 (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "15"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,2,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "17") (term "2,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,2,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,2,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "2,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,2,1,0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "15"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "1"))
                                 (rule "add_literals" (formula "1") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,1"))
                                 (rule "add_zero_right" (formula "1") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                 (rule "add_literals" (formula "1") (term "0,1"))
                                 (rule "add_zero_left" (formula "1") (term "1"))
                                 (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "15"))
                                 (rule "inEqSimp_invertInEq0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                 (rule "pullOutSelect" (formula "17") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "18") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "17"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "15"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                           )
                           (branch "Null Reference (_in = null)"
                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (newObject_1 = null)"
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "4")))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "8") (term "0"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "7") (term "1,1"))
                        (rule "translateJavaSubInt" (formula "15") (term "1"))
                        (rule "translateJavaSubInt" (formula "16") (term "0"))
                        (rule "translateJavaSubInt" (formula "2") (term "0,1,1,1,0"))
                        (rule "translateJavaAddInt" (formula "7") (term "1"))
                        (rule "translateJavaSubInt" (formula "16") (term "0,0"))
                        (rule "translateJavaSubInt" (formula "2") (term "1,1,1,0"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "close" (formula "14") (ifseqformula "1"))
                     )
                  )
               )
               (branch "Null Reference (_in = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (_in = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "9"))
      (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "0"))
      (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "5") (term "1,1"))
      (rule "translateJavaAddInt" (formula "5") (term "1"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "close" (formula "12") (ifseqformula "11"))
   )
   (branch "Pre (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "2")) (ifInst ""  (formula "9")))
      (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "0"))
      (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "5") (term "1,1"))
      (rule "translateJavaAddInt" (formula "5") (term "1"))
      (rule "eqSymm" (formula "8"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_geqRight" (formula "10"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "applyEq" (formula "9") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "3") (ifseqformula "10"))
      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
      (rule "mul_literals" (formula "6") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
      (rule "polySimp_elimOne" (formula "6") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "8"))
      (rule "qeq_literals" (formula "6") (term "0"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "closeFalse" (formula "6"))
   )
)
(branch "Exceptional Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "5") (term "0"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "4") (term "1,1"))
   (rule "translateJavaAddInt" (formula "4") (term "1"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "9") (ifseqformula "8"))
)
(branch "Pre (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "7")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "5") (term "0"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "4") (term "1,1"))
   (rule "translateJavaAddInt" (formula "4") (term "1"))
   (rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "inEqSimp_geqRight" (formula "6"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "array2seqDef" (formula "8") (term "0,0,0,0,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "8") (term "0,1,0,0,0,0,1") (inst "u=u"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
   (rule "mul_literals" (formula "5") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "5") (term "0"))
   (rule "add_literals" (formula "5") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
   (rule "polySimp_elimOne" (formula "5") (term "0"))
   (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "5"))
   (rule "qeq_literals" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
)

}
