\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Aug 08 15:10:52 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=30000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Aug 08 15:10:52 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "158929")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "in,result,exc,heapAtPre,o,f") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "assignment" (formula "7") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_second,savedHeapBefore_second,_inBefore_second") (userinteraction))
(builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "len") (userinteraction))
(builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_byteArrayToInt,result_0,exc_0,heapAfter_byteArrayToInt,anon_heap_byteArrayToInt") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
(branch "Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment" (formula "9") (term "1") (userinteraction))
   (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x") (userinteraction))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x") (userinteraction))
   (rule "compound_assignment_5_nonsimple" (formula "11") (term "1") (userinteraction))
   (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x_1") (userinteraction))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_39") (userinteraction))
   (rule "less_than_comparison_simple" (formula "11") (term "1") (userinteraction))
   (builtin "One Step Simplification" (formula "11"))
   (rule "ifthenelse_split" (formula "11") (term "0,1,0") (userinteraction))
   (branch "result_0 < 0 TRUE"
      (rule "hide_right" (formula "12") (userinteraction))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "10") (userinteraction))
      (rule "cut" (inst "cutFormula=  verif.utils.MessageTools::byteArrayToInt(heapAfter_byteArrayToInt,
                                           in)
= verif.utils.MessageTools::byteArrayToInt(heap, in)") (userinteraction))
      (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt = verif.utils.MessageTools.byteArrayToInt(in) TRUE"
         (rule "translateJavaAddInt" (formula "6") (term "1"))
         (rule "eqSymm" (formula "11"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "inEqSimp_homoInEq1" (formula "6"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
         (rule "qeq_literals" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt = verif.utils.MessageTools.byteArrayToInt(in) FALSE"
         (builtin "Evaluate Query" (formula "11") (term "0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
         (builtin "Evaluate Query" (formula "12") (term "1") (newnames "b_0,callee,queryResult,res_byteArrayToInt_0"))
         (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "13") (term "1") (userinteraction))
         (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "13") (term "0") (userinteraction))
         (rule "notLeft" (formula "2") (userinteraction))
         (rule "notLeft" (formula "1") (userinteraction))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "queryResult") (userinteraction))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "queryResult_1") (userinteraction))
         (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_byteArrayToInt_4,result_22,exc_18,heapAfter_byteArrayToInt_0,anon_heap_byteArrayToInt_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
         (branch "Post (byteArrayToInt)"
            (rule "assignment" (formula "13") (term "1,1") (userinteraction))
            (rule "methodCallEmpty" (formula "13") (term "1,1,1") (userinteraction))
            (rule "emptyModality" (formula "13") (term "1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
            (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_byteArrayToInt_5,result_23,exc_19,heapAfter_byteArrayToInt_1,anon_heap_byteArrayToInt_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
            (branch "Post (byteArrayToInt)"
               (rule "assignment" (formula "16") (term "1,1") (userinteraction))
               (rule "methodCallEmpty" (formula "16") (term "1,1,1") (userinteraction))
               (rule "emptyModality" (formula "16") (term "1,1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (builtin "Evaluate Query" (formula "14") (term "1,0,0,0,1,0,1,0,1,1") (newnames "b_1,callee,queryResult_0,res_unsign"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_1,int_select(heapAfter_byteArrayToInt_1,in,arr(Z(0(#)))))_00100_3" (formula "15") (term "1,0,0,0,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "15") (term "1,1,0,0,1,0,1,0,1,1") (newnames "b_2,callee,queryResult_0,res_unsign_0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_1,int_select(heapAfter_byteArrayToInt_1,in,arr(Z(1(#)))))_00100_4" (formula "16") (term "1,1,0,0,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "16") (term "1,1,0,1,0,1,0,1,1") (newnames "b_3,callee,queryResult_0,res_unsign_1"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_1,int_select(heapAfter_byteArrayToInt_1,in,arr(Z(2(#)))))_00100_5" (formula "17") (term "1,1,0,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "17") (term "1,1,0,1,0,1,1") (newnames "b_4,callee,queryResult_0,res_unsign_2"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_1,int_select(heapAfter_byteArrayToInt_1,in,arr(Z(3(#)))))_00100_6" (formula "18") (term "1,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "16") (term "1,0,0,0,1,0,1,0,1,1") (newnames "b_5,callee,queryResult_0,res_unsign_3"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_0,int_select(heapAfter_byteArrayToInt_0,in,arr(Z(0(#)))))_00100_7" (formula "17") (term "1,0,0,0,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "17") (term "1,1,0,0,1,0,1,0,1,1") (newnames "b_6,callee,queryResult_0,res_unsign_4"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_0,int_select(heapAfter_byteArrayToInt_0,in,arr(Z(1(#)))))_00100_8" (formula "18") (term "1,1,0,0,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "18") (term "1,1,0,1,0,1,0,1,1") (newnames "b_7,callee,queryResult_0,res_unsign_5"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_0,int_select(heapAfter_byteArrayToInt_0,in,arr(Z(2(#)))))_00100_9" (formula "19") (term "1,1,0,1,0,1,0,1,1") (userinteraction))
               (builtin "Evaluate Query" (formula "19") (term "1,1,0,1,0,1,1") (newnames "b_8,callee,queryResult_0,res_unsign_6"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_0,int_select(heapAfter_byteArrayToInt_0,in,arr(Z(3(#)))))_00100_10" (formula "20") (term "1,1,0,1,0,1,1") (userinteraction))
               (rule "notLeft" (formula "4"))
               (rule "notLeft" (formula "4"))
               (rule "notLeft" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "notLeft" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "notLeft" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "12"))
               (rule "notRight" (formula "25"))
               (rule "notRight" (formula "26"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "16"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "12") (term "1"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "8") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "3") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "7") (term "1,1"))
               (rule "translateJavaAddInt" (formula "16") (term "1,0,1"))
               (rule "translateJavaAddInt" (formula "21") (term "1,0,1"))
               (rule "translateJavaAddInt" (formula "7") (term "1"))
               (rule "translateJavaMulInt" (formula "16") (term "1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "16") (term "1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "16") (term "0,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "1,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "16") (term "0,1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "16") (term "0,0,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,0,0,0,1,0,1"))
               (rule "translateJavaAddInt" (formula "16") (term "0,0,1,0,1"))
               (rule "translateJavaAddInt" (formula "21") (term "0,0,1,0,1"))
               (rule "translateJavaAddInt" (formula "16") (term "0,1,0,1"))
               (rule "translateJavaAddInt" (formula "21") (term "0,1,0,1"))
               (rule "translateJavaMulInt" (formula "16") (term "0,0,0,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "21") (term "0,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "16") (term "0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "21") (term "0,0,0,0,1,0,1"))
               (rule "eqSymm" (formula "24") (term "0,0,1"))
               (rule "eqSymm" (formula "30") (term "0,0,1"))
               (rule "eqSymm" (formula "23") (term "0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,1"))
               (rule "eqSymm" (formula "26") (term "0,0,1"))
               (rule "eqSymm" (formula "31"))
               (rule "eqSymm" (formula "28") (term "0,0,1"))
               (rule "eqSymm" (formula "25") (term "0,0,1"))
               (rule "eqSymm" (formula "27") (term "0,0,1"))
               (rule "eqSymm" (formula "17") (term "0,1"))
               (rule "eqSymm" (formula "29") (term "0,0,1"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "22") (term "1,1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replace_known_left" (formula "21") (term "1,1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "replace_known_left" (formula "17") (term "1,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "pullOutSelect" (formula "30") (term "0,1,0") (inst "selectSK=arr_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=arr_9"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_10"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=arr_11"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_12"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_13"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_14"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=arr_15"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "queryResult_0"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "queryResult_0_1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "queryResult_0_2"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_0_3"))
               (rule "variableDeclaration" (formula "28") (term "1") (newnames "queryResult_0_4"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult_0_5"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "queryResult_0_6"))
               (rule "variableDeclaration" (formula "29") (term "1") (newnames "queryResult_0_7"))
               (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
               (rule "polySimp_homoEq" (formula "21") (term "1"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,1"))
               (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "2"))
               (rule "polySimp_homoEq" (formula "16") (term "1"))
               (rule "polySimp_addComm1" (formula "16") (term "0,1"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
               (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,1"))
               (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
               (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "21") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "21") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1"))
               (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,1"))
               (rule "polySimp_sepPosMonomial" (formula "16") (term "1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,1"))
               (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_unsign_16,result_24,exc_20") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
               (branch "Post (unsign)"
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "translateJavaAddInt" (formula "23") (term "1,1,0,1"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "24"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0"))
                  (rule "assignment" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0"))
                  (rule "methodCallEmpty" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "emptyModality" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "notRight" (formula "26"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "25") (term "1") (ifseqformula "1"))
                  (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                  (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_unsign_17,result_25,exc_21") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                  (branch "Post (unsign)"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "translateJavaAddInt" (formula "27") (term "1,1,0,1"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "28"))
                     (rule "eqSymm" (formula "28"))
                     (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                     (rule "assignment" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
                     (rule "eqSymm" (formula "28"))
                     (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "28"))
                     (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_unsign_18,result_26,exc_22") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                     (branch "Post (unsign)"
                        (builtin "One Step Simplification" (formula "29"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "translateJavaAddInt" (formula "29") (term "1,1,0,1"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "assignment" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0"))
                        (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_unsign_19,result_27,exc_23") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                        (branch "Post (unsign)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "translateJavaAddInt" (formula "31") (term "1,1,0,1"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "32"))
                           (rule "eqSymm" (formula "32"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                           (rule "assignment" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0"))
                           (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unsign_20,result_28,exc_24") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                           (branch "Post (unsign)"
                              (builtin "One Step Simplification" (formula "38"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "translateJavaAddInt" (formula "33") (term "1,1,0,1"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "34"))
                              (rule "eqSymm" (formula "34"))
                              (rule "polySimp_addComm0" (formula "34") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                              (rule "assignment" (formula "39") (term "1"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0"))
                              (rule "mul_literals" (formula "34") (term "1,0,0"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "32"))
                              (rule "eqSymm" (formula "34"))
                              (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "34"))
                              (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_unsign_21,result_29,exc_25") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                              (branch "Post (unsign)"
                                 (builtin "One Step Simplification" (formula "37"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "translateJavaAddInt" (formula "35") (term "1,1,0,1"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_addComm0" (formula "36") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                 (rule "assignment" (formula "38") (term "1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "30"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "36"))
                                 (rule "methodCallEmpty" (formula "43") (term "1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_unsign_22,result_30,exc_26") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                 (branch "Post (unsign)"
                                    (builtin "One Step Simplification" (formula "41"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "translateJavaAddInt" (formula "37") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                    (rule "assignment" (formula "42") (term "1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0"))
                                    (builtin "Use Operation Contract" (formula "44") (newnames "heapBefore_unsign_23,result_31,exc_27") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                    (branch "Post (unsign)"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "translateJavaAddInt" (formula "39") (term "1,1,0,1"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                       (rule "assignment" (formula "46") (term "1"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,0,0"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "38"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "40"))
                                       (rule "methodCallEmpty" (formula "41") (term "1"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "methodCallEmpty" (formula "43") (term "1"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "methodCallEmpty" (formula "45") (term "1"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "methodCallEmpty" (formula "42") (term "1"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "emptyModality" (formula "47") (term "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "notRight" (formula "47"))
                                       (rule "applyEqRigid" (formula "19") (term "0,1,0,0,1,1") (ifseqformula "1"))
                                       (rule "methodCallEmpty" (formula "45") (term "1"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "methodCallEmpty" (formula "47") (term "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "emptyModality" (formula "42") (term "1"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "notRight" (formula "42"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "32") (term "1") (ifseqformula "1"))
                                       (rule "emptyModality" (formula "44") (term "1"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "notRight" (formula "44"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "1"))
                                       (rule "emptyModality" (formula "46") (term "1"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "notRight" (formula "46"))
                                       (rule "applyEq" (formula "22") (term "0,1,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "1,1"))
                                       (rule "emptyModality" (formula "45") (term "1"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "notRight" (formula "45"))
                                       (rule "applyEq" (formula "23") (term "0,1,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "1,1"))
                                       (rule "emptyModality" (formula "46") (term "1"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "notRight" (formula "46"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "44") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "46") (term "1") (ifseqformula "1"))
                                       (rule "emptyModality" (formula "47") (term "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "notRight" (formula "47"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "47") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "45") (term "1") (ifseqformula "1"))
                                       (rule "ifthenelse_split" (formula "37") (term "0"))
                                       (branch "in[1] ≤ -1 TRUE"
                                          (rule "polySimp_homoEq" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                          (rule "add_literals" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "ifthenelse_split" (formula "40") (term "0"))
                                          (branch "in[2] ≤ -1 TRUE"
                                             (rule "polySimp_homoEq" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "41"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq0" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                             (rule "add_literals" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "0"))
                                             (rule "ifthenelse_split" (formula "47") (term "0"))
                                             (branch "in[3] ≤ -1 TRUE"
                                                (rule "polySimp_homoEq" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                (rule "add_literals" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "ifthenelse_split" (formula "33") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq0" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                   (rule "add_literals" (formula "33") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                   (rule "cut_direct" (formula "30") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "applyEq" (formula "25") (term "0") (ifseqformula "31"))
                                                      (rule "polySimp_homoEq" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "50") (term "1,1") (ifseqformula "31"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEq" (formula "1") (term "1") (ifseqformula "31"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "2") (term "1") (ifseqformula "31"))
                                                      (rule "polySimp_sepPosMonomial" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "25"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "17"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "closeFalse" (formula "19"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                   (rule "cut_direct" (formula "27") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "32"))
                                                      (rule "polySimp_homoEq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "32"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "32"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "26"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                             )
                                             (branch "in[3] ≤ -1 FALSE"
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "48"))
                                                (rule "ifthenelse_split" (formula "34") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq0" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                   (rule "add_literals" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "cut_direct" (formula "27") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "26"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "2") (term "1") (ifseqformula "26"))
                                                      (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "26"))
                                                      (rule "polySimp_sepNegMonomial" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "32"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                                   (rule "cut_direct" (formula "32") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "applyEq" (formula "33") (term "0") (ifseqformula "27"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "27"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "50") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "27"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "33"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "closeFalse" (formula "19"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "in[2] ≤ -1 FALSE"
                                             (rule "inEqSimp_leqRight" (formula "49"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "41"))
                                             (rule "ifthenelse_split" (formula "47") (term "0"))
                                             (branch "in[3] ≤ -1 TRUE"
                                                (rule "polySimp_homoEq" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                (rule "add_literals" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "ifthenelse_split" (formula "34") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq0" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                   (rule "add_literals" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "cut_direct" (formula "31") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "32"))
                                                      (rule "polySimp_homoEq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "32"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "32"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "26"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                                   (rule "cut_direct" (formula "32") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "33"))
                                                      (rule "polySimp_homoEq" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "50") (term "1,1") (ifseqformula "33"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "33"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "27"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "closeFalse" (formula "19"))
                                                   )
                                                )
                                             )
                                             (branch "in[3] ≤ -1 FALSE"
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "48"))
                                                (rule "ifthenelse_split" (formula "35") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq0" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                   (rule "add_literals" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "cut_direct" (formula "32") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "33"))
                                                      (rule "polySimp_homoEq" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "50") (term "1") (ifseqformula "33"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "33"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "33"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "33"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "27"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeFalse" (formula "21"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "36"))
                                                   (rule "cut_direct" (formula "34") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "applyEq" (formula "33") (term "0") (ifseqformula "28"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "28"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "28"))
                                                      (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "5") (term "1") (ifseqformula "28"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "33"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "in[1] ≤ -1 FALSE"
                                          (rule "inEqSimp_leqRight" (formula "48"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "38"))
                                          (rule "ifthenelse_split" (formula "40") (term "0"))
                                          (branch "in[2] ≤ -1 TRUE"
                                             (rule "polySimp_homoEq" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "41"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq0" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                             (rule "add_literals" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "0"))
                                             (rule "ifthenelse_split" (formula "47") (term "0"))
                                             (branch "in[3] ≤ -1 TRUE"
                                                (rule "polySimp_homoEq" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                (rule "add_literals" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "ifthenelse_split" (formula "34") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq0" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                   (rule "add_literals" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "cut_direct" (formula "31") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "32"))
                                                      (rule "polySimp_homoEq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "32"))
                                                      (rule "applyEqRigid" (formula "50") (term "1,1") (ifseqformula "32"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "32"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "26"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                                   (rule "cut_direct" (formula "33") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "27"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "27"))
                                                      (rule "applyEqRigid" (formula "50") (term "1,1") (ifseqformula "27"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "27"))
                                                      (rule "polySimp_sepNegMonomial" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "32"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeFalse" (formula "21"))
                                                   )
                                                )
                                             )
                                             (branch "in[3] ≤ -1 FALSE"
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "48"))
                                                (rule "ifthenelse_split" (formula "35") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq0" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                   (rule "add_literals" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "cut_direct" (formula "33") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0") (ifseqformula "27"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "50") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "27"))
                                                      (rule "polySimp_sepNegMonomial" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "32"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeFalse" (formula "21"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "36"))
                                                   (rule "cut_direct" (formula "29") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "34"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "5") (term "1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "50") (term "1") (ifseqformula "34"))
                                                      (rule "polySimp_sepPosMonomial" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "28"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "in[2] ≤ -1 FALSE"
                                             (rule "inEqSimp_leqRight" (formula "49"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "41"))
                                             (rule "ifthenelse_split" (formula "47") (term "0"))
                                             (branch "in[3] ≤ -1 TRUE"
                                                (rule "polySimp_homoEq" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                (rule "add_literals" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "ifthenelse_split" (formula "35") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq0" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                   (rule "add_literals" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "cut_direct" (formula "28") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "33"))
                                                      (rule "polySimp_homoEq" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "33"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "33"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "33"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "27"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeFalse" (formula "21"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "36"))
                                                   (rule "cut_direct" (formula "34") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "28"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "5") (term "1") (ifseqformula "28"))
                                                      (rule "applyEqRigid" (formula "50") (term "1,1") (ifseqformula "28"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "28"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "33"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                )
                                             )
                                             (branch "in[3] ≤ -1 FALSE"
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "48"))
                                                (rule "ifthenelse_split" (formula "36") (term "0"))
                                                (branch "in[0] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "37"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                   (rule "inEqSimp_homoInEq0" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "add_literals" (formula "36") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "cut_direct" (formula "29") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "34") (term "0") (ifseqformula "28"))
                                                      (rule "polySimp_homoEq" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "28"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "28"))
                                                      (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "50") (term "1") (ifseqformula "28"))
                                                      (rule "polySimp_sepNegMonomial" (formula "34"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "34"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                                (branch "in[0] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "37"))
                                                   (rule "cut_direct" (formula "30") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "35"))
                                                      (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "35"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0"))
                                                      (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "50") (term "1") (ifseqformula "35"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "6") (term "1") (ifseqformula "35"))
                                                      (rule "polySimp_sepPosMonomial" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1"))
                                                      (rule "close" (formula "53") (ifseqformula "29"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_geqRight" (formula "48"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Exceptional Post (unsign)"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0") (ifseqformula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0") (ifseqformula "12"))
                                       (rule "translateJavaAddInt" (formula "39") (term "1,1,0,1"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "notLeft" (formula "39"))
                                       (rule "close" (formula "42") (ifseqformula "41"))
                                    )
                                    (branch "Pre (unsign)"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "wellFormedAnonEQ" (formula "44") (ifseqformula "21"))
                                       (rule "wellFormedAnonEQ" (formula "44") (term "0") (ifseqformula "12"))
                                       (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "5")) (ifInst ""  (formula "11")))
                                       (rule "closeTrue" (formula "44"))
                                    )
                                 )
                                 (branch "Exceptional Post (unsign)"
                                    (builtin "One Step Simplification" (formula "41"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "16"))
                                    (rule "translateJavaAddInt" (formula "37") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "close" (formula "40") (ifseqformula "39"))
                                 )
                                 (branch "Pre (unsign)"
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "wellFormedAnonEQ" (formula "40") (ifseqformula "16"))
                                    (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "15")))
                                    (rule "closeTrue" (formula "40"))
                                 )
                              )
                              (branch "Exceptional Post (unsign)"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0") (ifseqformula "16"))
                                 (rule "translateJavaAddInt" (formula "35") (term "1,1,0,1"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "close" (formula "38") (ifseqformula "37"))
                              )
                              (branch "Pre (unsign)"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "wellFormedAnonEQ" (formula "36") (ifseqformula "16"))
                                 (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "15")))
                                 (rule "closeTrue" (formula "36"))
                              )
                           )
                           (branch "Exceptional Post (unsign)"
                              (builtin "One Step Simplification" (formula "38"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "16"))
                              (rule "translateJavaAddInt" (formula "33") (term "1,1,0,1"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "34"))
                              (rule "andLeft" (formula "33"))
                              (rule "notLeft" (formula "33"))
                              (rule "close" (formula "36") (ifseqformula "35"))
                           )
                           (branch "Pre (unsign)"
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "15")))
                              (rule "closeTrue" (formula "37"))
                           )
                        )
                        (branch "Exceptional Post (unsign)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "12"))
                           (rule "translateJavaAddInt" (formula "31") (term "1,1,0,1"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "33"))
                           (rule "notLeft" (formula "31"))
                           (rule "close" (formula "34") (ifseqformula "33"))
                        )
                        (branch "Pre (unsign)"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "wellFormedAnonEQ" (formula "33") (ifseqformula "21"))
                           (rule "wellFormedAnonEQ" (formula "33") (term "0") (ifseqformula "12"))
                           (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "5")) (ifInst ""  (formula "11")))
                           (rule "closeTrue" (formula "33"))
                        )
                     )
                     (branch "Exceptional Post (unsign)"
                        (builtin "One Step Simplification" (formula "30"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0") (ifseqformula "12"))
                        (rule "translateJavaAddInt" (formula "29") (term "1,1,0,1"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "31"))
                        (rule "notLeft" (formula "29"))
                        (rule "close" (formula "32") (ifseqformula "31"))
                     )
                     (branch "Pre (unsign)"
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "wellFormedAnonEQ" (formula "29") (ifseqformula "21"))
                        (rule "wellFormedAnonEQ" (formula "29") (term "0") (ifseqformula "12"))
                        (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "5")) (ifInst ""  (formula "11")))
                        (rule "closeTrue" (formula "29"))
                     )
                  )
                  (branch "Exceptional Post (unsign)"
                     (builtin "One Step Simplification" (formula "27"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "16"))
                     (rule "translateJavaAddInt" (formula "27") (term "1,1,0,1"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "27"))
                     (rule "close" (formula "30") (ifseqformula "29"))
                  )
                  (branch "Pre (unsign)"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "wellFormedAnonEQ" (formula "33") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "15")))
                     (rule "closeTrue" (formula "33"))
                  )
               )
               (branch "Exceptional Post (unsign)"
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "19"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,0") (ifseqformula "10"))
                  (rule "translateJavaAddInt" (formula "23") (term "1,1,0,1"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "25"))
                  (rule "notLeft" (formula "23"))
                  (rule "close" (formula "26") (ifseqformula "25"))
               )
               (branch "Pre (unsign)"
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "wellFormedAnonEQ" (formula "24") (ifseqformula "19"))
                  (rule "wellFormedAnonEQ" (formula "24") (term "0") (ifseqformula "10"))
                  (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "9")) (ifInst ""  (formula "18")))
                  (rule "closeTrue" (formula "24"))
               )
            )
            (branch "Exceptional Post (byteArrayToInt)"
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "6") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "10") (term "1"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "1") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "5") (term "1,1"))
               (rule "translateJavaAddInt" (formula "12") (term "1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "14") (term "1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "5") (term "1"))
               (rule "translateJavaMulInt" (formula "12") (term "1,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "14") (term "1,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "14") (term "1,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,1,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "14") (term "0,0,0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "12") (term "0,0,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "14") (term "0,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "14") (term "0,0,1,0,1,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "mul_literals" (formula "14") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "notRight" (formula "15"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0") (ifseqformula "9"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "19"))
               (rule "eqSymm" (formula "24"))
               (rule "eqSymm" (formula "23") (term "0,0,1"))
               (rule "eqSymm" (formula "16") (term "0,1"))
               (rule "eqSymm" (formula "21") (term "0,1"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_right" (formula "20") (term "1,1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "notLeft" (formula "20"))
               (rule "replace_known_right" (formula "20") (term "1,1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "21")))
               (rule "true_left" (formula "20"))
               (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
               (rule "true_left" (formula "16"))
               (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "18"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "9"))
               (rule "qeq_literals" (formula "7") (term "0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
            (branch "Pre (byteArrayToInt)"
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "6") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "1") (term "0"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "10") (term "1"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "5") (term "1,1"))
               (rule "wellFormedAnonEQ" (formula "14") (term "0,1") (ifseqformula "8"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1") (ifseqformula "8"))
               (rule "translateJavaAddInt" (formula "12") (term "1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "5") (term "1"))
               (rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "12") (term "0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "1,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,0,1,0,1,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
               (rule "notRight" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "15"))
               (rule "eqSymm" (formula "18"))
               (rule "eqSymm" (formula "16") (term "0,1"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
               (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "15"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
               (rule "qeq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "closeFalse" (formula "9"))
            )
         )
         (branch "Exceptional Post (byteArrayToInt)"
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
            (builtin "One Step Simplification" (formula "13"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "6") (term "0"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "10") (term "1"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "1") (term "0"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "5") (term "1,1"))
            (rule "translateJavaAddInt" (formula "12") (term "1,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "5") (term "1"))
            (rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,0,1,0,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "12") (term "1,0,0,1,0,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "12") (term "0,0,0,1,0,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
            (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "12") (term "0,0,1,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
            (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "12"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "13"))
            (rule "eqSymm" (formula "19"))
            (rule "eqSymm" (formula "18") (term "0,0,1"))
            (rule "eqSymm" (formula "17") (term "0,0,1"))
            (rule "eqSymm" (formula "15") (term "0,1"))
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "notLeft" (formula "14"))
            (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "14"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "6"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "closeFalse" (formula "8"))
         )
         (branch "Pre (byteArrayToInt)"
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "14")) (ifInst ""  (formula "2")) (ifInst ""  (formula "14")))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "6") (term "0"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "10") (term "1"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100_1" (formula "1") (term "0"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100_2" (formula "5") (term "1,1"))
            (rule "translateJavaAddInt" (formula "5") (term "1"))
            (rule "eqSymm" (formula "12") (term "0,0,1"))
            (rule "eqSymm" (formula "13"))
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_geqRight" (formula "11"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "6"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "closeFalse" (formula "8"))
         )
      )
   )
   (branch "result_0 < 0 FALSE"
      (rule "ifElseSplit" (formula "12") (userinteraction))
      (branch "if x_39 true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_39 false"
         (rule "compound_greater_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_2") (inst "#v0=x_1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_51") (userinteraction))
         (rule "assignment" (formula "13") (term "1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "x_52") (userinteraction))
         (rule "remove_parentheses_right" (formula "13") (term "1,1") (userinteraction))
         (rule "compound_subtraction_1" (formula "13") (term "1,1") (inst "#v=x_53") (userinteraction))
         (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "x_53") (userinteraction))
         (rule "assignment_read_length" (formula "13") (term "1,1") (userinteraction))
         (branch "Normal Execution (_in != null)"
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
            (rule "false_right" (formula "13") (userinteraction))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1") (userinteraction))
            (builtin "One Step Simplification" (formula "12"))
            (rule "assignmentSubtractionInt" (formula "12") (term "1") (userinteraction))
            (rule "greater_than_comparison_simple" (formula "12") (term "1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "12"))
            (rule "translateJavaSubInt" (formula "12") (term "1,0,0,1,0") (userinteraction))
            (rule "ifthenelse_split" (formula "12") (term "0,1,0") (userinteraction))
            (branch "result_0 > in.length - 4 TRUE"
               (rule "blockEmpty" (formula "13") (term "1") (userinteraction))
               (rule "hide_right" (formula "13") (userinteraction))
               (rule "cut" (inst "cutFormula=  verif.utils.MessageTools::byteArrayToInt(heapAfter_byteArrayToInt,
                                           in)
= verif.utils.MessageTools::byteArrayToInt(heap, in)") (userinteraction))
               (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt = verif.utils.MessageTools.byteArrayToInt(in) TRUE"
                  (rule "translateJavaAddInt" (formula "6") (term "1"))
                  (rule "eqSymm" (formula "11"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_elimSub" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                  (rule "eqSymm" (formula "2"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "2"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "7"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt = verif.utils.MessageTools.byteArrayToInt(in) FALSE"
                  (builtin "Evaluate Query" (formula "11") (term "1") (newnames "b_9,callee,queryResult_2,res_byteArrayToInt_1"))
                  (builtin "Evaluate Query" (formula "12") (term "0") (newnames "b_10,callee,queryResult_2,res_byteArrayToInt_2"))
                  (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100110_2" (formula "13") (term "0") (userinteraction))
                  (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "13") (term "1") (userinteraction))
                  (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_100110_2" (formula "12") (term "1") (userinteraction))
                  (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "8") (term "0") (userinteraction))
                  (rule "notLeft" (formula "2"))
                  (rule "notLeft" (formula "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "queryResult_2") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "queryResult_2_1") (userinteraction))
                  (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_byteArrayToInt_6,result_32,exc_28,heapAfter_byteArrayToInt_2,anon_heap_byteArrayToInt_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
                  (branch "Post (byteArrayToInt)"
                     (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_byteArrayToInt_7,result_33,exc_29,heapAfter_byteArrayToInt_3,anon_heap_byteArrayToInt_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
                     (branch "Post (byteArrayToInt)"
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                        (builtin "Evaluate Query" (formula "12") (term "1,0,0,0,1,0,1,0,1,1") (newnames "b_11,callee,queryResult_3,res_unsign_7"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_2,int_select(heapAfter_byteArrayToInt_2,in,arr(Z(0(#)))))_00100110_3" (formula "13") (term "1,0,0,0,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "13") (term "1,1,0,0,1,0,1,0,1,1") (newnames "b_12,callee,queryResult_3,res_unsign_8"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_2,int_select(heapAfter_byteArrayToInt_2,in,arr(Z(1(#)))))_00100110_4" (formula "14") (term "1,1,0,0,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "14") (term "1,1,0,1,0,1,0,1,1") (newnames "b_13,callee,queryResult_3,res_unsign_9"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_2,int_select(heapAfter_byteArrayToInt_2,in,arr(Z(2(#)))))_00100110_5" (formula "15") (term "1,1,0,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "15") (term "1,1,0,1,0,1,1") (newnames "b_14,callee,queryResult_3,res_unsign_10"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_2,int_select(heapAfter_byteArrayToInt_2,in,arr(Z(3(#)))))_00100110_6" (formula "16") (term "1,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "18") (term "1,0,0,0,1,0,1,0,1,1") (newnames "b_15,callee,queryResult_3,res_unsign_11"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_3,int_select(heapAfter_byteArrayToInt_3,in,arr(Z(0(#)))))_00100110_7" (formula "19") (term "1,0,0,0,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "19") (term "1,1,0,0,1,0,1,0,1,1") (newnames "b_16,callee,queryResult_3,res_unsign_12"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_3,int_select(heapAfter_byteArrayToInt_3,in,arr(Z(1(#)))))_00100110_8" (formula "20") (term "1,1,0,0,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "20") (term "1,1,0,1,0,1,0,1,1") (newnames "b_17,callee,queryResult_3,res_unsign_13"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_3,int_select(heapAfter_byteArrayToInt_3,in,arr(Z(2(#)))))_00100110_9" (formula "21") (term "1,1,0,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "21") (term "1,1,0,1,0,1,1") (newnames "b_18,callee,queryResult_3,res_unsign_14"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_3,int_select(heapAfter_byteArrayToInt_3,in,arr(Z(3(#)))))_00100110_10" (formula "22") (term "1,1,0,1,0,1,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "13") (term "1,1"))
                        (rule "translateJavaAddInt" (formula "20") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "22") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "13") (term "1"))
                        (rule "translateJavaAddInt" (formula "20") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "20") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "20") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "20") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "20") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "notLeft" (formula "2"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "4"))
                        (rule "notLeft" (formula "5"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "3"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "19"))
                        (rule "eqSymm" (formula "30") (term "0,0,1"))
                        (rule "eqSymm" (formula "29") (term "0,0,1"))
                        (rule "eqSymm" (formula "28") (term "0,0,1"))
                        (rule "eqSymm" (formula "27") (term "0,0,1"))
                        (rule "eqSymm" (formula "26") (term "0,0,1"))
                        (rule "eqSymm" (formula "25") (term "0,0,1"))
                        (rule "eqSymm" (formula "24") (term "0,0,1"))
                        (rule "eqSymm" (formula "23") (term "0,0,1"))
                        (rule "eqSymm" (formula "22") (term "0,0,1"))
                        (rule "eqSymm" (formula "21") (term "0,0,1"))
                        (rule "eqSymm" (formula "15") (term "0,1"))
                        (rule "eqSymm" (formula "20") (term "0,1"))
                        (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_left" (formula "20") (term "1,1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_left" (formula "19") (term "1,1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "polySimp_elimSub" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "14") (term "1,1"))
                        (rule "inEqSimp_ltRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,1"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,1,1"))
                        (rule "inEqSimp_gtToGeq" (formula "2"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=arr_16"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_17"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=arr_18"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_19"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=arr_20"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_21"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_22"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=arr_23"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "assignment" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "assignment" (formula "30") (term "1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "queryResult_3"))
                        (rule "variableDeclaration" (formula "28") (term "1") (newnames "queryResult_3_1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "queryResult_3_2"))
                        (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_3_3"))
                        (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult_3_4"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "queryResult_3_5"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "queryResult_3_6"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "queryResult_3_7"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                        (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "11"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "6"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0"))
                        (rule "leq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "false_right" (formula "33"))
                        (rule "methodCallEmpty" (formula "32") (term "1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "methodCallEmpty" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "emptyModality" (formula "32") (term "1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "notRight" (formula "32"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "1"))
                        (rule "polySimp_homoEq" (formula "22") (term "1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1"))
                        (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_sepPosMonomial" (formula "22") (term "1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "22") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,1"))
                        (rule "emptyModality" (formula "32") (term "1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "notRight" (formula "32"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "1"))
                        (rule "polySimp_homoEq" (formula "18") (term "1"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,1"))
                        (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_sepPosMonomial" (formula "18") (term "1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "18") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,1"))
                        (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "9") (term "0,0"))
                        (rule "add_zero_left" (formula "9") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_unsign_24,result_34,exc_30") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                        (branch "Post (unsign)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "translateJavaAddInt" (formula "26") (term "1,1,0,1"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "27"))
                           (rule "eqSymm" (formula "27"))
                           (rule "polySimp_addComm0" (formula "27") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "assignment" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0"))
                           (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_unsign_25,result_35,exc_31") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                           (branch "Post (unsign)"
                              (builtin "One Step Simplification" (formula "35"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "translateJavaAddInt" (formula "28") (term "1,1,0,1"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "29"))
                              (rule "eqSymm" (formula "29"))
                              (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                              (rule "assignment" (formula "36") (term "1"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                              (rule "mul_literals" (formula "29") (term "1,0,0"))
                              (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_unsign_26,result_36,exc_32") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                              (branch "Post (unsign)"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "translateJavaAddInt" (formula "30") (term "1,1,0,1"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "polySimp_addComm0" (formula "31") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                 (rule "assignment" (formula "37") (term "1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "27"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "31"))
                                 (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_unsign_27,result_37,exc_33") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                 (branch "Post (unsign)"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "translateJavaAddInt" (formula "32") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                    (rule "assignment" (formula "38") (term "1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0"))
                                    (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unsign_28,result_38,exc_34") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                    (branch "Post (unsign)"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "translateJavaAddInt" (formula "34") (term "1,1,0,1"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "polySimp_addComm0" (formula "35") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                       (rule "assignment" (formula "39") (term "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0"))
                                       (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_unsign_29,result_39,exc_35") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                       (branch "Post (unsign)"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "translateJavaAddInt" (formula "36") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                          (rule "assignment" (formula "40") (term "1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "37"))
                                          (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_unsign_30,result_40,exc_36") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                          (branch "Post (unsign)"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "translateJavaAddInt" (formula "38") (term "1,1,0,1"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                             (rule "assignment" (formula "41") (term "1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "33"))
                                             (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_unsign_31,result_41,exc_37") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                             (branch "Post (unsign)"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "polySimp_addComm0" (formula "41") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                (rule "assignment" (formula "42") (term "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                (rule "applyEq" (formula "41") (term "0") (ifseqformula "29"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "41"))
                                                (rule "methodCallEmpty" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "methodCallEmpty" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "methodCallEmpty" (formula "47") (term "1"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "methodCallEmpty" (formula "46") (term "1"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "methodCallEmpty" (formula "45") (term "1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "methodCallEmpty" (formula "44") (term "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "methodCallEmpty" (formula "43") (term "1"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "methodCallEmpty" (formula "42") (term "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "42") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "applyEqRigid" (formula "25") (term "0,0,1") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "25") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "25") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "26") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                                (rule "applyEqRigid" (formula "46") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "1"))
                                                (rule "polySimp_sepNegMonomial" (formula "26") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                (rule "emptyModality" (formula "49") (term "1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notRight" (formula "49"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEqRigid" (formula "32") (term "0,1") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "32") (term "1"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                                (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "1"))
                                                (rule "polySimp_sepNegMonomial" (formula "32") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                                (rule "ifthenelse_split" (formula "37") (term "0"))
                                                (branch "in[3] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "38"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                   (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                   (rule "inEqSimp_homoInEq0" (formula "37"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                   (rule "add_literals" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "cut_direct" (formula "27") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "28"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "33"))
                                                      (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0"))
                                                      (rule "leq_literals" (formula "15"))
                                                      (rule "closeFalse" (formula "15"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_geqRight" (formula "47"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "closeFalse" (formula "19"))
                                                   )
                                                )
                                                (branch "in[3] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "50"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "38"))
                                                   (rule "cut_direct" (formula "28") (term "0"))
                                                   (branch "CUT: in.length ≥ 4 TRUE"
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "34"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1"))
                                                      (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "29"))
                                                      (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "28"))
                                                      (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0"))
                                                      (rule "leq_literals" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                   (branch "CUT: in.length ≥ 4 FALSE"
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_geqRight" (formula "47"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                )
                                             )
                                             (branch "Exceptional Post (unsign)"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "17"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0") (ifseqformula "13"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "notLeft" (formula "40"))
                                                (rule "close" (formula "43") (ifseqformula "42"))
                                             )
                                             (branch "Pre (unsign)"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "wellFormedAnonEQ" (formula "40") (ifseqformula "17"))
                                                (rule "wellFormedAnonEQ" (formula "40") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "16"))
                                                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                          )
                                          (branch "Exceptional Post (unsign)"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0") (ifseqformula "22"))
                                             (rule "translateJavaAddInt" (formula "38") (term "1,1,0,1"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "notLeft" (formula "38"))
                                             (rule "close" (formula "41") (ifseqformula "40"))
                                          )
                                          (branch "Pre (unsign)"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "wellFormedAnonEQ" (formula "39") (ifseqformula "22"))
                                             (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "21")))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                       )
                                       (branch "Exceptional Post (unsign)"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0") (ifseqformula "17"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0") (ifseqformula "13"))
                                          (rule "translateJavaAddInt" (formula "36") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "36"))
                                          (rule "close" (formula "39") (ifseqformula "38"))
                                       )
                                       (branch "Pre (unsign)"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "wellFormedAnonEQ" (formula "38") (ifseqformula "17"))
                                          (rule "wellFormedAnonEQ" (formula "38") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")))
                                          (rule "closeTrue" (formula "38"))
                                       )
                                    )
                                    (branch "Exceptional Post (unsign)"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "22"))
                                       (rule "translateJavaAddInt" (formula "34") (term "1,1,0,1"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "notLeft" (formula "34"))
                                       (rule "close" (formula "37") (ifseqformula "36"))
                                    )
                                    (branch "Pre (unsign)"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "22"))
                                       (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "21")))
                                       (rule "closeTrue" (formula "37"))
                                    )
                                 )
                                 (branch "Exceptional Post (unsign)"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,0") (ifseqformula "13"))
                                    (rule "translateJavaAddInt" (formula "32") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "32"))
                                    (rule "close" (formula "35") (ifseqformula "34"))
                                 )
                                 (branch "Pre (unsign)"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "wellFormedAnonEQ" (formula "36") (ifseqformula "17"))
                                    (rule "wellFormedAnonEQ" (formula "36") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")))
                                    (rule "closeTrue" (formula "36"))
                                 )
                              )
                              (branch "Exceptional Post (unsign)"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,0") (ifseqformula "17"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0") (ifseqformula "13"))
                                 (rule "translateJavaAddInt" (formula "30") (term "1,1,0,1"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "notLeft" (formula "30"))
                                 (rule "close" (formula "33") (ifseqformula "32"))
                              )
                              (branch "Pre (unsign)"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "wellFormedAnonEQ" (formula "35") (ifseqformula "17"))
                                 (rule "wellFormedAnonEQ" (formula "35") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")))
                                 (rule "closeTrue" (formula "35"))
                              )
                           )
                           (branch "Exceptional Post (unsign)"
                              (builtin "One Step Simplification" (formula "28"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "22"))
                              (rule "translateJavaAddInt" (formula "28") (term "1,1,0,1"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "close" (formula "31") (ifseqformula "30"))
                           )
                           (branch "Pre (unsign)"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "wellFormedAnonEQ" (formula "34") (ifseqformula "22"))
                              (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "5")))
                              (rule "closeTrue" (formula "34"))
                           )
                        )
                        (branch "Exceptional Post (unsign)"
                           (builtin "One Step Simplification" (formula "26"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "22"))
                           (rule "translateJavaAddInt" (formula "26") (term "1,1,0,1"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "27"))
                           (rule "andLeft" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "close" (formula "29") (ifseqformula "28"))
                        )
                        (branch "Pre (unsign)"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "wellFormedAnonEQ" (formula "33") (ifseqformula "22"))
                           (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "5")))
                           (rule "closeTrue" (formula "33"))
                        )
                     )
                     (branch "Exceptional Post (byteArrayToInt)"
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "5") (term "1,1"))
                        (rule "translateJavaMulInt" (formula "14") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "14") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "14") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "5") (term "1"))
                        (rule "translateJavaMulInt" (formula "14") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "14") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "14") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "14") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "14") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "14") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "14") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "18"))
                        (rule "eqSymm" (formula "23") (term "0,0,1"))
                        (rule "eqSymm" (formula "22") (term "0,0,1"))
                        (rule "eqSymm" (formula "20") (term "0,1"))
                        (rule "eqSymm" (formula "15") (term "0,1"))
                        (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_right" (formula "19") (term "1,1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
                        (rule "true_left" (formula "15"))
                        (rule "replace_known_right" (formula "18") (term "1,1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")))
                        (rule "true_left" (formula "18"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "polySimp_elimSub" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1"))
                        (rule "inEqSimp_ltRight" (formula "23"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                     (branch "Pre (byteArrayToInt)"
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "2")) (ifInst ""  (formula "16")))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "5") (term "1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "5") (term "1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "14"))
                        (rule "eqSymm" (formula "16") (term "0,0,1"))
                        (rule "eqSymm" (formula "15") (term "0,1"))
                        (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "polySimp_elimSub" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1"))
                        (rule "inEqSimp_ltRight" (formula "18"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "16"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "assignment" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                  )
                  (branch "Exceptional Post (byteArrayToInt)"
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "5") (term "1,1"))
                     (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "12") (term "1,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "12") (term "0,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "5") (term "1"))
                     (rule "translateJavaMulInt" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "12") (term "1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "12") (term "0,0,1,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,0,1,1"))
                     (rule "andLeft" (formula "12"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "8"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "eqSymm" (formula "18") (term "0,0,1"))
                     (rule "eqSymm" (formula "17") (term "0,0,1"))
                     (rule "eqSymm" (formula "15") (term "0,1"))
                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_right" (formula "15") (term "1,1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
                     (rule "true_left" (formula "14"))
                     (rule "polySimp_elimSub" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "1") (term "1"))
                     (rule "inEqSimp_ltRight" (formula "20"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch "Pre (byteArrayToInt)"
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_100110_1" (formula "5") (term "1,1"))
                     (rule "wellFormedAnonEQ" (formula "11") (term "0,1") (ifseqformula "8"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1") (ifseqformula "8"))
                     (rule "translateJavaAddInt" (formula "5") (term "1"))
                     (rule "eqSymm" (formula "12") (term "0,0,1"))
                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "11") (term "0,1,1") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")))
                     (rule "polySimp_elimSub" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "1") (term "1"))
                     (rule "inEqSimp_ltRight" (formula "15"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "12"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
            )
            (branch "result_0 > in.length - 4 FALSE"
               (rule "blockEmpty" (formula "13") (term "1") (userinteraction))
               (rule "cut" (inst "cutFormula=  verif.utils.MessageTools::byteArrayToInt(heapAfter_byteArrayToInt,
                                           in)
= verif.utils.MessageTools::byteArrayToInt(heap, in)") (userinteraction))
               (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt = verif.utils.MessageTools.byteArrayToInt(in) TRUE"
                  (rule "translateJavaAddInt" (formula "14") (term "3,0,0,0,0,0,1"))
                  (rule "translateJavaAddInt" (formula "5") (term "1"))
                  (rule "translateJavaSubInt" (formula "14") (term "1,0,1,0,0,0,1"))
                  (rule "translateJavaSubInt" (formula "14") (term "0,1,0,1,0,0,0,1"))
                  (rule "eqSymm" (formula "10"))
                  (rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "14") (term "0,1,0,0,0,1"))
                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_elimSub" (formula "13") (term "1"))
                  (rule "mul_literals" (formula "13") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "0,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0,1"))
                  (rule "polySimp_homoEq" (formula "14") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "13") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltRight" (formula "12"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_gtRight" (formula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "14") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,0,1,0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "ifSplit" (formula "15"))
                  (branch "if x true"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x false"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "m2"))
                     (rule "arrayCreation" (formula "15") (term "1") (inst "#v0=x_arr"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "dim0"))
                     (rule "compound_subtraction_1" (formula "15") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_54"))
                     (rule "compound_subtraction_1" (formula "15") (term "1") (inst "#v=x_55"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_55"))
                     (rule "assignment_read_length" (formula "15") (term "1"))
                     (branch "Normal Execution (_in != null)"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
                        (rule "false_right" (formula "15"))
                        (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                        (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0"))
                        (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_56"))
                        (rule "less_than_comparison_simple" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "15") (term "0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
                        (rule "leq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifSplit" (formula "15"))
                        (branch "if x_56 true"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_56 false"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=x_arr_1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_1"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "length_1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "newObject"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=x_arr_2"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_2"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "length_2"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "allocateInstanceWithLength" (formula "15"))
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "12"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "16"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "methodCall" (formula "21") (term "1"))
                           (branch "Normal Execution (newObject != null )"
                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
                              (rule "false_right" (formula "21"))
                              (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "assignment_write_attribute_this" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "methodCallWithinClass" (formula "21") (term "1"))
                              (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "arrayInitialisation" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
                              (rule "methodCallEmpty" (formula "21") (term "1"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "methodCallReturnIgnoreResult" (formula "21") (term "1"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "methodCallReturn" (formula "21") (term "1"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "methodCallEmpty" (formula "21") (term "1"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "for_to_while" (formula "21") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "i"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "Loop Invariant" (formula "21") (newnames "variant,b_19,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
                              (branch "Invariant Initially Valid"
                                 (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
                                 (rule "wellFormedStorePrimitive" (formula "21") (term "1"))
                                 (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "0,1,1,0,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "21") (term "0,0,2,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "21") (term "0,1,1,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "eqSymm" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,2,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0,0"))
                                 (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "21") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "applyEq" (formula "19") (term "1,2,1,0,0,1,0,0") (ifseqformula "2"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,2,1,0,0,1,0,0"))
                                 (rule "applyEq" (formula "19") (term "1,2,1,0,1") (ifseqformula "2"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,2,1,0,1"))
                                 (rule "applyEq" (formula "19") (term "1,2,1,0,1,1,0,0") (ifseqformula "2"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,1,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,2,1,0,1,1,0,0"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "14"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "wellFormedMemsetArrayPrimitive" (formula "18") (term "1"))
                                 (rule "wellFormedStorePrimitive" (formula "18") (term "1"))
                                 (rule "wellFormedStorePrimitive" (formula "18") (term "1"))
                                 (rule "wellFormedStorePrimitive" (formula "18") (term "1"))
                                 (rule "wellFormedCreate" (formula "18") (term "1"))
                                 (rule "wellFormedAnonEQ" (formula "18") (term "1") (ifseqformula "11"))
                                 (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "10")))
                                 (rule "allRight" (formula "18") (inst "sk=j_1"))
                                 (rule "impRight" (formula "18"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,2,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "Body Preserves Invariant"
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")) (ifInst ""  (formula "21")))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,0,2,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "18") (term "1,1,0"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "1,1,0,0,0,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "1,1,0,0,0,0,0,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "23") (term "0,0,2,1,1,0,1,0,0,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,0,1,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "1,1,0,0,0,0,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,0,0,1,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,1,0,0,0,0,0,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "23") (term "0,2,1,1,0,1,0,0,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,0,0,1,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,1,0,0,0,0,1,1,0,1,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,0,1,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,1,1,0,1,1"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "impRight" (formula "24"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "eqSymm" (formula "23") (term "1,0"))
                                 (rule "eqSymm" (formula "28") (term "1,0,1,0,0,1,1,0,1"))
                                 (rule "eqSymm" (formula "28") (term "1,0,0,1,0,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,1,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1"))
                                 (rule "mul_literals" (formula "20") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,0,1,1,1,0,1"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,2,0,1,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,2,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,2,0,1,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "1,1,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,1,1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "variableDeclarationAssign" (formula "1") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_19_2"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "exc_1"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "thrownExc"))
                                 (rule "blockThrow" (formula "27") (term "1,0,0,1"))
                                 (rule "blockThrow" (formula "27") (term "1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,0,1,1,0,0,0,0,0,0,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,1,0,1"))
                                 (rule "boxToDiamond" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "26") (term "0,1,0,0,1,1,0,1"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0,0,1,1,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0,0,1,1,0,1"))
                                 (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_60"))
                                 (rule "assignment" (formula "21") (term "1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_61"))
                                 (rule "compound_subtraction_1" (formula "21") (term "1") (inst "#v=x_62"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_62"))
                                 (rule "compound_subtraction_1" (formula "21") (term "1") (inst "#v=x_63"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_63"))
                                 (rule "assignment_read_length" (formula "21") (term "1"))
                                 (branch "Normal Execution (_in != null)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")))
                                    (rule "false_right" (formula "21"))
                                    (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                    (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                    (rule "less_than_comparison_simple" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "emptyModality" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notRight" (formula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_64"))
                                    (rule "compound_less_than_comparison_2" (formula "25") (term "1") (inst "#v1=x_66") (inst "#v0=x_65"))
                                    (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                    (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_65"))
                                    (rule "assignment" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                    (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_66"))
                                    (rule "compound_subtraction_1" (formula "25") (term "1") (inst "#v=x_67"))
                                    (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                    (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_67"))
                                    (rule "compound_subtraction_1" (formula "25") (term "1") (inst "#v=x_68"))
                                    (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                    (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_68"))
                                    (rule "assignment_read_length" (formula "25") (term "1"))
                                    (branch "Normal Execution (_in != null)"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                       (rule "false_right" (formula "25"))
                                       (rule "assignmentSubtractionInt" (formula "25") (term "1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                                       (rule "assignmentSubtractionInt" (formula "25") (term "1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                       (rule "less_than_comparison_simple" (formula "25") (term "1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "ifSplit" (formula "25"))
                                       (branch "if x_64 true"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "eval_order_array_access3" (formula "25") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_arr_3"))
                                          (rule "assignment" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_69"))
                                          (rule "assignment" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=x_70"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_70"))
                                          (rule "compound_assignment_5_nonsimple" (formula "25") (term "1"))
                                          (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x_71"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_71"))
                                          (rule "compound_less_equal_than_comparison_1" (formula "25") (term "1") (inst "#v0=x_72"))
                                          (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_72"))
                                          (rule "eval_order_access2" (formula "25") (term "1") (inst "#v0=x_arr_4"))
                                          (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_arr_4"))
                                          (rule "remove_parentheses_right" (formula "25") (term "1"))
                                          (rule "assignment" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "assignment_read_length" (formula "25") (term "1"))
                                          (branch "Normal Execution (x_arr_4 != null)"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                             (rule "false_right" (formula "25"))
                                             (rule "less_equal_than_comparison_simple" (formula "25") (term "1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "ifElseSplit" (formula "25"))
                                             (branch "if x_71 true"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifEnterThen" (formula "26") (term "1"))
                                                (rule "assignment" (formula "26") (term "1"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "blockThrow" (formula "26") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "tryCatchThrow" (formula "26") (term "1,0,0,1"))
                                                (rule "ifElseUnfold" (formula "26") (term "1,0,0,1") (inst "#boolv=x"))
                                                (rule "variableDeclaration" (formula "26") (term "1,0,0,1") (newnames "x_77"))
                                                (rule "equality_comparison_simple" (formula "26") (term "1,0,0,1"))
                                                (rule "throwUnfold" (formula "26") (term "1") (inst "#v0=a"))
                                                (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                                (rule "variableDeclaration" (formula "26") (term "1") (newnames "a"))
                                                (rule "instanceCreationAssignment" (formula "26") (term "1") (inst "#v0=a_1"))
                                                (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                                (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_1"))
                                                (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "26") (term "1") (inst "#v0=a_2"))
                                                (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_2"))
                                                (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "variableDeclaration" (formula "26") (term "1") (newnames "__NEW__"))
                                                (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "26") (term "1") (inst "#v0=a_3"))
                                                (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_3"))
                                                (rule "allocateInstance" (formula "26"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                                                (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                                                (rule "blockEmpty" (formula "29") (term "1"))
                                                (rule "assignment" (formula "29") (term "1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "wellFormedMemsetArrayPrimitive" (formula "1") (term "0"))
                                                (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
                                                (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
                                                (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
                                                (rule "wellFormedCreate" (formula "1") (term "0"))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "23"))
                                                (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "26"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "23"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "orRight" (formula "23"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "25"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallWithinClass" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "blockEmpty" (formula "31") (term "1"))
                                                (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "castDel" (formula "31") (term "1,0,1,0"))
                                                (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "castDel" (formula "31") (term "1,0,1,0"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "blockEmpty" (formula "31") (term "1"))
                                                (rule "methodCallReturnIgnoreResult" (formula "31") (term "1"))
                                                (rule "methodCallReturn" (formula "31") (term "1"))
                                                (rule "assignment" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "blockEmpty" (formula "31") (term "1"))
                                                (rule "assignment" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallSuper" (formula "31") (term "1"))
                                                (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "blockEmpty" (formula "31") (term "1"))
                                                (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "castDel" (formula "31") (term "1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "castDel" (formula "31") (term "1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "methodCallEmpty" (formula "31") (term "1"))
                                                (rule "blockEmpty" (formula "31") (term "1"))
                                                (rule "assignment_write_attribute" (formula "31") (term "1"))
                                                (branch "Normal Execution (a_1 != null)"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                                                   (rule "false_right" (formula "31"))
                                                   (rule "assignment" (formula "31") (term "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "tryCatchThrow" (formula "31") (term "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "ifElseUnfold" (formula "31") (term "1") (inst "#boolv=x"))
                                                   (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_78"))
                                                   (rule "equality_comparison_simple" (formula "31") (term "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "ifElseSplit" (formula "31"))
                                                   (branch "if x_78 true"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "if x_78 false"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifElseSplit" (formula "31"))
                                                      (branch "if a instanceof java.lang.Throwable true"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "variableDeclaration" (formula "31") (term "1") (newnames "e"))
                                                         (rule "reference_type_cast" (formula "31") (term "1"))
                                                         (branch "Normal Execution (a instanceof java.lang.Throwable)"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "assignment" (formula "31") (term "1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "assignment" (formula "31") (term "1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "methodCallEmpty" (formula "31") (term "1"))
                                                            (rule "emptyModality" (formula "31") (term "1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "ifElseSplit" (formula "31"))
                                                            (branch "if x_77 true"
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_77 false"
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "ifElseSplit" (formula "31"))
                                                               (branch "if thrownExc instanceof Exception true"
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "variableDeclaration" (formula "31") (term "1") (newnames "e_1"))
                                                                  (rule "reference_type_cast" (formula "31") (term "1"))
                                                                  (branch "Normal Execution (thrownExc instanceof Exception)"
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "returnUnfold" (formula "31") (term "1") (inst "#v0=x_arr"))
                                                                     (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_arr_6"))
                                                                     (rule "arrayCreation" (formula "31") (term "1") (inst "#v0=x_arr_7"))
                                                                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_arr_7"))
                                                                     (rule "arrayCreation" (formula "31") (term "1") (inst "#v0=x_arr_8"))
                                                                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_arr_8"))
                                                                     (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "dim0_1"))
                                                                     (rule "assignment" (formula "31") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "ifUnfold" (formula "31") (term "1") (inst "#boolv=x"))
                                                                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_79"))
                                                                     (rule "less_than_comparison_simple" (formula "31") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "less_literals" (formula "31") (term "0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "ifSplit" (formula "31"))
                                                                     (branch "if x_79 true"
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "if x_79 false"
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "31") (term "1") (inst "#v0=x_arr_9"))
                                                                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_arr_9"))
                                                                        (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "length_3"))
                                                                        (rule "assignment" (formula "31") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<createArray>_0,savedHeapBefore_<createArray>_0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "newObject_1"))
                                                                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "31") (term "1") (inst "#v0=x_arr_10"))
                                                                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_arr_10"))
                                                                        (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                                                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "length_4"))
                                                                        (rule "assignment" (formula "31") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "allocateInstanceWithLength" (formula "31"))
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                                                                        (rule "blockEmpty" (formula "34") (term "1"))
                                                                        (rule "assignment" (formula "34") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                                                        (rule "wellFormedStoreObject" (formula "1") (term "0,0"))
                                                                        (rule "typeEqDerived2" (formula "1") (term "0,1,1,0,0") (ifseqformula "20"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedAnon" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "wellFormedMemsetArrayPrimitive" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                                                        (rule "wellFormedAnonEQ" (formula "1") (term "0,0") (ifseqformula "19"))
                                                                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "18"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Object_created__3"))
                                                                        (rule "simplifySelectOfCreate" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                        (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "26"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "ifEqualsTRUE" (formula "25"))
                                                                        (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "25"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Object_created__4"))
                                                                        (rule "simplifySelectOfMemset" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfCreate" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "26"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0") (ifseqformula "20"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "hideAuxiliaryEqConcrete2" (formula "30"))
                                                                        (rule "hideAuxiliaryEqConcrete2" (formula "28"))
                                                                        (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                                        (rule "methodCall" (formula "39") (term "1"))
                                                                        (branch "Normal Execution (newObject_1 != null )"
                                                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "30")))
                                                                           (rule "false_right" (formula "39"))
                                                                           (rule "methodBodyExpand" (formula "39") (term "1") (newnames "heapBefore_<createArrayHelper>_0,savedHeapBefore_<createArrayHelper>_0"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "assignment_write_attribute_this" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "methodCallWithinClass" (formula "39") (term "1"))
                                                                           (rule "methodBodyExpand" (formula "39") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "arrayInitialisation" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "polySimp_elimSub" (formula "39") (term "2,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "39") (term "1,2,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "39") (term "2,1,0,1,0"))
                                                                           (rule "methodCallEmpty" (formula "39") (term "1"))
                                                                           (rule "blockEmpty" (formula "39") (term "1"))
                                                                           (rule "assignment_write_attribute_this" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "methodCallReturnIgnoreResult" (formula "39") (term "1"))
                                                                           (rule "blockEmpty" (formula "39") (term "1"))
                                                                           (rule "methodCallReturn" (formula "39") (term "1"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "methodCallEmpty" (formula "39") (term "1"))
                                                                           (rule "blockEmpty" (formula "39") (term "1"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "blockEmpty" (formula "39") (term "1"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "blockEmpty" (formula "39") (term "1"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "methodCallReturn" (formula "39") (term "1"))
                                                                           (rule "assignment" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "methodCallEmpty" (formula "39") (term "1"))
                                                                           (rule "tryEmpty" (formula "39") (term "1"))
                                                                           (rule "emptyModality" (formula "39") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "27")) (ifInst ""  (formula "30")))
                                                                           (rule "eqSymm" (formula "39") (term "1,0,0,1"))
                                                                           (rule "applyEq" (formula "39") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "8"))
                                                                           (rule "polySimp_addAssoc" (formula "39") (term "2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "39") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
                                                                           (rule "add_literals" (formula "39") (term "0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1"))
                                                                           (rule "applyEq" (formula "39") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "polySimp_addAssoc" (formula "39") (term "2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "39") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "39") (term "0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                                           (rule "qeq_literals" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "11"))
                                                                           (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                                           (rule "add_zero_right" (formula "38") (term "2,1,0,0,0,1,0,0,1"))
                                                                           (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,0,0") (ifseqformula "1"))
                                                                           (rule "add_zero_right" (formula "38") (term "2,1,0,0,0,0,0"))
                                                                           (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0"))
                                                                           (rule "applyEq" (formula "38") (term "1,2,1,0,0,1,3,0,0,0") (ifseqformula "1"))
                                                                           (rule "add_zero_right" (formula "38") (term "2,1,0,0,1,3,0,0,0"))
                                                                           (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "24") (term "0,0,2,1,0,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,1,0") (ifseqformula "1"))
                                                                           (rule "add_zero_right" (formula "38") (term "2,1,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "21"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "7"))
                                                                           (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "36") (term "0,1,1,1,0") (ifseqformula "1"))
                                                                           (rule "times_zero_2" (formula "36") (term "1,1,1,0"))
                                                                           (rule "add_zero_right" (formula "36") (term "1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "4"))
                                                                           (rule "andLeft" (formula "5"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0"))
                                                                           (rule "leq_literals" (formula "5"))
                                                                           (rule "closeFalse" (formula "5"))
                                                                        )
                                                                        (branch "Null Reference (newObject_1 = null)"
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "ClassCastException (!(thrownExc instanceof Exception))"
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                                                                     (rule "closeTrue" (formula "31"))
                                                                  )
                                                               )
                                                               (branch "if thrownExc instanceof Exception false"
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "closeTrue" (formula "31"))
                                                         )
                                                      )
                                                      (branch "if a instanceof java.lang.Throwable false"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (a_1 = null)"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "if x_71 false"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "less_than_comparison_simple" (formula "26") (term "1"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                                (rule "blockEmpty" (formula "26") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,1,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,1,0") (ifseqformula "20"))
                                                (rule "qeq_literals" (formula "26") (term "0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "ifSplit" (formula "26"))
                                                (branch "if x_70 true"
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_70 false"
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                                   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_73"))
                                                   (rule "eval_order_array_access5" (formula "26") (term "1") (inst "#v1=x_74") (inst "#ar1=x_arr_4"))
                                                   (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                                   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr_5"))
                                                   (rule "assignment" (formula "26") (term "1"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                                   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_74"))
                                                   (rule "compound_addition_1" (formula "26") (term "1") (inst "#v=x_75"))
                                                   (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                                   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_75"))
                                                   (rule "assignmentAdditionInt" (formula "26") (term "1"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                                                   (rule "assignmentAdditionInt" (formula "26") (term "1"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                                                   (rule "assignment_array2" (formula "26") (term "1"))
                                                   (branch "Normal Execution (x_arr_5 != null)"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                                                      (rule "orRight" (formula "26"))
                                                      (rule "inEqSimp_ltRight" (formula "27"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "27"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_0"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "assignment_to_primitive_array_component" (formula "29") (term "1"))
                                                      (branch "Normal Execution (x_arr_3 != null)"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "24")))
                                                         (rule "inEqSimp_ltToLeq" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "8"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                                         (rule "times_zero_2" (formula "1") (term "1,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                                         (rule "simplifySelectOfMemset" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfCreate" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                                         (rule "castDel" (formula "2") (term "1,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "15")))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011000010101010110_9" (formula "1") (term "2,0"))
                                                         (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")) (ifInst ""  (formula "15")))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011000010101010110_11" (formula "2") (term "2,0"))
                                                         (rule "commute_or" (formula "3") (term "0,0"))
                                                         (rule "postincrement" (formula "30") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "30") (term "1") (inst "#v=x"))
                                                         (rule "variableDeclarationAssign" (formula "30") (term "1"))
                                                         (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_76"))
                                                         (rule "remove_parentheses_right" (formula "30") (term "1"))
                                                         (rule "assignmentAdditionInt" (formula "30") (term "1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "translateJavaAddInt" (formula "30") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "30") (term "1"))
                                                         (rule "assignment" (formula "30") (term "1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "tryEmpty" (formula "30") (term "1"))
                                                         (rule "methodCallEmpty" (formula "30") (term "1"))
                                                         (rule "emptyModality" (formula "30") (term "1"))
                                                         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "8")) (ifInst ""  (formula "10")))
                                                         (rule "eqSymm" (formula "30") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,1,1,0,0,0"))
                                                         (rule "replace_known_left" (formula "30") (term "1,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                                         (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,1,0,0,0,1,0"))
                                                         (rule "precOfInt" (formula "30") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "30") (term "0,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,1,1"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,1,1"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,1,1"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,1,1"))
                                                         (rule "add_zero_right" (formula "30") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,1"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,1,1"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,1,1"))
                                                         (rule "add_zero_right" (formula "30") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1,1"))
                                                         (rule "add_literals" (formula "30") (term "1,0,1,1"))
                                                         (rule "times_zero_1" (formula "30") (term "0,1,1"))
                                                         (rule "leq_literals" (formula "30") (term "1,1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                         (rule "times_zero_2" (formula "30") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "30") (term "0,1"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "8"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "2,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,2,1,0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,2,1,0,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "30") (term "1,2,1,0,0,0,1,1,0,0,0,1,0") (ifseqformula "8"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "2,1,0,0,0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,2,1,0,0,0,1,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,2,1,0,0,0,1,1,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "30") (term "1,2,1,0,0,0,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "2,1,0,0,0,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,2,1,0,0,0,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,2,1,0,0,0,0,0,1,0,0,1,0"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0,0,1,0,1,0,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,0,0,0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,0,0,0,0,0,1,0,1,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,2,1,0,0,0,0,0,1,0,1,0,0"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor3b" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                         (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,2,1,0,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "15") (term "0") (ifseqformula "21"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "11") (term "1") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,1,1,0,1,0,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,0,1,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,2,1,0,0,0,0,1,1,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,2,1,0,0,0,0,1,1,0,1,0,0"))
                                                         (rule "applyEq" (formula "27") (term "1,2,1,0,0,1,1,0,0,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,1,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,2,1,0,0,1,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,2,1,0,0,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,1,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1"))
                                                         (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "19"))
                                                         (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andRight" (formula "25"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "25") (inst "sk=j_0"))
                                                            (rule "orRight" (formula "25"))
                                                            (rule "orRight" (formula "25"))
                                                            (rule "eqSymm" (formula "27"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,2,1"))
                                                            (rule "inEqSimp_leqRight" (formula "25"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "26"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_3"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "28"))
                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_5"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "4") (term "0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet0011000010101010110_3" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0011000010101010110_12" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_24"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "18")))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "x_arr_2 = in ∧ in.length ≥ 9 + i_0 + result_0 * 2 TRUE"
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "8"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "25") (term "0,1,0,0,0,0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "25") (term "1,0,0,0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "25") (term "0,1,0,1,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "25") (term "0,1,0,0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "6"))
                                                               (rule "close" (formula "26") (ifseqformula "16"))
                                                            )
                                                            (branch "x_arr_2 = in ∧ in.length ≥ 9 + i_0 + result_0 * 2 FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "x_arr_2 = in TRUE"
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_geqRight" (formula "25"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "7"))
                                                                  (rule "close" (formula "26") (ifseqformula "16"))
                                                               )
                                                               (branch "x_arr_2 = in FALSE"
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "24"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "false_right" (formula "23"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "j_0 = i_0 TRUE"
                                                                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "0"))
                                                                     (rule "qeq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "25") (term "1,0,0,2,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "closeTrue" (formula "25"))
                                                                  )
                                                                  (branch "j_0 = i_0 FALSE"
                                                                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "eqSymm" (formula "27"))
                                                                     (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "21"))
                                                                     (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "21") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "false_right" (formula "21"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "mul_literals" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
                                                                     (rule "leq_literals" (formula "20") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "allLeft" (formula "20") (inst "t=j_0"))
                                                                     (rule "replaceKnownSelect_taclet00011000010101010110_14" (formula "20") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00011000010101010110_15" (formula "20") (term "1,1"))
                                                                     (rule "polySimp_addComm1" (formula "20") (term "0,2,0,1"))
                                                                     (rule "replaceKnownSelect_taclet00011000010101010110_17" (formula "20") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1100011000010101010110_26" (formula "20") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1100011000010101010110_28" (formula "20") (term "0,1"))
                                                                     (rule "eqSymm" (formula "20") (term "1"))
                                                                     (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "27"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "20") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                                                     (rule "andLeft" (formula "20"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                                     (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "20") (term "1,0"))
                                                                     (rule "add_literals" (formula "20") (term "0"))
                                                                     (rule "leq_literals" (formula "20"))
                                                                     (rule "closeFalse" (formula "20"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "25") (inst "sk=f_0"))
                                                            (rule "allRight" (formula "25") (inst "sk=o_0"))
                                                            (rule "orRight" (formula "25"))
                                                            (rule "orRight" (formula "25"))
                                                            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_0"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "28"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "Null Reference (x_arr_3 = null)"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Index Out of Bounds (x_arr_3 != null, but x_69 Out of Bounds!)"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "23") (term "0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "closeFalse" (formula "23"))
                                                      )
                                                   )
                                                   (branch "Null Reference (x_arr_5 = null)"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (x_arr_5 != null, but x_74 Out of Bounds!)"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "8") (term "0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "closeFalse" (formula "8"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Null Reference (x_arr_4 = null)"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "if x_64 false"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Null Reference (_in = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Null Reference (_in = null)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Use Case"
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")) (ifInst ""  (formula "21")))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaSubInt" (formula "18") (term "1,1,0"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,0,2,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0,0"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "eqSymm" (formula "22") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1"))
                                 (rule "mul_literals" (formula "20") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1"))
                                 (rule "mul_literals" (formula "19") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                 (rule "variableDeclaration" (formula "26") (term "1") (newnames "b_19_1"))
                                 (rule "blockEmpty" (formula "26") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,1"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "compound_less_than_comparison_2" (formula "25") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                                 (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_57"))
                                 (rule "assignment" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_1"))
                                 (rule "compound_subtraction_1" (formula "25") (term "1") (inst "#v=x_58"))
                                 (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_58"))
                                 (rule "compound_subtraction_1" (formula "25") (term "1") (inst "#v=x_59"))
                                 (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_59"))
                                 (rule "assignment_read_length" (formula "25") (term "1"))
                                 (branch "Normal Execution (_in != null)"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                    (rule "false_right" (formula "25"))
                                    (rule "assignmentSubtractionInt" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                                    (rule "assignmentSubtractionInt" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                    (rule "less_than_comparison_simple" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "25") (term "1"))
                                    (rule "emptyModality" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "impRight" (formula "25"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                    (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "12") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "tryReturn" (formula "28") (term "1"))
                                    (rule "methodCallReturn" (formula "28") (term "1"))
                                    (rule "assignment" (formula "28") (term "1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "methodCallEmpty" (formula "28") (term "1"))
                                    (rule "tryEmpty" (formula "28") (term "1"))
                                    (rule "emptyModality" (formula "28") (term "1"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "24")) (ifInst ""  (formula "26")))
                                    (rule "andRight" (formula "28") (userinteraction))
                                    (branch
                                       (rule "cut" (inst "cutFormula=  verif.utils.MessageTools::byteArrayToInt(heap, in)
= verif.utils.MessageTools::byteArrayToInt(anon(store(memset(store(store(store(create(heapAfter_byteArrayToInt,
                                                                                      x_arr_2),
                                                                               x_arr_2,
                                                                               java.lang.Object::<transient>,
                                                                               Z(0(#))),
                                                                         x_arr_2,
                                                                         java.lang.Object::<transactionConditionallyUpdated>,
                                                                         FALSE),
                                                                   x_arr_2,
                                                                   java.lang.Object::<initialized>,
                                                                   FALSE),
                                                             arrayRange(x_arr_2,
                                                                        Z(0(#)),
                                                                        add(Z(neglit(1(#))),
                                                                            length(x_arr_2))),
                                                             Z(0(#))),
                                                      x_arr_2,
                                                      java.lang.Object::<initialized>,
                                                      TRUE),
                                                allFields(x_arr_2),
                                                anon_heap_LOOP<<anonHeapFunction>>),
                                           in)") (userinteraction))
                                       (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) = verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt[create(x_arr_2)] [x_arr_2.<transient> := 0] [x_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_2, 0, -1 + x_arr_2.length), 0)] [x_arr_2.<initialized> := TRUE] [anon(x_arr_2.*)] TRUE"
                                          (rule "andRight" (formula "29") (userinteraction))
                                          (branch "Case 1"
                                             (rule "Contract_axiom_for_isIdentical_in_MessageTools" (formula "29") (term "0") (inst "i=i_2") (userinteraction))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "28")) (ifInst ""  (formula "30")))
                                             (rule "true_left" (formula "1"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "19"))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,2,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "14") (term "0,0"))
                                             (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,1,3,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,0,1,3,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,0,0,0,1,3,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,2,1,0,0,0,1,3,0"))
                                             (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "1,0"))
                                             (rule "times_zero_1" (formula "22") (term "0"))
                                             (rule "leq_literals" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "11") (term "0,1"))
                                             (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,2,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,2,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,2,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,2,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,1,3,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,1,3,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,2,1,0,0,0,1,3,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "27") (term "2,1,0,0,0,1,3,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,2,1,0,0,0,1,3,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,2,1,0,0,0,1,3,0"))
                                             (rule "add_zero_right" (formula "27") (term "2,1,0,0,0,1,3,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,1,3,0"))
                                             (rule "add_literals" (formula "27") (term "0,2,1,0,0,0,1,3,0"))
                                             (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,2,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,2,1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "11"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "20"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "18"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "1,1,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,1"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "0,1"))
                                             (rule "add_zero_left" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "1") (term "1") (ifseqformula "6"))
                                             (rule "applyEq" (formula "24") (term "1,3,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0"))
                                             (rule "inEqSimp_invertInEq0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "times_zero_2" (formula "4") (term "1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "Definition_axiom_for_isIdentical_in_verif_utils_MessageTools" (formula "22") (term "0") (inst "i=i_2"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0"))
                                             (rule "allRight" (formula "22") (inst "sk=i_2_8"))
                                             (rule "impRight" (formula "22"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,2,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_594"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_595"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__32"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_596"))
                                             (rule "simplifySelectOfMemset" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                             (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__33"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_597"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "13")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "allLeft" (formula "21") (inst "t=i_2_8"))
                                             (rule "replaceKnownSelect_taclet000020101010110_0" (formula "21") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000020101010110_1" (formula "21") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,2,0,1"))
                                             (rule "replaceKnownSelect_taclet000020101010110_2" (formula "21") (term "0,1"))
                                             (rule "eqSymm" (formula "21") (term "1"))
                                             (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "21") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "21"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch "Case 2"
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,2,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "22"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "12") (term "0,1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0"))
                                             (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,2,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,2,1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "22") (term "0,2,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,2,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,2,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,2,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,2,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,2,1,0,0,0,0"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq0" (formula "10"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "18"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "1,1,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,1"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "0,1"))
                                             (rule "add_zero_left" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "1") (term "1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "24") (term "1,0,1") (ifseqformula "18"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1"))
                                             (rule "apply_eq_monomials" (formula "24") (term "1,1") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "24") (term "1,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,1,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "24") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "24") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1"))
                                             (rule "add_literals" (formula "24") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "0,1"))
                                             (rule "add_zero_left" (formula "24") (term "1"))
                                             (rule "close" (formula "24") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: verif.utils.MessageTools.byteArrayToInt(in) = verif.utils.MessageTools.byteArrayToInt(in) @heapAfter_byteArrayToInt[create(x_arr_2)] [x_arr_2.<transient> := 0] [x_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_2, 0, -1 + x_arr_2.length), 0)] [x_arr_2.<initialized> := TRUE] [anon(x_arr_2.*)] FALSE"
                                          (rule "hide_left" (formula "23") (userinteraction))
                                          (rule "hide_right" (formula "28") (userinteraction))
                                          (builtin "Evaluate Query" (formula "23") (term "0") (newnames "b_26,callee,queryResult_6,res_byteArrayToInt_4"))
                                          (builtin "Evaluate Query" (formula "24") (term "1") (newnames "b_27,callee,queryResult_6,res_byteArrayToInt_5"))
                                          (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "25") (term "0") (userinteraction))
                                          (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(anon(store(memset(store(store(store(create(heapAfter_byteArrayToInt,x_arr_2),x_arr_2,java_lang_Object__transient_,Z(0(#))),x_arr_2,java_lang_Object__transactionConditionallyUpdated_,FALSE),x_arr_2,java_lang_Object__initialized_,FALSE),arrayRange(x_arr_2,Z(0(#)),add(Z(neglit(1(#))),length(x_arr_2))),Z(0(#))),x_arr_2,java_lang_Object__initialized_,TRUE),allFields(x_arr_2),anon_heap_LOOP__anonHeapFunction__),in)_10020101010110_3" (formula "25") (term "1") (userinteraction))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "variableDeclaration" (formula "24") (term "1") (newnames "queryResult_6") (userinteraction))
                                          (rule "variableDeclaration" (formula "23") (term "1") (newnames "queryResult_6_1") (userinteraction))
                                          (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_byteArrayToInt_1,result_14,exc_16,heapAfter_byteArrayToInt_5,anon_heap_byteArrayToInt_5") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
                                          (branch "Post (byteArrayToInt)"
                                             (rule "assignment" (formula "25") (term "1,1") (userinteraction))
                                             (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_byteArrayToInt_2,result_15,exc_17,heapAfter_byteArrayToInt_6,anon_heap_byteArrayToInt_6") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
                                             (branch "Post (byteArrayToInt)"
                                                (builtin "One Step Simplification" (formula "24"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "Evaluate Query" (formula "26") (term "1,1,0,1,1") (newnames "b_28,callee,queryResult_7,res_unsign_19"))
                                                (builtin "Evaluate Query" (formula "27") (term "1,1,0,1,0,1,1") (newnames "b_29,callee,queryResult_7,res_unsign_20"))
                                                (builtin "Evaluate Query" (formula "28") (term "1,1,0,0,1,0,1,1") (newnames "b_30,callee,queryResult_7,res_unsign_21"))
                                                (builtin "Evaluate Query" (formula "29") (term "1,0,0,0,1,0,1,1") (newnames "b_31,callee,queryResult_7,res_unsign_22"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_6,int_select(heapAfter_byteArrayToInt_6,in,arr(Z(3(#)))))_0010020101010110_4" (formula "30") (term "1,1,0,1,1") (userinteraction))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_6,int_select(heapAfter_byteArrayToInt_6,in,arr(Z(2(#)))))_0010020101010110_5" (formula "30") (term "1,1,0,1,0,1,1") (userinteraction))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_6,int_select(heapAfter_byteArrayToInt_6,in,arr(Z(1(#)))))_0010020101010110_6" (formula "30") (term "1,1,0,0,1,0,1,1") (userinteraction))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_6,int_select(heapAfter_byteArrayToInt_6,in,arr(Z(0(#)))))_0010020101010110_7" (formula "30") (term "1,0,0,0,1,0,1,1") (userinteraction))
                                                (builtin "Evaluate Query" (formula "28") (term "1,0,0,0,1,0,1,1") (newnames "b_32,callee,queryResult_7,res_unsign_23"))
                                                (builtin "Evaluate Query" (formula "29") (term "1,1,0,0,1,0,1,1") (newnames "b_33,callee,queryResult_7,res_unsign_24"))
                                                (builtin "Evaluate Query" (formula "30") (term "1,1,0,1,0,1,1") (newnames "b_34,callee,queryResult_7,res_unsign_25"))
                                                (builtin "Evaluate Query" (formula "31") (term "1,1,0,1,1") (newnames "b_35,callee,queryResult_7,res_unsign_26"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_5,int_select(heapAfter_byteArrayToInt_5,in,arr(Z(0(#)))))_0010020101010110_8" (formula "32") (term "1,0,0,0,1,0,1,1") (userinteraction))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_5,int_select(heapAfter_byteArrayToInt_5,in,arr(Z(1(#)))))_0010020101010110_9" (formula "32") (term "1,1,0,0,1,0,1,1") (userinteraction))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_5,int_select(heapAfter_byteArrayToInt_5,in,arr(Z(2(#)))))_0010020101010110_10" (formula "32") (term "1,1,0,1,0,1,1") (userinteraction))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_5,int_select(heapAfter_byteArrayToInt_5,in,arr(Z(3(#)))))_0010020101010110_11" (formula "32") (term "1,1,0,1,1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "19") (term "0"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "15") (term "1"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "22") (term "0"))
                                                (rule "translateJavaAddInt" (formula "34") (term "1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "32") (term "1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "34") (term "1,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "34") (term "1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "34") (term "0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "32") (term "1,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "32") (term "1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "32") (term "0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "34") (term "0,1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "34") (term "0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "32") (term "0,1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "32") (term "0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "34") (term "0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "32") (term "0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "34") (term "0,0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "32") (term "0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "34") (term "0,0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "32") (term "0,0,0,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,1,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "34") (term "0,0,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "32") (term "0,0,0,0,1,0,1,1"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "eqSymm" (formula "40") (term "0,0,1"))
                                                (rule "eqSymm" (formula "39") (term "0,0,1"))
                                                (rule "eqSymm" (formula "38") (term "0,0,1"))
                                                (rule "eqSymm" (formula "37") (term "0,0,1"))
                                                (rule "eqSymm" (formula "36") (term "0,0,1"))
                                                (rule "eqSymm" (formula "35") (term "0,0,1"))
                                                (rule "eqSymm" (formula "34") (term "0,0,1"))
                                                (rule "eqSymm" (formula "33") (term "0,0,1"))
                                                (rule "eqSymm" (formula "32") (term "0,0,1"))
                                                (rule "eqSymm" (formula "31") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "30") (term "1"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "30") (term "1"))
                                                (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "30") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "11"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "pullOutSelect" (formula "38") (term "0,1,0") (inst "selectSK=arr_598"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "38") (term "0,1,0") (inst "selectSK=arr_599"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "pullOutSelect" (formula "38") (term "0,1,0") (inst "selectSK=arr_600"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "12")))
                                                (rule "applyEqReverse" (formula "39") (term "0,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=arr_601"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=arr_602"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "13")))
                                                (rule "applyEqReverse" (formula "38") (term "0,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "36") (term "0,1,0") (inst "selectSK=arr_603"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "pullOutSelect" (formula "36") (term "0,1,0") (inst "selectSK=arr_604"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "35") (term "0,1,0") (inst "selectSK=arr_605"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "assignment" (formula "44") (term "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "variableDeclaration" (formula "42") (term "1") (newnames "queryResult_7"))
                                                (rule "variableDeclaration" (formula "41") (term "1") (newnames "queryResult_7_1"))
                                                (rule "variableDeclaration" (formula "40") (term "1") (newnames "queryResult_7_2"))
                                                (rule "variableDeclaration" (formula "39") (term "1") (newnames "queryResult_7_3"))
                                                (rule "variableDeclaration" (formula "38") (term "1") (newnames "queryResult_7_4"))
                                                (rule "variableDeclaration" (formula "37") (term "1") (newnames "queryResult_7_5"))
                                                (rule "variableDeclaration" (formula "36") (term "1") (newnames "queryResult_7_6"))
                                                (rule "variableDeclaration" (formula "35") (term "1") (newnames "queryResult_7_7"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "25"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,0") (ifseqformula "7"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0") (ifseqformula "7"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "qeq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,0,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,0,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,0,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,1,0") (ifseqformula "6"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0"))
                                                (rule "leq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "24"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "24"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "6") (term "1"))
                                                (rule "add_literals" (formula "6") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "6") (term "1,1"))
                                                (rule "add_zero_right" (formula "6") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                (rule "add_literals" (formula "6") (term "0,1"))
                                                (rule "add_zero_left" (formula "6") (term "1"))
                                                (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "21"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "21"))
                                                (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0"))
                                                (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "4") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "3") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "1") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                                (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "2") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "1") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "24") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "2") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "4") (term "2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "3") (term "2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,2,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "2") (term "0,1,2,1,0,0,0,0,0") (ifseqformula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,2,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,2,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "0,1,2,1,0,0,0,1,0") (ifseqformula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "1") (term "2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,2,1,0,0,0,0") (ifseqformula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "2,1,0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,2,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,2,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "2,1,0,0,0,0"))
                                                (rule "applyEq" (formula "4") (term "0,1,2,1,0,0,0,1,0") (ifseqformula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,2,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,2,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "4") (term "2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "3") (term "0,1,2,1,0,0,0,1,0") (ifseqformula "18"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,2,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,2,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "3") (term "2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "4") (term "0,1,2,1,0,0,0,0,0") (ifseqformula "18"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,2,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,2,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "2") (term "0,1,2,1,0,0,0,1,0") (ifseqformula "18"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "2,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,2,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,2,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "2") (term "2,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "3") (term "0,1,2,1,0,0,0,0,0") (ifseqformula "18"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,2,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,2,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "2,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "0,1,2,1,0,0,0,0,0") (ifseqformula "18"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "2,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "2,1,0,0,0,0,0"))
                                                (rule "inEqSimp_invertInEq0" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__34"))
                                                (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfMemset" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfCreate" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_606"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "replaceKnownSelect_taclet0010020101010110_24" (formula "1") (term "0,0,1,0,0"))
                                                (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=arr_607"))
                                                (rule "simplifySelectOfAnon" (formula "6"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")))
                                                (rule "eqSymm" (formula "6") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                                (rule "replaceKnownSelect_taclet0010020101010110_24" (formula "6") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                                (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_608"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                                                (rule "eqSymm" (formula "5") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,1,0,0"))
                                                (rule "replaceKnownSelect_taclet0010020101010110_24" (formula "5") (term "0,0,1,0,0"))
                                                (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=arr_609"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                                                (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0,0"))
                                                (rule "replaceKnownSelect_taclet0010020101010110_24" (formula "4") (term "0,0,1,0,0"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_lang_Object_created__35"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "15")))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "9") (term "0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "8") (term "0,0,1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "6") (term "0,0,1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "40") (term "0,1,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "39") (term "0,1,0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "35") (term "0,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_610"))
                                                (rule "simplifySelectOfMemset" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                (rule "leq_literals" (formula "4") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_611"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_612"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_613"))
                                                (rule "simplifySelectOfMemset" (formula "5"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                (rule "leq_literals" (formula "5") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "eqSymm" (formula "5") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_614"))
                                                (rule "simplifySelectOfCreate" (formula "7"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "46")))
                                                (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "47")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_615"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_616"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_617"))
                                                (rule "simplifySelectOfCreate" (formula "5"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                                                (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "47")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "methodCallEmpty" (formula "40") (term "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "methodCallEmpty" (formula "41") (term "1"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unsign_11,result_16,exc_38") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                (branch "Post (unsign)"
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "translateJavaAddInt" (formula "32") (term "1,1,0,1"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "eqSymm" (formula "33"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "assignment" (formula "39") (term "1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                   (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unsign_12,result_17,exc_39") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                   (branch "Post (unsign)"
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "translateJavaAddInt" (formula "34") (term "1,1,0,1"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "eqSymm" (formula "35"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                      (rule "assignment" (formula "39") (term "1"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                      (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unsign_13,result_18,exc_40") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                      (branch "Post (unsign)"
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "translateJavaAddInt" (formula "36") (term "1,1,0,1"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "eqSymm" (formula "37"))
                                                         (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                         (rule "assignment" (formula "39") (term "1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0"))
                                                         (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                         (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_unsign_14,result_19,exc_41") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                         (branch "Post (unsign)"
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "translateJavaAddInt" (formula "38") (term "1,1,0,1"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "39"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                                            (rule "mul_literals" (formula "39") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                            (rule "assignment" (formula "40") (term "1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0"))
                                                            (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                            (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_unsign_15,result_20,exc_42") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                            (branch "Post (unsign)"
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "translateJavaAddInt" (formula "40") (term "1,1,0,1"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                               (rule "assignment" (formula "49") (term "1"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                                               (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                               (builtin "Use Operation Contract" (formula "48") (newnames "heapBefore_unsign_32,result_21,exc_43") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                               (branch "Post (unsign)"
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "1,1,0,1"))
                                                                  (rule "andLeft" (formula "42"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "eqSymm" (formula "43"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                                  (rule "assignment" (formula "50") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0"))
                                                                  (rule "mul_literals" (formula "43") (term "1,0,0"))
                                                                  (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_unsign_33,result_42,exc_44") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                                  (branch "Post (unsign)"
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "1,1,0,1"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "eqSymm" (formula "45"))
                                                                     (rule "polySimp_addComm0" (formula "45") (term "1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                                                                     (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                                                     (rule "assignment" (formula "48") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0"))
                                                                     (rule "mul_literals" (formula "45") (term "1,0,0"))
                                                                     (builtin "Use Operation Contract" (formula "50") (newnames "heapBefore_unsign_34,result_43,exc_45") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                                                     (branch "Post (unsign)"
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (builtin "One Step Simplification" (formula "46"))
                                                                        (rule "translateJavaAddInt" (formula "46") (term "1,1,0,1"))
                                                                        (rule "andLeft" (formula "46"))
                                                                        (rule "andLeft" (formula "47"))
                                                                        (rule "eqSymm" (formula "47"))
                                                                        (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                                                                        (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                                        (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                                        (rule "assignment" (formula "52") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0"))
                                                                        (rule "mul_literals" (formula "47") (term "1,0,0"))
                                                                        (rule "emptyModality" (formula "56") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "notRight" (formula "56"))
                                                                        (rule "polySimp_homoEq" (formula "1"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1"))
                                                                        (rule "applyEqRigid" (formula "53") (term "0,0,0,1") (ifseqformula "1"))
                                                                        (rule "polySimp_homoEq" (formula "53") (term "0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "0,0,1,0,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,1,0,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "0,0,0,1,0,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0,1"))
                                                                        (rule "applyEqRigid" (formula "28") (term "1,1") (ifseqformula "1"))
                                                                        (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "1"))
                                                                        (rule "add_literals" (formula "28") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "28") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "28") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "1"))
                                                                        (rule "add_literals" (formula "28") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "28") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "28") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                                                        (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "1"))
                                                                        (rule "add_literals" (formula "28") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "28") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "28") (term "1"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "53") (term "0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "0,0,1,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,1,0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "1,0,0,1,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "0,0,0,1,0,0,1"))
                                                                        (rule "emptyModality" (formula "57") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (rule "notRight" (formula "57"))
                                                                        (rule "polySimp_homoEq" (formula "1"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1"))
                                                                        (rule "applyEqRigid" (formula "33") (term "1,1") (ifseqformula "1"))
                                                                        (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "1"))
                                                                        (rule "add_literals" (formula "33") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "33") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "33") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                                        (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "1"))
                                                                        (rule "add_literals" (formula "33") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "33") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "33") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                                        (rule "polySimp_addComm0" (formula "33") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "1"))
                                                                        (rule "add_literals" (formula "33") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "33") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "33") (term "1"))
                                                                        (rule "newSym_eq" (formula "1") (inst "l=l_0") (inst "newSymDef=add(add(add(mul(res_byteArrayToInt_4, Z(0(#))),
            mul(res_unsign_19, Z(0(#)))),
        mul(res_unsign_20, Z(0(#)))),
    mul(res_unsign_21, Z(0(#))))"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,1,1"))
                                                                        (rule "times_zero_1" (formula "1") (term "0,0,0,1,1"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,1,1"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,1,1"))
                                                                        (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
                                                                        (rule "polySimp_addLiterals" (formula "1") (term "1,1"))
                                                                        (rule "add_zero_left" (formula "1") (term "1,1"))
                                                                        (rule "add_zero_right" (formula "1") (term "1"))
                                                                        (rule "applyEqRigid" (formula "54") (term "0,0,0,1") (ifseqformula "1"))
                                                                        (rule "eqSymm" (formula "54") (term "0,0,1"))
                                                                        (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                        (rule "polySimp_homoEq" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "newSym_eq" (formula "2") (inst "l=l_1") (inst "newSymDef=add(add(add(mul(l_0, Z(neglit(6(5(2(#)))))),
            mul(res_byteArrayToInt_4, Z(0(#)))),
        mul(res_unsign_19, Z(0(#)))),
    mul(res_unsign_20, Z(0(#))))"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,1,1"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0,0,1,1"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0,1,1"))
                                                                        (rule "add_zero_right" (formula "2") (term "0,0,1,1"))
                                                                        (rule "add_zero_right" (formula "2") (term "0,1,1"))
                                                                        (rule "add_zero_right" (formula "2") (term "1,1"))
                                                                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                                                                        (rule "polySimp_homoEq" (formula "3"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "57") (term "0,0,0,1") (ifseqformula "2"))
                                                                        (rule "eqSymm" (formula "57") (term "0,0,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "3"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                        (rule "newSym_eq" (formula "3") (inst "l=l_2") (inst "newSymDef=add(add(mul(l_1, Z(neglit(6(5(2(#)))))),
        mul(res_byteArrayToInt_4, Z(0(#)))),
    mul(res_unsign_19, Z(0(#))))"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,0,1,1"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,1,1"))
                                                                        (rule "add_zero_right" (formula "3") (term "0,1,1"))
                                                                        (rule "add_zero_right" (formula "3") (term "1,1"))
                                                                        (rule "applyEqRigid" (formula "53") (term "0,0,0,1") (ifseqformula "3"))
                                                                        (rule "eqSymm" (formula "53") (term "0,0,1"))
                                                                        (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "3"))
                                                                        (rule "polySimp_homoEq" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "applyEqRigid" (formula "54") (term "0,0,0,1") (ifseqformula "4"))
                                                                        (rule "polySimp_homoEq" (formula "54") (term "0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm0" (formula "54") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "54") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "0,0,0,1"))
                                                                        (rule "methodCallEmpty" (formula "60") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "methodCallEmpty" (formula "59") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "methodCallEmpty" (formula "55") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "methodCallEmpty" (formula "57") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (rule "methodCallEmpty" (formula "56") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "methodCallEmpty" (formula "58") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "58"))
                                                                        (rule "methodCallEmpty" (formula "53") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "methodCallEmpty" (formula "54") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "54"))
                                                                        (rule "emptyModality" (formula "60") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "notRight" (formula "60"))
                                                                        (rule "eqSymm" (formula "1"))
                                                                        (rule "applyEq" (formula "47") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "60") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "notRight" (formula "60"))
                                                                        (rule "eqSymm" (formula "1"))
                                                                        (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "57") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (rule "notRight" (formula "57"))
                                                                        (rule "eqSymm" (formula "1"))
                                                                        (rule "applyEq" (formula "53") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "59") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "notRight" (formula "59"))
                                                                        (rule "polySimp_homoEq" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "applyEq" (formula "56") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "59") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "notRight" (formula "59"))
                                                                        (rule "applyEq" (formula "45") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "60") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "notRight" (formula "60"))
                                                                        (rule "applyEq" (formula "44") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "59") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "notRight" (formula "59"))
                                                                        (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                                        (rule "emptyModality" (formula "60") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "notRight" (formula "60"))
                                                                        (rule "polySimp_homoEq" (formula "1"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                                        (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                                        (rule "ifthenelse_split" (formula "20") (term "0"))
                                                                        (branch "x_arr_2 = in ∧ i_0 ≥ 2 TRUE"
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "applyEqReverse" (formula "23") (term "2,0") (ifseqformula "22"))
                                                                           (rule "hideAuxiliaryEq" (formula "22"))
                                                                           (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "20"))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "20"))
                                                                           (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "applyEqReverse" (formula "59") (term "1,1,0") (ifseqformula "15"))
                                                                           (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "15"))
                                                                           (rule "applyEqReverse" (formula "59") (term "2,0") (ifseqformula "15"))
                                                                           (rule "hideAuxiliaryEq" (formula "15"))
                                                                           (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "19"))
                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "19"))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "applyEqReverse" (formula "56") (term "1,1,0") (ifseqformula "18"))
                                                                           (rule "applyEqReverse" (formula "56") (term "2,0") (ifseqformula "18"))
                                                                           (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "18"))
                                                                           (rule "hideAuxiliaryEq" (formula "18"))
                                                                           (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "18"))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "16"))
                                                                           (rule "applyEqReverse" (formula "59") (term "1,1,0") (ifseqformula "16"))
                                                                           (rule "applyEqReverse" (formula "59") (term "2,0") (ifseqformula "16"))
                                                                           (rule "hideAuxiliaryEq" (formula "16"))
                                                                           (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "17"))
                                                                           (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "applyEqReverse" (formula "52") (term "2,0") (ifseqformula "19"))
                                                                           (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "19"))
                                                                           (rule "applyEqReverse" (formula "52") (term "1,1,0") (ifseqformula "19"))
                                                                           (rule "hideAuxiliaryEq" (formula "19"))
                                                                           (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "17"))
                                                                           (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,0,0,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0,0,0,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0,0,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "17"))
                                                                           (rule "close" (formula "59") (ifseqformula "23"))
                                                                        )
                                                                        (branch "x_arr_2 = in ∧ i_0 ≥ 2 FALSE"
                                                                           (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                                                                           (rule "hideAuxiliaryEq" (formula "20"))
                                                                           (rule "ifthenelse_split" (formula "20") (term "0"))
                                                                           (branch "x_arr_2 = in TRUE"
                                                                              (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                                                              (rule "applyEqReverse" (formula "54") (term "2,0") (ifseqformula "21"))
                                                                              (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "21"))
                                                                              (rule "hideAuxiliaryEq" (formula "21"))
                                                                              (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "20"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "20"))
                                                                              (builtin "One Step Simplification" (formula "15"))
                                                                              (rule "applyEqReverse" (formula "57") (term "2,0") (ifseqformula "15"))
                                                                              (rule "applyEqReverse" (formula "57") (term "1,1,0") (ifseqformula "15"))
                                                                              (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "15"))
                                                                              (rule "hideAuxiliaryEq" (formula "15"))
                                                                              (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "19"))
                                                                              (builtin "One Step Simplification" (formula "15"))
                                                                              (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "19"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "applyEqReverse" (formula "58") (term "2,0") (ifseqformula "16"))
                                                                              (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "16"))
                                                                              (rule "applyEqReverse" (formula "58") (term "1,1,0") (ifseqformula "16"))
                                                                              (rule "hideAuxiliaryEq" (formula "16"))
                                                                              (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "18"))
                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                              (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "17"))
                                                                              (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "17"))
                                                                              (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "17"))
                                                                              (rule "hideAuxiliaryEq" (formula "17"))
                                                                              (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "17"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "17"))
                                                                              (builtin "One Step Simplification" (formula "57"))
                                                                              (rule "inEqSimp_geqRight" (formula "57"))
                                                                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0"))
                                                                              (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "35") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "61") (term "0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "35") (term "1,0,0,0,0,0,0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "18"))
                                                                              (rule "close" (formula "59") (ifseqformula "23"))
                                                                           )
                                                                           (branch "x_arr_2 = in FALSE"
                                                                              (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "20"))
                                                                              (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "20"))
                                                                              (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "20"))
                                                                              (rule "hideAuxiliaryEq" (formula "20"))
                                                                              (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "59"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                                                              (rule "hideAuxiliaryEq" (formula "16"))
                                                                              (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "58"))
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "18"))
                                                                              (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "18"))
                                                                              (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "18"))
                                                                              (rule "hideAuxiliaryEq" (formula "18"))
                                                                              (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "57"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                                                              (rule "hideAuxiliaryEq" (formula "14"))
                                                                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "56"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "14"))
                                                                              (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "14"))
                                                                              (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "14"))
                                                                              (rule "hideAuxiliaryEq" (formula "14"))
                                                                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "55"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "14"))
                                                                              (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "14"))
                                                                              (rule "applyEqReverse" (formula "54") (term "2,0") (ifseqformula "14"))
                                                                              (rule "hideAuxiliaryEq" (formula "14"))
                                                                              (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "54"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "applyEqReverse" (formula "49") (term "1,1,0") (ifseqformula "14"))
                                                                              (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "14"))
                                                                              (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "14"))
                                                                              (rule "hideAuxiliaryEq" (formula "14"))
                                                                              (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "53"))
                                                                              (builtin "One Step Simplification" (formula "54"))
                                                                              (rule "false_right" (formula "54"))
                                                                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "52"))
                                                                              (rule "polySimp_homoEq" (formula "42"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "42") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "40"))
                                                                              (rule "eqSymm" (formula "50"))
                                                                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "38"))
                                                                              (rule "eqSymm" (formula "46"))
                                                                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "48"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,0") (ifseqformula "44"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "0,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "48") (term "1") (ifseqformula "44"))
                                                                              (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "46"))
                                                                              (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "50"))
                                                                              (rule "applyEq" (formula "7") (term "1") (ifseqformula "44"))
                                                                              (rule "applyEq" (formula "52") (term "0,1,1") (ifseqformula "44"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "52") (term "0,0,1"))
                                                                              (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "44"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                                                              (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "44"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,0") (ifseqformula "46"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "42") (term "0,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "46"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1"))
                                                                              (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                                                                              (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
                                                                              (rule "applyEq" (formula "52") (term "0,1,1") (ifseqformula "46"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0,0,1"))
                                                                              (rule "add_literals" (formula "52") (term "1,1,0,0,0,1"))
                                                                              (rule "times_zero_1" (formula "52") (term "1,0,0,0,1"))
                                                                              (rule "add_zero_right" (formula "52") (term "0,0,0,1"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "50"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "42") (term "0,0"))
                                                                              (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "46"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1"))
                                                                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,1"))
                                                                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,1"))
                                                                              (rule "add_zero_right" (formula "13") (term "0,0,0,1"))
                                                                              (rule "applyEq" (formula "52") (term "0,1,1") (ifseqformula "50"))
                                                                              (rule "polySimp_addComm1" (formula "52") (term "1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,1"))
                                                                              (rule "add_literals" (formula "52") (term "1,1,0,1"))
                                                                              (rule "times_zero_1" (formula "52") (term "1,0,1"))
                                                                              (rule "add_zero_right" (formula "52") (term "0,1"))
                                                                              (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "50"))
                                                                              (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1"))
                                                                              (rule "add_literals" (formula "13") (term "1,1,0,1"))
                                                                              (rule "times_zero_1" (formula "13") (term "1,0,1"))
                                                                              (rule "add_zero_right" (formula "13") (term "0,1"))
                                                                              (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "50"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1"))
                                                                              (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                                                              (rule "add_zero_right" (formula "5") (term "0,1"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "42"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                              (rule "close" (formula "54") (ifseqformula "42"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "Exceptional Post (unsign)"
                                                                        (builtin "One Step Simplification" (formula "46"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0") (ifseqformula "25"))
                                                                        (builtin "One Step Simplification" (formula "46"))
                                                                        (rule "translateJavaAddInt" (formula "46") (term "1,1,0,1"))
                                                                        (rule "andLeft" (formula "46"))
                                                                        (rule "andLeft" (formula "47"))
                                                                        (rule "andLeft" (formula "46"))
                                                                        (rule "notLeft" (formula "46"))
                                                                        (rule "close" (formula "49") (ifseqformula "48"))
                                                                     )
                                                                     (branch "Pre (unsign)"
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "wellFormedAnonEQ" (formula "50") (ifseqformula "25"))
                                                                        (rule "wellFormedAnon" (formula "50") (term "0"))
                                                                        (rule "wellFormedStorePrimitive" (formula "50") (term "0,0"))
                                                                        (rule "replace_known_left" (formula "50") (term "1,0") (ifseqformula "21"))
                                                                        (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "24")))
                                                                        (rule "wellFormedMemsetArrayPrimitive" (formula "50"))
                                                                        (rule "wellFormedStorePrimitive" (formula "50"))
                                                                        (rule "wellFormedStorePrimitive" (formula "50"))
                                                                        (rule "wellFormedStorePrimitive" (formula "50"))
                                                                        (rule "wellFormedCreate" (formula "50"))
                                                                        (rule "wellFormedAnonEQ" (formula "50") (ifseqformula "18"))
                                                                        (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "17"))
                                                                        (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "12")))
                                                                        (rule "closeTrue" (formula "50"))
                                                                     )
                                                                  )
                                                                  (branch "Exceptional Post (unsign)"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0") (ifseqformula "25"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "translateJavaAddInt" (formula "44") (term "1,1,0,1"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "andLeft" (formula "45"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "notLeft" (formula "44"))
                                                                     (rule "close" (formula "47") (ifseqformula "46"))
                                                                  )
                                                                  (branch "Pre (unsign)"
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "wellFormedAnonEQ" (formula "46") (ifseqformula "25"))
                                                                     (rule "wellFormedAnon" (formula "46") (term "0"))
                                                                     (rule "wellFormedStorePrimitive" (formula "46") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "46") (term "1,0") (ifseqformula "21"))
                                                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "24")))
                                                                     (rule "wellFormedMemsetArrayPrimitive" (formula "46"))
                                                                     (rule "wellFormedStorePrimitive" (formula "46"))
                                                                     (rule "wellFormedStorePrimitive" (formula "46"))
                                                                     (rule "wellFormedStorePrimitive" (formula "46"))
                                                                     (rule "wellFormedCreate" (formula "46"))
                                                                     (rule "wellFormedAnonEQ" (formula "46") (ifseqformula "18"))
                                                                     (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "17"))
                                                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "12")))
                                                                     (rule "closeTrue" (formula "46"))
                                                                  )
                                                               )
                                                               (branch "Exceptional Post (unsign)"
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "translateJavaAddInt" (formula "42") (term "1,1,0,1"))
                                                                  (rule "andLeft" (formula "42"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "42"))
                                                                  (rule "notLeft" (formula "42"))
                                                                  (rule "close" (formula "45") (ifseqformula "44"))
                                                               )
                                                               (branch "Pre (unsign)"
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "wellFormedAnonEQ" (formula "48") (ifseqformula "25"))
                                                                  (rule "wellFormedAnon" (formula "48") (term "0"))
                                                                  (rule "wellFormedStorePrimitive" (formula "48") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "24")))
                                                                  (rule "wellFormedMemsetArrayPrimitive" (formula "48"))
                                                                  (rule "wellFormedStorePrimitive" (formula "48"))
                                                                  (rule "wellFormedStorePrimitive" (formula "48"))
                                                                  (rule "wellFormedStorePrimitive" (formula "48"))
                                                                  (rule "wellFormedCreate" (formula "48"))
                                                                  (rule "wellFormedAnonEQ" (formula "48") (ifseqformula "18"))
                                                                  (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "12")))
                                                                  (rule "closeTrue" (formula "48"))
                                                               )
                                                            )
                                                            (branch "Exceptional Post (unsign)"
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "translateJavaAddInt" (formula "40") (term "1,1,0,1"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "andLeft" (formula "42"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "close" (formula "43") (ifseqformula "42"))
                                                            )
                                                            (branch "Pre (unsign)"
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "wellFormedAnonEQ" (formula "47") (ifseqformula "25"))
                                                               (rule "wellFormedAnon" (formula "47") (term "0"))
                                                               (rule "wellFormedStorePrimitive" (formula "47") (term "0,0"))
                                                               (rule "replace_known_left" (formula "47") (term "1,0") (ifseqformula "21"))
                                                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "24")))
                                                               (rule "wellFormedMemsetArrayPrimitive" (formula "47"))
                                                               (rule "wellFormedStorePrimitive" (formula "47"))
                                                               (rule "wellFormedStorePrimitive" (formula "47"))
                                                               (rule "wellFormedStorePrimitive" (formula "47"))
                                                               (rule "wellFormedCreate" (formula "47"))
                                                               (rule "wellFormedAnonEQ" (formula "47") (ifseqformula "18"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "17"))
                                                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "12")))
                                                               (rule "closeTrue" (formula "47"))
                                                            )
                                                         )
                                                         (branch "Exceptional Post (unsign)"
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0") (ifseqformula "29"))
                                                            (rule "translateJavaAddInt" (formula "38") (term "1,1,0,1"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "andLeft" (formula "39"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "close" (formula "41") (ifseqformula "40"))
                                                         )
                                                         (branch "Pre (unsign)"
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "wellFormedAnonEQ" (formula "38") (ifseqformula "29"))
                                                            (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "12")))
                                                            (rule "closeTrue" (formula "38"))
                                                         )
                                                      )
                                                      (branch "Exceptional Post (unsign)"
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0") (ifseqformula "29"))
                                                         (rule "translateJavaAddInt" (formula "36") (term "1,1,0,1"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "close" (formula "39") (ifseqformula "38"))
                                                      )
                                                      (branch "Pre (unsign)"
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "29"))
                                                         (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "12")))
                                                         (rule "closeTrue" (formula "37"))
                                                      )
                                                   )
                                                   (branch "Exceptional Post (unsign)"
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "29"))
                                                      (rule "translateJavaAddInt" (formula "34") (term "1,1,0,1"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "notLeft" (formula "34"))
                                                      (rule "close" (formula "37") (ifseqformula "36"))
                                                   )
                                                   (branch "Pre (unsign)"
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "29"))
                                                      (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "12")))
                                                      (rule "closeTrue" (formula "37"))
                                                   )
                                                )
                                                (branch "Exceptional Post (unsign)"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0") (ifseqformula "29"))
                                                   (rule "translateJavaAddInt" (formula "32") (term "1,1,0,1"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "notLeft" (formula "32"))
                                                   (rule "close" (formula "35") (ifseqformula "34"))
                                                )
                                                (branch "Pre (unsign)"
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "29"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "12")))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                             )
                                             (branch "Exceptional Post (byteArrayToInt)"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "11") (term "0"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "7") (term "1"))
                                                (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "14") (term "0"))
                                                (rule "translateJavaMulInt" (formula "26") (term "1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "26") (term "1,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "26") (term "0,0,0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "26") (term "0,1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "26") (term "0,0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "24") (term "0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "24") (term "1,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "24") (term "1,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "26") (term "0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "24") (term "0,0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "24") (term "0,1,0,0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "26") (term "0,0,1,0,1,1"))
                                                (rule "translateJavaMulInt" (formula "24") (term "0,0,0,0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "26") (term "1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "26") (term "0,1,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "24") (term "0,0,1,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "26") (term "0,0,0,0,1,0,1,1"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,0,1,0,1,1"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "26"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "close" (formula "32") (ifseqformula "31"))
                                             )
                                             (branch "Pre (byteArrayToInt)"
                                                (builtin "One Step Simplification" (formula "24"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "13")) (ifInst ""  (formula "31")) (ifInst ""  (formula "8")) (ifInst ""  (formula "31")) (ifInst ""  (formula "9")))
                                                (rule "closeTrue" (formula "26"))
                                             )
                                          )
                                          (branch "Exceptional Post (byteArrayToInt)"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "14") (term "0"))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "11") (term "0"))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "7") (term "1"))
                                             (rule "translateJavaMulInt" (formula "24") (term "1,0,0,1,0,1,1"))
                                             (rule "translateJavaMulInt" (formula "24") (term "1,0,1,0,1,1"))
                                             (rule "translateJavaMulInt" (formula "24") (term "0,0,0,1,0,1,1"))
                                             (rule "translateJavaMulInt" (formula "24") (term "0,1,0,0,1,0,1,1"))
                                             (rule "translateJavaMulInt" (formula "24") (term "0,0,0,0,0,1,0,1,1"))
                                             (rule "translateJavaMulInt" (formula "24") (term "0,0,0,0,1,0,1,1"))
                                             (rule "translateJavaAddInt" (formula "24") (term "0,0,1,0,1,1"))
                                             (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1"))
                                             (rule "translateJavaAddInt" (formula "24") (term "0,1,0,1,1"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,1,1"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0,0,1,0,1,1"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "close" (formula "28") (ifseqformula "27"))
                                          )
                                          (branch "Pre (byteArrayToInt)"
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "13")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "11") (term "0"))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "7") (term "1"))
                                             (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_10020101010110_2" (formula "14") (term "0"))
                                             (rule "wellFormedAnon" (formula "23") (term "0"))
                                             (rule "wellFormedStorePrimitive" (formula "23") (term "0,0"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "eqSymm" (formula "24") (term "0,0,1"))
                                             (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "6"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "applyEq" (formula "22") (term "1,2,1,0,0") (ifseqformula "2"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,2,1,0,0"))
                                             (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1") (ifseqformula "2"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,0,0,1"))
                                             (rule "add_literals" (formula "22") (term "0,0,2,1,0,0,0,1"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "21"))
                                             (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                             (rule "add_literals" (formula "21") (term "1,0"))
                                             (rule "times_zero_1" (formula "21") (term "0"))
                                             (rule "leq_literals" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "20"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,0"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "20"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "1,1,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,1"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "0,1"))
                                             (rule "add_zero_left" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "17"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "16"))
                                             (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,1") (ifseqformula "18"))
                                             (rule "polySimp_addComm1" (formula "19") (term "2,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,2,1,0,0,0,1"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,2,1,0,0,0,1"))
                                             (rule "applyEq" (formula "19") (term "1,2,1,0,0") (ifseqformula "18"))
                                             (rule "polySimp_addComm1" (formula "19") (term "2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,2,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,2,1,0,0"))
                                             (rule "applyEq" (formula "19") (term "0,1,2,1,0,0") (ifseqformula "15"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "2,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,2,1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,2,1,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "2,1,0,0"))
                                             (rule "applyEq" (formula "19") (term "0,1,2,1,0,0,0,1") (ifseqformula "15"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "2,1,0,0,0,1"))
                                             (rule "add_literals" (formula "19") (term "1,1,2,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "19") (term "1,2,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "19") (term "2,1,0,0,0,1"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "inEqSimp_invertInEq0" (formula "3"))
                                             (rule "times_zero_2" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "wellFormedMemsetArrayPrimitive" (formula "16") (term "0"))
                                             (rule "wellFormedStorePrimitive" (formula "16") (term "0"))
                                             (rule "wellFormedStorePrimitive" (formula "16") (term "0"))
                                             (rule "wellFormedStorePrimitive" (formula "16") (term "0"))
                                             (rule "wellFormedCreate" (formula "16") (term "0"))
                                             (rule "wellFormedAnonEQ" (formula "16") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "4")))
                                             (rule "orRight" (formula "16"))
                                             (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Object_created__36"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0") (ifseqformula "11"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "16"))
                                             (rule "orRight" (formula "17"))
                                             (rule "close" (formula "17") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "28") (inst "sk=f_4"))
                                       (rule "allRight" (formula "28") (inst "sk=o_4"))
                                       (rule "orRight" (formula "28"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,0"))
                                       (rule "times_zero_1" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,2,1,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,2,1,0,0,0,0"))
                                       (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                                       (rule "add_literals" (formula "10") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "10") (term "0,1"))
                                       (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,2,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,2,1,0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "2") (term "1"))
                                       (rule "add_literals" (formula "2") (term "1,1,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "add_zero_left" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0") (ifseqformula "19"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,2,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "26") (term "2,1,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,2,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,2,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "2,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "2,1,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,2,1,0,0,0,0"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "10"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "18") (term "2,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,2,1,0,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,2,1,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "2,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,2,1,0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,2,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,2,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,2,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_invertInEq0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "times_zero_2" (formula "3") (term "1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_4_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "23"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__12"))
                                       (rule "simplifySelectOfMemset" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_2"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                       (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_lang_Object_created__13"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_5"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0,0"))
                                       (rule "commute_and" (formula "8") (term "1,0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "8") (term "0,0"))
                                       (rule "commute_or" (formula "8") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "commute_or" (formula "8") (term "0,1,0,0"))
                                       (rule "commute_or" (formula "8") (term "1,1,0,0"))
                                       (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                       (rule "commute_or" (formula "8") (term "1,0,0,0"))
                                       (rule "shift_paren_and" (formula "8") (term "0,0"))
                                       (rule "cut_direct" (formula "29") (term "0,0"))
                                       (branch "CUT: o_4 = null TRUE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "false_right" (formula "30"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
                                          (rule "applyEq" (formula "8") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3") (term "0,0"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_4 = null FALSE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "notRight" (formula "30"))
                                          (rule "replace_known_right" (formula "9") (term "0,1,1,0,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "30")))
                                          (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_4 = java.lang.Object::<created> ∧ o_4 = x_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")))
                                             (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "22") (ifseqformula "1"))
                                          )
                                          (branch "f_4 = java.lang.Object::<created> ∧ o_4 = x_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_4 = java.lang.Object::<transient> ∧ o_4 = x_arr_2 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "eqSymm" (formula "30"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "false_right" (formula "24"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "24") (term "2,1") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "24") (term "1") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "20") (ifseqformula "1"))
                                             )
                                             (branch "f_4 = java.lang.Object::<transient> ∧ o_4 = x_arr_2 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_4 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_4 = x_arr_2 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "22") (ifseqformula "1"))
                                                )
                                                (branch " f_4 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_4 = x_arr_2 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_4 = java.lang.Object::<initialized> ∧ o_4 = x_arr_2 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "false_right" (formula "22"))
                                                      (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "26") (term "2,1") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "26") (term "1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "16"))
                                                      (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "false_right" (formula "20"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "20") (ifseqformula "1"))
                                                   )
                                                   (branch "f_4 = java.lang.Object::<initialized> ∧ o_4 = x_arr_2 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch " o_4 = x_arr_2 ∧ ∃ int iv; (arr(iv) = f_4 ∧ iv ≥ 0 ∧ iv ≤ -1 + i_0) ∧ ¬f_4 = java.lang.Object::<created> TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                                                         (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "32"))
                                                         (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "22"))
                                                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")))
                                                         (rule "false_right" (formula "26"))
                                                         (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "false_right" (formula "25"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "false_right" (formula "23"))
                                                         (rule "applyEqRigid" (formula "29") (term "2,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "29") (term "2,1") (ifseqformula "3"))
                                                         (rule "narrowSelectArrayType" (formula "29") (term "1") (ifseqformula "10") (ifseqformula "26"))
                                                         (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "false_right" (formula "22"))
                                                         (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "2"))
                                                         (rule "narrowSelectArrayType" (formula "28") (term "0") (ifseqformula "18") (ifseqformula "25"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "false_right" (formula "22"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                         (rule "close" (formula "22") (ifseqformula "1"))
                                                      )
                                                      (branch " o_4 = x_arr_2 ∧ ∃ int iv; (arr(iv) = f_4 ∧ iv ≥ 0 ∧ iv ≤ -1 + i_0) ∧ ¬f_4 = java.lang.Object::<created> FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "cut_direct" (formula "23") (term "1"))
                                                         (branch "CUT: o_4 = x_arr_2 TRUE"
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "24"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                            (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "eqSymm" (formula "29"))
                                                            (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")))
                                                            (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "24") (ifseqformula "2"))
                                                         )
                                                         (branch "CUT: o_4 = x_arr_2 FALSE"
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "false_right" (formula "24"))
                                                            (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (_in = null)"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (newObject = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (_in = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch
                  (rule "hide_right" (formula "14") (userinteraction))
                  (builtin "Evaluate Query" (formula "10") (term "0") (newnames "b_36,callee,queryResult_8,res_byteArrayToInt_6"))
                  (builtin "Evaluate Query" (formula "11") (term "1") (newnames "b_37,callee,queryResult_8,res_byteArrayToInt_7"))
                  (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_110110_1" (formula "12") (term "0") (userinteraction))
                  (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "12") (term "1") (userinteraction))
                  (rule "notLeft" (formula "2") (userinteraction))
                  (rule "notLeft" (formula "1") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "queryResult_8") (userinteraction))
                  (rule "variableDeclaration" (formula "10") (term "1") (newnames "queryResult_8_1") (userinteraction))
                  (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_byteArrayToInt_3,result_44,exc_46,heapAfter_byteArrayToInt_7,anon_heap_byteArrayToInt_7") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
                  (branch "Post (byteArrayToInt)"
                     (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_byteArrayToInt_8,result_45,exc_47,heapAfter_byteArrayToInt_8,anon_heap_byteArrayToInt_8") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.1"))
                     (branch "Post (byteArrayToInt)"
                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                        (builtin "Evaluate Query" (formula "13") (term "1,0,0,0,1,0,1,0,1,1") (newnames "b_38,callee,queryResult_9,res_unsign_27"))
                        (builtin "Evaluate Query" (formula "14") (term "1,1,0,0,1,0,1,0,1,1") (newnames "b_39,callee,queryResult_9,res_unsign_28"))
                        (builtin "Evaluate Query" (formula "15") (term "1,1,0,1,0,1,0,1,1") (newnames "b_40,callee,queryResult_9,res_unsign_29"))
                        (builtin "Evaluate Query" (formula "16") (term "1,1,0,1,0,1,1") (newnames "b_41,callee,queryResult_9,res_unsign_30"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_8,int_select(heapAfter_byteArrayToInt_8,in,arr(Z(0(#)))))_00110110_3" (formula "17") (term "1,0,0,0,1,0,1,0,1,1") (userinteraction))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_8,int_select(heapAfter_byteArrayToInt_8,in,arr(Z(1(#)))))_00110110_4" (formula "17") (term "1,1,0,0,1,0,1,0,1,1") (userinteraction))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_8,int_select(heapAfter_byteArrayToInt_8,in,arr(Z(2(#)))))_00110110_5" (formula "17") (term "1,1,0,1,0,1,0,1,1") (userinteraction))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_8,int_select(heapAfter_byteArrayToInt_8,in,arr(Z(3(#)))))_00110110_6" (formula "17") (term "1,1,0,1,0,1,1") (userinteraction))
                        (builtin "Evaluate Query" (formula "15") (term "1,0,0,0,1,0,1,0,1,1") (newnames "b_42,callee,queryResult_9,res_unsign_31"))
                        (builtin "Evaluate Query" (formula "16") (term "1,1,0,0,1,0,1,0,1,1") (newnames "b_43,callee,queryResult_9,res_unsign_32"))
                        (builtin "Evaluate Query" (formula "17") (term "1,1,0,1,0,1,0,1,1") (newnames "b_44,callee,queryResult_9,res_unsign_33"))
                        (builtin "Evaluate Query" (formula "18") (term "1,1,0,1,0,1,1") (newnames "b_45,callee,queryResult_9,res_unsign_34"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_7,int_select(heapAfter_byteArrayToInt_7,in,arr(Z(0(#)))))_00110110_7" (formula "19") (term "1,0,0,0,1,0,1,0,1,1") (userinteraction))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_7,int_select(heapAfter_byteArrayToInt_7,in,arr(Z(1(#)))))_00110110_8" (formula "19") (term "1,1,0,0,1,0,1,0,1,1") (userinteraction))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_7,int_select(heapAfter_byteArrayToInt_7,in,arr(Z(2(#)))))_00110110_9" (formula "19") (term "1,1,0,1,0,1,0,1,1") (userinteraction))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt_7,int_select(heapAfter_byteArrayToInt_7,in,arr(Z(3(#)))))_00110110_10" (formula "19") (term "1,1,0,1,0,1,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "23"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "13") (term "0"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_110110_1" (formula "17") (term "1"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "12") (term "1,1"))
                        (rule "translateJavaAddInt" (formula "19") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "21") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "12") (term "1"))
                        (rule "translateJavaAddInt" (formula "19") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "21") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "19") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "19") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "19") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "21") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "21") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "21") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "19") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "19") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "21") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "21") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "19") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "21") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "19") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "21") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "21") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "notLeft" (formula "4"))
                        (rule "notLeft" (formula "6"))
                        (rule "notLeft" (formula "5"))
                        (rule "notLeft" (formula "3"))
                        (rule "notLeft" (formula "4"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "notLeft" (formula "1"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "18"))
                        (rule "eqSymm" (formula "30"))
                        (rule "eqSymm" (formula "29") (term "0,0,1"))
                        (rule "eqSymm" (formula "28") (term "0,0,1"))
                        (rule "eqSymm" (formula "27") (term "0,0,1"))
                        (rule "eqSymm" (formula "26") (term "0,0,1"))
                        (rule "eqSymm" (formula "25") (term "0,0,1"))
                        (rule "eqSymm" (formula "24") (term "0,0,1"))
                        (rule "eqSymm" (formula "23") (term "0,0,1"))
                        (rule "eqSymm" (formula "22") (term "0,0,1"))
                        (rule "eqSymm" (formula "21") (term "0,0,1"))
                        (rule "eqSymm" (formula "20") (term "0,0,1"))
                        (rule "eqSymm" (formula "14") (term "0,1"))
                        (rule "eqSymm" (formula "19") (term "0,1"))
                        (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_left" (formula "19") (term "1,1") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "18") (term "1,1") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "polySimp_elimSub" (formula "33") (term "1"))
                        (rule "mul_literals" (formula "33") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "33") (term "1"))
                        (rule "inEqSimp_ltRight" (formula "32"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtRight" (formula "33"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=arr_618"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_619"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=arr_620"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_621"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=arr_622"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_623"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_624"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=arr_625"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "assignment" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "assignment" (formula "30") (term "1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "queryResult_9"))
                        (rule "variableDeclaration" (formula "28") (term "1") (newnames "queryResult_9_1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "queryResult_9_2"))
                        (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_9_3"))
                        (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult_9_4"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "queryResult_9_5"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "queryResult_9_6"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "queryResult_9_7"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "11"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "methodCallEmpty" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "methodCallEmpty" (formula "30") (term "1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "emptyModality" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "notRight" (formula "31"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
                        (rule "polySimp_homoEq" (formula "21") (term "1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,1"))
                        (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,1"))
                        (rule "emptyModality" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "notRight" (formula "31"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                        (rule "polySimp_homoEq" (formula "17") (term "1"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,1"))
                        (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_sepPosMonomial" (formula "17") (term "1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,1"))
                        (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                        (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_unsign_35,result_46,exc_48") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                        (branch "Post (unsign)"
                           (builtin "One Step Simplification" (formula "25"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "translateJavaAddInt" (formula "25") (term "1,1,0,1"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "eqSymm" (formula "26"))
                           (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,0"))
                           (rule "assignment" (formula "34") (term "1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0"))
                           (rule "methodCallEmpty" (formula "34") (term "1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_unsign_36,result_47,exc_49") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                           (branch "Post (unsign)"
                              (builtin "One Step Simplification" (formula "27"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "translateJavaAddInt" (formula "27") (term "1,1,0,1"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0"))
                              (rule "assignment" (formula "35") (term "1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0"))
                              (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_unsign_37,result_48,exc_50") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                              (branch "Post (unsign)"
                                 (builtin "One Step Simplification" (formula "29"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "translateJavaAddInt" (formula "29") (term "1,1,0,1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "assignment" (formula "36") (term "1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0"))
                                 (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_unsign_38,result_49,exc_51") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                 (branch "Post (unsign)"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "translateJavaAddInt" (formula "31") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                    (rule "assignment" (formula "37") (term "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "32") (term "1") (ifseqformula "28"))
                                    (rule "emptyModality" (formula "40") (term "1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "notRight" (formula "40"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "27") (term "1") (ifseqformula "1"))
                                    (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unsign_39,result_50,exc_52") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                    (branch "Post (unsign)"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "translateJavaAddInt" (formula "34") (term "1,1,0,1"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "polySimp_addComm0" (formula "35") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                       (rule "assignment" (formula "39") (term "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "27"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "35"))
                                       (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_unsign_40,result_51,exc_53") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                       (branch "Post (unsign)"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "translateJavaAddInt" (formula "36") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                          (rule "assignment" (formula "40") (term "1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0"))
                                          (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_unsign_41,result_52,exc_54") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                          (branch "Post (unsign)"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "translateJavaAddInt" (formula "38") (term "1,1,0,1"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                             (rule "assignment" (formula "41") (term "1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "37"))
                                             (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_unsign_42,result_53,exc_55") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                             (branch "Post (unsign)"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "polySimp_addComm0" (formula "41") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                (rule "assignment" (formula "42") (term "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                (rule "applyEq" (formula "41") (term "0") (ifseqformula "31"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "41"))
                                                (rule "methodCallEmpty" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "methodCallEmpty" (formula "47") (term "1"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "methodCallEmpty" (formula "46") (term "1"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "methodCallEmpty" (formula "45") (term "1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "methodCallEmpty" (formula "44") (term "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "methodCallEmpty" (formula "43") (term "1"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "methodCallEmpty" (formula "42") (term "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "applyEq" (formula "22") (term "0,1,0,1,1") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,1,1"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,1,1") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1,1"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "44") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "42") (term "1") (ifseqformula "1"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "25") (term "1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                (rule "applyEq" (formula "45") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                                                (rule "polySimp_sepNegMonomial" (formula "25") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                                (rule "emptyModality" (formula "48") (term "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "applyEqRigid" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "26") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "26") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0,1"))
                                                (rule "ifthenelse_split" (formula "38") (term "0"))
                                                (branch "in[2] ≤ -1 TRUE"
                                                   (rule "polySimp_homoEq" (formula "39"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                   (rule "inEqSimp_homoInEq0" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                   (rule "add_literals" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                   (rule "ifthenelse_split" (formula "41") (term "0"))
                                                   (branch "in[1] ≤ -1 TRUE"
                                                      (rule "polySimp_homoEq" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "cut_direct" (formula "27") (term "0"))
                                                      (branch "CUT: in.length ≥ 4 TRUE"
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "26"))
                                                         (rule "polySimp_homoEq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0"))
                                                         (rule "applyEqRigid" (formula "47") (term "1") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "2") (term "1") (ifseqformula "26"))
                                                         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "26"))
                                                         (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "26"))
                                                         (rule "polySimp_sepNegMonomial" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "close" (formula "52") (ifseqformula "32"))
                                                      )
                                                      (branch "CUT: in.length ≥ 4 FALSE"
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                         (rule "add_literals" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "20"))
                                                         (rule "qeq_literals" (formula "18") (term "0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "closeFalse" (formula "18"))
                                                      )
                                                   )
                                                   (branch "in[1] ≤ -1 FALSE"
                                                      (rule "inEqSimp_leqRight" (formula "50"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "42"))
                                                      (rule "cut_direct" (formula "28") (term "0"))
                                                      (branch "CUT: in.length ≥ 4 TRUE"
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "33"))
                                                         (rule "polySimp_homoEq" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                         (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "47") (term "1") (ifseqformula "33"))
                                                         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "33"))
                                                         (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "33"))
                                                         (rule "polySimp_sepPosMonomial" (formula "27"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                         (rule "close" (formula "52") (ifseqformula "27"))
                                                      )
                                                      (branch "CUT: in.length ≥ 4 FALSE"
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                         (rule "add_literals" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "19"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "closeFalse" (formula "21"))
                                                      )
                                                   )
                                                )
                                                (branch "in[2] ≤ -1 FALSE"
                                                   (rule "inEqSimp_leqRight" (formula "49"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "39"))
                                                   (rule "ifthenelse_split" (formula "41") (term "0"))
                                                   (branch "in[1] ≤ -1 TRUE"
                                                      (rule "polySimp_homoEq" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "cut_direct" (formula "28") (term "0"))
                                                      (branch "CUT: in.length ≥ 4 TRUE"
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "33"))
                                                         (rule "polySimp_homoEq" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "47") (term "1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "4") (term "1") (ifseqformula "33"))
                                                         (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "33"))
                                                         (rule "polySimp_sepPosMonomial" (formula "27"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                         (rule "close" (formula "52") (ifseqformula "27"))
                                                      )
                                                      (branch "CUT: in.length ≥ 4 FALSE"
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "closeFalse" (formula "13"))
                                                      )
                                                   )
                                                   (branch "in[1] ≤ -1 FALSE"
                                                      (rule "inEqSimp_leqRight" (formula "50"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "42"))
                                                      (rule "cut_direct" (formula "29") (term "0"))
                                                      (branch "CUT: in.length ≥ 4 TRUE"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "29"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "29"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0") (ifseqformula "28"))
                                                         (rule "polySimp_homoEq" (formula "34"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0"))
                                                         (rule "applyEq" (formula "47") (term "1") (ifseqformula "28"))
                                                         (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "5") (term "1") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "49") (term "1") (ifseqformula "28"))
                                                         (rule "polySimp_sepNegMonomial" (formula "34"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                         (rule "close" (formula "52") (ifseqformula "34"))
                                                      )
                                                      (branch "CUT: in.length ≥ 4 FALSE"
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_geqRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                         (rule "add_literals" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "20"))
                                                         (rule "qeq_literals" (formula "22") (term "0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Exceptional Post (unsign)"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "17"))
                                                (rule "translateJavaAddInt" (formula "40") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "notLeft" (formula "40"))
                                                (rule "close" (formula "43") (ifseqformula "42"))
                                             )
                                             (branch "Pre (unsign)"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "wellFormedAnonEQ" (formula "40") (ifseqformula "17"))
                                                (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "16")))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                          )
                                          (branch "Exceptional Post (unsign)"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0") (ifseqformula "22"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0") (ifseqformula "13"))
                                             (rule "translateJavaAddInt" (formula "38") (term "1,1,0,1"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "notLeft" (formula "38"))
                                             (rule "close" (formula "41") (ifseqformula "40"))
                                          )
                                          (branch "Pre (unsign)"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "wellFormedAnonEQ" (formula "39") (ifseqformula "22"))
                                             (rule "wellFormedAnonEQ" (formula "39") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "6")) (ifInst ""  (formula "12")))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                       )
                                       (branch "Exceptional Post (unsign)"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0") (ifseqformula "17"))
                                          (rule "translateJavaAddInt" (formula "36") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "36"))
                                          (rule "close" (formula "39") (ifseqformula "38"))
                                       )
                                       (branch "Pre (unsign)"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "wellFormedAnonEQ" (formula "38") (ifseqformula "17"))
                                          (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "16")))
                                          (rule "closeTrue" (formula "38"))
                                       )
                                    )
                                    (branch "Exceptional Post (unsign)"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "22"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0") (ifseqformula "13"))
                                       (rule "translateJavaAddInt" (formula "34") (term "1,1,0,1"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "34"))
                                       (rule "close" (formula "37") (ifseqformula "36"))
                                    )
                                    (branch "Pre (unsign)"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "wellFormedAnonEQ" (formula "37") (ifseqformula "22"))
                                       (rule "wellFormedAnonEQ" (formula "37") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "6")) (ifInst ""  (formula "12")))
                                       (rule "closeTrue" (formula "37"))
                                    )
                                 )
                                 (branch "Exceptional Post (unsign)"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "16"))
                                    (rule "translateJavaAddInt" (formula "31") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "notLeft" (formula "31"))
                                    (rule "close" (formula "34") (ifseqformula "33"))
                                 )
                                 (branch "Pre (unsign)"
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "wellFormedAnonEQ" (formula "35") (ifseqformula "16"))
                                    (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "5")))
                                    (rule "closeTrue" (formula "35"))
                                 )
                              )
                              (branch "Exceptional Post (unsign)"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0") (ifseqformula "12"))
                                 (rule "translateJavaAddInt" (formula "29") (term "1,1,0,1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "close" (formula "32") (ifseqformula "31"))
                              )
                              (branch "Pre (unsign)"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "wellFormedAnonEQ" (formula "34") (ifseqformula "21"))
                                 (rule "wellFormedAnonEQ" (formula "34") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "5")) (ifInst ""  (formula "11")))
                                 (rule "closeTrue" (formula "34"))
                              )
                           )
                           (branch "Exceptional Post (unsign)"
                              (builtin "One Step Simplification" (formula "27"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "21"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0") (ifseqformula "12"))
                              (rule "translateJavaAddInt" (formula "27") (term "1,1,0,1"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "27"))
                              (rule "close" (formula "30") (ifseqformula "29"))
                           )
                           (branch "Pre (unsign)"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "wellFormedAnonEQ" (formula "33") (ifseqformula "21"))
                              (rule "wellFormedAnonEQ" (formula "33") (term "0") (ifseqformula "12"))
                              (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "11")) (ifInst ""  (formula "20")))
                              (rule "closeTrue" (formula "33"))
                           )
                        )
                        (branch "Exceptional Post (unsign)"
                           (builtin "One Step Simplification" (formula "25"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "16"))
                           (rule "translateJavaAddInt" (formula "25") (term "1,1,0,1"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "27"))
                           (rule "notLeft" (formula "25"))
                           (rule "close" (formula "28") (ifseqformula "27"))
                        )
                        (branch "Pre (unsign)"
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "wellFormedAnonEQ" (formula "32") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "15")))
                           (rule "closeTrue" (formula "32"))
                        )
                     )
                     (branch "Exceptional Post (byteArrayToInt)"
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                        (builtin "One Step Simplification" (formula "15"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_110110_1" (formula "9") (term "1"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "5") (term "0"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "4") (term "1,1"))
                        (rule "translateJavaMulInt" (formula "13") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "13") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "4") (term "1"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "13") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "11") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "13") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "11") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "13") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "11") (term "0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0") (ifseqformula "7"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "17"))
                        (rule "eqSymm" (formula "23"))
                        (rule "eqSymm" (formula "22") (term "0,0,1"))
                        (rule "eqSymm" (formula "21") (term "0,0,1"))
                        (rule "eqSymm" (formula "19") (term "0,1"))
                        (rule "eqSymm" (formula "14") (term "0,1"))
                        (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "18") (term "1,1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "notLeft" (formula "18"))
                        (rule "replace_known_right" (formula "18") (term "1,1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")))
                        (rule "true_left" (formula "18"))
                        (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "polySimp_elimSub" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "1"))
                        (rule "inEqSimp_ltRight" (formula "22"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "17"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtRight" (formula "23"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                     (branch "Pre (byteArrayToInt)"
                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_110110_1" (formula "9") (term "1"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "5") (term "0"))
                        (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "4") (term "1,1"))
                        (rule "wellFormedAnonEQ" (formula "13") (term "0,1") (ifseqformula "7"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1") (ifseqformula "7"))
                        (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "1,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "4") (term "1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "11") (term "1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "11") (term "0,1,0,1,0,1,1"))
                        (rule "translateJavaAddInt" (formula "11") (term "0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "13"))
                        (rule "eqSymm" (formula "17"))
                        (rule "eqSymm" (formula "15") (term "0,0,1"))
                        (rule "eqSymm" (formula "14") (term "0,1"))
                        (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "16") (term "1,0,1") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "polySimp_elimSub" (formula "18") (term "1"))
                        (rule "mul_literals" (formula "18") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "18") (term "1"))
                        (rule "inEqSimp_ltRight" (formula "17"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "15"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtRight" (formula "18"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "assignment" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                  )
                  (branch "Exceptional Post (byteArrayToInt)"
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "5") (term "0"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_110110_1" (formula "9") (term "1"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "4") (term "1,1"))
                     (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "11") (term "1,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "4") (term "1"))
                     (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "11") (term "1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "11") (term "0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "11") (term "0,0,1,0,1,0,1,1"))
                     (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0,1,0,1,0,1,1"))
                     (rule "andLeft" (formula "11"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "eqSymm" (formula "18"))
                     (rule "eqSymm" (formula "17") (term "0,0,1"))
                     (rule "eqSymm" (formula "16") (term "0,0,1"))
                     (rule "eqSymm" (formula "14") (term "0,1"))
                     (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "replace_known_right" (formula "13") (term "1,1") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
                     (rule "true_left" (formula "13"))
                     (rule "polySimp_elimSub" (formula "20") (term "1"))
                     (rule "mul_literals" (formula "20") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "1"))
                     (rule "inEqSimp_ltRight" (formula "19"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "14"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_gtRight" (formula "20"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch "Pre (byteArrayToInt)"
                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heapAfter_byteArrayToInt,in)_110110_1" (formula "9") (term "1"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "5") (term "0"))
                     (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)_110110_2" (formula "4") (term "1,1"))
                     (rule "translateJavaAddInt" (formula "4") (term "1"))
                     (rule "eqSymm" (formula "11") (term "0,0,1"))
                     (rule "eqSymm" (formula "12"))
                     (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_elimSub" (formula "15") (term "1"))
                     (rule "mul_literals" (formula "15") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "1"))
                     (rule "inEqSimp_ltRight" (formula "14"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "11"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_gtRight" (formula "15"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
               )
            )
         )
         (branch "Null Reference (_in = null)"
            (builtin "One Step Simplification" (formula "2"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
(branch "Exceptional Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaAddInt" (formula "4") (term "1"))
   (rule "translateJavaSubInt" (formula "9") (term "1,0,1,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "9") (term "0,1,0,1,0,0,0,1"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")))
   (rule "translateJavaAddInt" (formula "4") (term "1"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "inEqSimp_geqRight" (formula "7"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_homoInEq1" (formula "5"))
   (rule "polySimp_addComm1" (formula "5") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1"))
   (rule "polySimp_rightDist" (formula "5") (term "1"))
   (rule "mul_literals" (formula "5") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
   (rule "times_zero_1" (formula "6") (term "0,0"))
   (rule "add_zero_left" (formula "6") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "mul_literals" (formula "6") (term "1"))
   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
   (rule "qeq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeFalse" (formula "6"))
)
)

}
