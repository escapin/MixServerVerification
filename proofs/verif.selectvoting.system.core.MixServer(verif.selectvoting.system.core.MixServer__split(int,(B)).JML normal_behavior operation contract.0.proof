\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 04 13:03:56 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=6000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jul 04 13:03:56 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:split(int,[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:split(int,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "80970")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "n,ballots,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "12") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "12") (term "1,1") (newnames "heapBefore_split,savedHeapBefore_split,_ballotsBefore_split,_nBefore_split") (userinteraction))
(rule "variableDeclarationAssign" (formula "12") (term "1,1,1") (userinteraction))
(builtin "One Step Simplification" (formula "12"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "messages") (userinteraction))
(builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_newArray,result_0,exc_0,heapAfter_newArray,anon_heap_newArray") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::newArray(int)].JML normal_behavior operation contract.0"))
(branch "Post (newArray)"
   (rule "assignment" (formula "14") (term "1,1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "14") (term "1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "14") (term "1,1,1") (newnames "bal") (userinteraction))
   (rule "assignment" (formula "14") (term "1,1,1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "14") (term "1,1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "14") (term "1,1,1,1") (newnames "i") (userinteraction))
   (rule "assignment" (formula "14") (term "1,1,1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "14"))
   (builtin "Loop Invariant" (formula "14") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,balBefore_LOOP,i_0,bal_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "andRight" (formula "21"))
      (branch "Case 1"
         (rule "andRight" (formula "21"))
         (branch "Case 1"
            (rule "andRight" (formula "21"))
            (branch "Case 1"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "andRight" (formula "21"))
                  (branch "Case 1"
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                           (rule "andRight" (formula "21"))
                           (branch "Case 1"
                              (rule "andRight" (formula "21"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeTrue" (formula "20"))
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")))
                                 (rule "inEqSimp_leqRight" (formula "20"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "nonNull" (formula "15") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
                                 (rule "sub_literals" (formula "15") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "20"))
                                 (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "4"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "nonNull" (formula "15") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "16") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "greater_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "17") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "greater_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "18") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "18") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "sub_literals" (formula "18") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "14") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "13") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "greater_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                 (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_11"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "15"))
                                 (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
                                 (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "15"))
                                 (rule "hideAuxiliaryEq" (formula "15"))
                                 (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_11"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
                                 (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_11"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                                 (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_11"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                 (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                 (rule "hideAuxiliaryEq" (formula "18"))
                                 (rule "pullOutSelect" (formula "14") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_11"))
                                 (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
                                 (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0") (ifseqformula "14"))
                                 (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
                                 (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "14"))
                                 (rule "hideAuxiliaryEq" (formula "14"))
                                 (rule "pullOutSelect" (formula "13") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_5"))
                                 (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "13"))
                                 (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0") (ifseqformula "13"))
                                 (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
                                 (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "13"))
                                 (rule "hideAuxiliaryEq" (formula "13"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "4"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "notLeft" (formula "9"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "notLeft" (formula "9"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "nonNull" (formula "13") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "28")))
                                 (rule "sub_literals" (formula "13") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "28"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "12") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "29")))
                                 (rule "sub_literals" (formula "12") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "29"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "11") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "11") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "30")))
                                 (rule "sub_literals" (formula "11") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "30"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "10") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "10") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "31")))
                                 (rule "sub_literals" (formula "10") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "31"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "9") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
                                 (rule "greater_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "8") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "8") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")))
                                 (rule "sub_literals" (formula "8") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "26"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                 (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_imp2or" (formula "10") (term "0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
                              (rule "eqSymm" (formula "6"))
                              (rule "eqSymm" (formula "20"))
                              (rule "close" (formula "20") (ifseqformula "12"))
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
                           (rule "eqSymm" (formula "20"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "6"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")))
                           (rule "nonNull" (formula "14") (inst "i=i_1"))
                           (rule "greater_literals" (formula "14") (term "0,1"))
                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
                           (rule "sub_literals" (formula "14") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "6"))
                           (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "19"))
                           (rule "eqSeqDef2" (formula "6") (inst "iv=iv") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "1"))
                           (rule "close" (formula "20") (ifseqformula "7"))
                        )
                     )
                     (branch "Case 2"
                        (rule "notRight" (formula "21"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
                        (rule "eqSymm" (formula "7"))
                        (rule "eqSymm" (formula "1"))
                        (rule "eqSymm" (formula "8"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")))
                        (rule "nonNull" (formula "15") (inst "i=i_1"))
                        (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
                        (rule "greater_literals" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "7"))
                        (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "20"))
                        (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_15"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "referencedObjectIsCreatedRightEQ" (formula "18") (ifseqformula "2") (ifseqformula "17"))
                        (rule "close" (formula "18") (ifseqformula "3"))
                     )
                  )
                  (branch "Case 2"
                     (rule "cut" (inst "cutFormula=  array2seq(heap, ballots)
= array2seq(heapAfter_newArray, ballots)") (userinteraction))
                     (branch "CUT: array2seq(heap, ballots) = array2seq(heapAfter_newArray, ballots) TRUE"
                        (rule "cut" (inst "cutFormula=  array2seq2d(heap,
              byte[][]::select(heap,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))
= array2seq2d(heapAfter_newArray,
              byte[][]::select(heapAfter_newArray,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))") (userinteraction))
                        (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heapAfter_newArray, self.sorted@heapAfter_newArray) TRUE"
                           (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "2") (userinteraction))
                           (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "1") (userinteraction))
                           (rule "close" (formula "23") (ifseqformula "9") (userinteraction))
                        )
                        (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heapAfter_newArray, self.sorted@heapAfter_newArray) FALSE"
                           (rule "hide_right" (formula "23") (userinteraction))
                           (rule "array2seq2dDef" (formula "18") (term "1") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "18") (term "0") (inst "u=u") (userinteraction))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv") (userinteraction))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "eqSymm" (formula "17") (term "0"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "8"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
                           (rule "lenOfSeqDef" (formula "17") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1"))
                           (rule "times_zero_2" (formula "17") (term "1,1,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1"))
                           (rule "getOfSeqDef" (formula "17") (term "0,1,0,1"))
                           (rule "castDel" (formula "17") (term "1,0,1,0,1"))
                           (rule "castDel" (formula "17") (term "2,0,1,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,2,1,1,0,1,0,1"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "lenOfSeqDef" (formula "17") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,1,0"))
                           (rule "lenOfSeqDef" (formula "17") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                           (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "1,0,0"))
                           (rule "getOfSeqDef" (formula "17") (term "0,1,0,1"))
                           (rule "castDel" (formula "17") (term "1,0,1,0,1"))
                           (rule "castDel" (formula "17") (term "2,0,1,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,2,1,1,0,1,0,1"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "17") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0,0,1,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "1,0,1,0,0,1,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,1,1,0,1") (ifseqformula "8"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "17") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                           (rule "nonNull" (formula "15") (inst "i=i_1"))
                           (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")))
                           (rule "greater_literals" (formula "15") (term "0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "1") (term "0") (inst "u=u"))
                           (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                           (rule "narrowSelectArrayType" (formula "1") (term "2,1") (ifseqformula "2") (ifseqformula "21"))
                           (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "7"))
                           (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "21"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "7"))
                           (rule "array2seqDef" (formula "17") (term "1,0,1,0,1") (inst "u=u"))
                           (rule "array2seqDef" (formula "17") (term "1,1,1,0,1") (inst "u=u"))
                           (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "1"))
                           (rule "andLeft" (formula "7"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "8") (term "1,0"))
                           (rule "lenOfSeqDef" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "8") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,1,1,1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "1,1,1,0,0"))
                           (rule "lenOfSeqDef" (formula "7") (term "1"))
                           (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                           (rule "times_zero_2" (formula "7") (term "1,1,1"))
                           (rule "add_zero_right" (formula "7") (term "1,1"))
                           (rule "lenOfSeqDef" (formula "7") (term "0"))
                           (rule "polySimp_elimSub" (formula "7") (term "1,0"))
                           (rule "mul_literals" (formula "7") (term "1,1,0"))
                           (rule "add_zero_right" (formula "7") (term "1,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "getOfSeqDef" (formula "7") (term "0,1,0"))
                           (rule "castDel" (formula "7") (term "2,0,1,0"))
                           (rule "castDel" (formula "7") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "7") (term "0,2,1,0,1,0"))
                           (rule "eqSymm" (formula "7") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "7") (term "1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "7") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "7") (term "1,1,0,1,1,0"))
                           (rule "getOfSeqDef" (formula "7") (term "0,1,0"))
                           (rule "castDel" (formula "7") (term "1,0,1,0"))
                           (rule "castDel" (formula "7") (term "2,0,1,0"))
                           (rule "add_zero_right" (formula "7") (term "0,2,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "7") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "7") (term "1,1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,0"))
                           (rule "eqSymm" (formula "7") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "7") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
                           (rule "eqSymm" (formula "7") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,0,1,1,1,0,0"))
                           (rule "eqSeqDef2" (formula "1") (inst "iv=iv") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "pullOutSelect" (formula "16") (term "0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_19"))
                           (rule "applyEq" (formula "17") (term "1,1,2,1,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "1,0,1,1,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "17") (term "1,1,2,1,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "17") (term "1,0,1,1,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "allRight" (formula "16") (inst "sk=iv_5"))
                           (rule "impRight" (formula "16"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "18") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                           (rule "pullOutSelect" (formula "18") (term "1,2,1,0") (inst "selectSK=arr_54"))
                           (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "nnf_imp2or" (formula "9") (term "0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "6"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "13"))
                           (rule "notLeft" (formula "12"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "13"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "13"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "nonNull" (formula "15") (inst "i=i_1"))
                           (rule "greater_literals" (formula "15") (term "0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "14") (inst "i=i_1"))
                           (rule "greater_literals" (formula "14") (term "0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "14"))
                           (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "13") (inst "i=i_1"))
                           (rule "greater_literals" (formula "13") (term "0,1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "notLeft" (formula "13"))
                           (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "16") (inst "i=i_1"))
                           (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "greater_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "12") (inst "i=i_1"))
                           (rule "greater_literals" (formula "12") (term "0,1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "11") (inst "i=i_1"))
                           (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "greater_literals" (formula "11") (term "0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "commute_or_2" (formula "9") (term "0"))
                           (rule "commute_or_2" (formula "22") (term "0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "6"))
                           (rule "replaceKnownSelect_taclet101000000_1" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101000000_2" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "andLeft" (formula "21"))
                           (rule "notLeft" (formula "22"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "notLeft" (formula "23"))
                           (rule "andLeft" (formula "21"))
                           (rule "notLeft" (formula "23"))
                           (rule "notLeft" (formula "22"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "nonNull" (formula "26") (inst "i=i_1"))
                           (rule "greater_literals" (formula "26") (term "0,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "andLeft" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "25") (inst "i=i_1"))
                           (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "greater_literals" (formula "25") (term "0,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "notLeft" (formula "25"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "24") (inst "i=i_1"))
                           (rule "greater_literals" (formula "24") (term "0,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "23") (inst "i=i_1"))
                           (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "greater_literals" (formula "23") (term "0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "22") (inst "i=i_1"))
                           (rule "greater_literals" (formula "22") (term "0,1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "andLeft" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "21") (inst "i=i_1"))
                           (rule "greater_literals" (formula "21") (term "0,1"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "40")))
                           (rule "sub_literals" (formula "21") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_10"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "26"))
                           (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_10"))
                           (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "25"))
                           (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_10"))
                           (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "24"))
                           (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_10"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "47")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_10"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "22"))
                           (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                           (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "nnf_imp2or" (formula "26") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "commute_or_2" (formula "11") (term "0"))
                           (rule "commute_or" (formula "9") (term "0,0"))
                           (rule "commute_or" (formula "27") (term "0,0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "commute_or" (formula "14") (term "0,0"))
                           (rule "commute_or" (formula "13") (term "0,0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "ifthenelse_split" (formula "41") (term "1"))
                           (branch "n ≥ 1 + iv_5 TRUE"
                              (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "42") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "42") (term "0,0"))
                              (rule "eqSymm" (formula "42") (term "0"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,1,0"))
                              (rule "times_zero_2" (formula "42") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "42") (term "1,1,0"))
                              (rule "lenOfSeqDef" (formula "42") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "42") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "42") (term "1,1,1,0,0,1"))
                              (rule "getOfSeqDef" (formula "42") (term "0,1,0,1"))
                              (rule "castDel" (formula "42") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "42") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "42") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "42") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "42") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "42") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "42") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,0,0"))
                              (rule "times_zero_2" (formula "42") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "42") (term "1,0,0"))
                              (rule "getOfSeqDef" (formula "42") (term "0,1,0,1"))
                              (rule "castDel" (formula "42") (term "2,0,1,0,1"))
                              (rule "castDel" (formula "42") (term "1,0,1,0,1"))
                              (rule "add_zero_right" (formula "42") (term "0,2,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,1,0,1"))
                              (rule "times_zero_2" (formula "42") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "42") (term "1,1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,1,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "42") (term "0,0,1,1,1,0,0,1"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "n ≥ 1 TRUE"
                                 (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "self.sorted.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,1,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "allRight" (formula "43") (inst "sk=iv_1"))
                                    (rule "orRight" (formula "43"))
                                    (rule "notRight" (formula "43"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "45") (term "1,1,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "2") (term "0,1,1,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,1,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,1"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "pullOutSelect" (formula "44") (term "1,0") (inst "selectSK=arr_112"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "cut_direct" (formula "13") (term "0,1,1,0"))
                                    (branch "CUT: ballots.length ≥ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "commute_or_2" (formula "31") (term "0"))
                                       (rule "commute_or_2" (formula "30") (term "0"))
                                       (rule "commute_or_2" (formula "29") (term "0"))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "commute_or_2" (formula "27") (term "0"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                       (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "commute_or" (formula "30") (term "0,0"))
                                       (rule "commute_or" (formula "35") (term "0,0"))
                                       (rule "commute_or" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0"))
                                       (rule "commute_or" (formula "31") (term "0,0"))
                                       (rule "ifthenelse_to_or_left" (formula "14") (term "0,0,0"))
                                       (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "0,0,1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0,0,0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "14") (term "1,1,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,1,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "14") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "14") (term "0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "14") (term "1,1,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,1,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "shift_paren_or" (formula "14") (term "1,1,0"))
                                       (rule "commute_or" (formula "14") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "14") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "1,1,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,1,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,1,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "1,1,1,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "shift_paren_or" (formula "14") (term "0"))
                                       (rule "commute_or_2" (formula "14") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "shift_paren_or" (formula "14") (term "0,0"))
                                       (rule "commute_or" (formula "14") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "self.sorted[iv_5].length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "52") (term "0,1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "4")))
                                          (rule "ifthenelse_to_or_left" (formula "15") (term "0,0,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0,0,0,0"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0,1,0"))
                                          (rule "commute_or" (formula "15") (term "1,1,0"))
                                          (rule "commute_or" (formula "15") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "15") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "commute_or" (formula "16") (term "0"))
                                          (rule "shift_paren_or" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "commute_or" (formula "16") (term "1,1,0"))
                                          (rule "shift_paren_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "cnf_rightDist" (formula "16") (term "0"))
                                          (rule "distr_forallAnd" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "shift_paren_or" (formula "17") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "17") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,0"))
                                          (rule "add_literals" (formula "17") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0,1,0"))
                                          (rule "leq_literals" (formula "17") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "shift_paren_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0,0"))
                                          (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "16") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬self.sorted[iv_5] = null ∧ ¬self.sorted[iv_5].<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "41"))
                                             (rule "close" (formula "40") (ifseqformula "9"))
                                          )
                                          (branch " ¬self.sorted[iv_5] = null ∧ ¬self.sorted[iv_5].<created> = TRUE FALSE"
                                             (rule "close" (formula "53") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "self.sorted[iv_5].length ≥ 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "39"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "times_zero_2" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "CUT: ballots.length ≥ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
                                       (rule "add_zero_right" (formula "14") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "commute_or_2" (formula "30") (term "0"))
                                       (rule "commute_or_2" (formula "29") (term "0"))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "commute_or_2" (formula "27") (term "0"))
                                       (rule "commute_or_2" (formula "26") (term "0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                       (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "commute_or" (formula "29") (term "0,0"))
                                       (rule "commute_or" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0"))
                                       (rule "commute_or" (formula "31") (term "0,0"))
                                       (rule "commute_or" (formula "30") (term "0,0"))
                                       (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "self.sorted[iv_5].length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "5")))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " ¬self.sorted[iv_5] = null ∧ ¬self.sorted[iv_5].<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "40"))
                                             (rule "close" (formula "39") (ifseqformula "10"))
                                          )
                                          (branch " ¬self.sorted[iv_5] = null ∧ ¬self.sorted[iv_5].<created> = TRUE FALSE"
                                             (rule "close" (formula "52") (ifseqformula "2"))
                                          )
                                       )
                                       (branch "self.sorted[iv_5].length ≥ 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "38"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "times_zero_2" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                 )
                                 (branch "self.sorted.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "30") (ifseqformula "31"))
                                    (rule "close" (formula "30") (ifseqformula "5"))
                                 )
                              )
                              (branch "n ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "times_zero_2" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "n ≥ 1 + iv_5 FALSE"
                              (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")))
                              (rule "closeTrue" (formula "42"))
                           )
                        )
                     )
                     (branch "CUT: array2seq(heap, ballots) = array2seq(heapAfter_newArray, ballots) FALSE"
                        (rule "hide_right" (formula "22") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "17") (inst "iv=iv") (userinteraction))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
                        (rule "eqSymm" (formula "6"))
                        (rule "eqSymm" (formula "16") (term "1,0,1"))
                        (rule "eqSymm" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "7"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "18")))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1"))
                        (rule "nonNull" (formula "14") (inst "i=i_1"))
                        (rule "greater_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")))
                        (rule "sub_literals" (formula "14") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "6"))
                        (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "20"))
                        (rule "array2seqDef" (formula "16") (term "0,1,1,0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "16") (term "1,0,1"))
                        (rule "getOfSeqDef" (formula "16") (term "0,1,0,1"))
                        (rule "castDel" (formula "16") (term "2,0,1,0,1"))
                        (rule "castDel" (formula "16") (term "1,0,1,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0,1"))
                        (rule "narrowSelectArrayType" (formula "16") (term "1,0,1,0,1") (ifseqformula "1") (ifseqformula "20"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1"))
                        (rule "array2seqDef" (formula "16") (term "0,0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "16") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                        (rule "times_zero_2" (formula "16") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                        (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "16") (term "0"))
                        (rule "lenOfSeqDef" (formula "16") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                        (rule "times_zero_2" (formula "16") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "allRight" (formula "16") (inst "sk=iv_7"))
                        (rule "impRight" (formula "16"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "18"))
                        (rule "getOfSeqDef" (formula "18") (term "0"))
                        (rule "castDel" (formula "18") (term "1,0"))
                        (rule "castDel" (formula "18") (term "2,0"))
                        (rule "add_zero_right" (formula "18") (term "0,2,1,0"))
                        (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                        (rule "times_zero_2" (formula "18") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                        (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "2") (term "0"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "1,1,0"))
                        (rule "add_zero_right" (formula "2") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                        (rule "eqSeqDef2" (formula "8") (inst "iv=iv") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "pullOutSelect" (formula "17") (term "1,0") (inst "selectSK=arr_56"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "17") (term "1,0") (ifseqformula "3") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "closeTrue" (formula "17"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "21"))
                  (branch "Case 1"
                     (rule "notRight" (formula "21"))
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
                     (rule "allRight" (formula "20") (inst "sk=k_1"))
                     (rule "impRight" (formula "20"))
                     (rule "andLeft" (formula "1"))
                     (rule "notRight" (formula "22"))
                     (rule "eqSymm" (formula "10"))
                     (rule "eqSymm" (formula "9"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "20")))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "nonNull" (formula "17") (inst "i=i_1"))
                     (rule "greater_literals" (formula "17") (term "0,1"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                     (rule "sub_literals" (formula "17") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "9"))
                     (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "22"))
                     (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_34"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "6"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "12"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "10"))
                     (rule "nonNull" (formula "13") (inst "i=i_1"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "14") (inst "i=i_1"))
                     (rule "greater_literals" (formula "14") (term "0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "15") (inst "i=i_1"))
                     (rule "greater_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "12") (inst "i=i_1"))
                     (rule "greater_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "11") (inst "i=i_1"))
                     (rule "greater_literals" (formula "11") (term "0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "10") (inst "i=i_1"))
                     (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "greater_literals" (formula "10") (term "0,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "15") (term "0"))
                     (rule "commute_or_2" (formula "12") (term "0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "6"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "22"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "notLeft" (formula "20"))
                     (rule "nonNull" (formula "25") (inst "i=i_1"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i_1"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "23") (inst "i=i_1"))
                     (rule "greater_literals" (formula "23") (term "0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "22") (inst "i=i_1"))
                     (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "greater_literals" (formula "22") (term "0,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "notLeft" (formula "22"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "21") (inst "i=i_1"))
                     (rule "greater_literals" (formula "21") (term "0,1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "20") (inst "i=i_1"))
                     (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "greater_literals" (formula "20") (term "0,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
                     (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "33") (term "0") (ifseqformula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
                     (rule "applyEq" (formula "32") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                     (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "47")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_9"))
                     (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "22"))
                     (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_9"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "21"))
                     (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                     (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
                     (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "20"))
                     (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "44")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "20"))
                     (rule "hideAuxiliaryEq" (formula "20"))
                     (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "9"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or" (formula "26") (term "0,0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "commute_or" (formula "14") (term "0,0"))
                     (rule "commute_or" (formula "15") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                     (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                     (rule "commute_or_2" (formula "26") (term "0"))
                     (rule "commute_or_2" (formula "25") (term "0"))
                     (rule "commute_or_2" (formula "24") (term "0"))
                     (rule "commute_or_2" (formula "23") (term "0"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "commute_or" (formula "11") (term "0,0"))
                     (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "commute_or" (formula "30") (term "0,0"))
                     (rule "commute_or" (formula "29") (term "0,0"))
                     (rule "commute_or" (formula "28") (term "0,0"))
                     (rule "commute_or" (formula "27") (term "0,0"))
                     (rule "commute_or" (formula "26") (term "0,0"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "allLeft" (formula "25") (inst "t=k_1"))
                     (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1"))
                     (rule "leq_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_110"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "22") (ifseqformula "35"))
                     (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "5") (ifseqformula "35"))
                     (rule "allLeft" (formula "12") (inst "t=k_1"))
                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                     (rule "add_literals" (formula "12") (term "0,0,1"))
                     (rule "leq_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "allLeft" (formula "32") (inst "t=k_1"))
                     (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "32") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "32") (term "0,0,1"))
                     (rule "leq_literals" (formula "32") (term "0,1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "notLeft" (formula "32"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_111"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "narrowSelectArrayType" (formula "34") (term "0") (ifseqformula "22") (ifseqformula "49"))
                     (rule "close" (formula "34") (ifseqformula "2"))
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "21"))
               (branch "Case 1"
                  (rule "notRight" (formula "21"))
                  (rule "close" (formula "19") (ifseqformula "1"))
               )
               (branch "Case 2"
                  (rule "notRight" (formula "21"))
                  (rule "close" (formula "18") (ifseqformula "1"))
               )
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
            (rule "allRight" (formula "20") (inst "sk=j_2"))
            (rule "impRight" (formula "20"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "9"))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "22"))
            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "4"))
         (rule "wellFormedAnonEQ" (formula "21") (ifseqformula "11"))
         (rule "true_left" (formula "4"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
         (rule "eqSymm" (formula "6"))
         (rule "eqSymm" (formula "7"))
         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "20"))
      )
   )
   (branch "Body Preserves Invariant"
      (rule "variableDeclarationAssign" (formula "16") (term "0,1,1,1,1") (userinteraction))
      (rule "variableDeclaration" (formula "16") (term "0,1,1,1,1") (newnames "b_1") (userinteraction))
      (rule "less_than_comparison_simple" (formula "16") (term "0,1,1,1,1") (userinteraction))
      (rule "methodCallEmpty" (formula "16") (term "1,0,1,1,1,1") (userinteraction))
      (rule "emptyModality" (formula "16") (term "1,0,1,1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "16"))
      (rule "impRight" (formula "16") (userinteraction))
      (rule "variableDeclarationAssign" (formula "17") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "exc_1") (userinteraction))
      (rule "assignment" (formula "17") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "17") (term "1,1") (newnames "thrownExc") (userinteraction))
      (rule "ifUnfold" (formula "17") (term "1,1") (inst "#boolv=x") (userinteraction))
      (rule "variableDeclaration" (formula "17") (term "1,1") (newnames "x") (userinteraction))
      (rule "less_than_comparison_simple" (formula "17") (term "1,1") (userinteraction))
      (rule "if" (formula "17") (term "1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
      (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_split_0,result_1,exc_2,heapAfter_split,anon_heap_split") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::split([[B,[B,int)].JML normal_behavior operation contract.0"))
      (branch "Post (split)"
         (rule "assignment" (formula "19") (term "1,1") (userinteraction))
         (rule "postincrement" (formula "19") (term "1,1,1") (userinteraction))
         (rule "compound_int_cast_expression" (formula "19") (term "1,1,1") (inst "#v=x") (userinteraction))
         (rule "variableDeclarationAssign" (formula "19") (term "1,1,1") (userinteraction))
         (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "x_1") (userinteraction))
         (rule "remove_parentheses_right" (formula "19") (term "1,1,1") (userinteraction))
         (rule "assignmentAdditionInt" (formula "19") (term "1,1,1") (userinteraction))
         (rule "widening_identity_cast_5" (formula "19") (term "1,1,1,1") (userinteraction))
         (rule "assignment" (formula "19") (term "1,1,1,1") (userinteraction))
         (rule "tryEmpty" (formula "19") (term "1,1,1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "19") (term "1,1,1,1,1") (userinteraction))
         (rule "emptyModality" (formula "19") (term "1,1,1,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "19"))
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "20"))
         (rule "notLeft" (formula "20"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "21"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "31"))
         (rule "notLeft" (formula "22"))
         (rule "notLeft" (formula "20"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "33"))
         (rule "andLeft" (formula "19"))
         (rule "andRight" (formula "42") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "42") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "42") (userinteraction))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
                  (rule "translateJavaAddInt" (formula "41") (term "0,1,0,1,0,0"))
                  (rule "translateJavaAddInt" (formula "31") (term "0,1"))
                  (rule "translateJavaAddInt" (formula "41") (term "1,0,0,0,0,0,0,0"))
                  (rule "translateJavaAddInt" (formula "41") (term "0,1,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "41") (term "1,0,0,0,0"))
                  (rule "eqSymm" (formula "8"))
                  (rule "eqSymm" (formula "7"))
                  (rule "eqSymm" (formula "20"))
                  (rule "eqSymm" (formula "23") (term "1,0"))
                  (rule "eqSymm" (formula "40") (term "1,0,0,0,0,0"))
                  (rule "eqSymm" (formula "34"))
                  (rule "eqSymm" (formula "20"))
                  (rule "eqSymm" (formula "40") (term "0,1,0,0,0"))
                  (rule "eqSymm" (formula "28") (term "1,0"))
                  (rule "eqSymm" (formula "21"))
                  (rule "eqSymm" (formula "40") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "30"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "39"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "37")))
                  (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "replace_known_right" (formula "40") (term "0,0,1,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "13")) (ifInst ""  (formula "30")) (ifInst ""  (formula "33")) (ifInst ""  (formula "29")) (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19"))
                  (rule "inEqSimp_commuteLeq" (formula "18"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0,0"))
                  (rule "times_zero_2" (formula "40") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0"))
                  (rule "qeq_literals" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_subsumption1" (formula "39") (term "0,0") (ifseqformula "18"))
                  (rule "leq_literals" (formula "39") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "nonNull" (formula "15") (inst "i=i_1"))
                  (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "35")))
                  (rule "greater_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "7"))
                  (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "38"))
                  (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "22") (term "1,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "27") (term "0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "20"))
                  (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "29"))
                  (rule "eqSeqDef" (formula "22") (term "1,0") (inst "iv=iv"))
                  (rule "getOfSeqDef" (formula "22") (term "1,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "1,1,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "2,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
                  (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,0,0,1,0"))
                  (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,1,0,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "eqSeqDef" (formula "27") (term "1,0") (inst "iv=iv"))
                  (rule "lenOfSeqDef" (formula "27") (term "0,0,1,0"))
                  (rule "eqSymm" (formula "27") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,0"))
                  (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "27") (term "1,1,0,1,0"))
                  (rule "lenOfSeqDef" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "27") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "getOfSeqDef" (formula "27") (term "0,1,0,1,1,0"))
                  (rule "castDel" (formula "27") (term "1,0,1,0,1,1,0"))
                  (rule "castDel" (formula "27") (term "2,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,2,1,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "27") (term "0,0,1,0"))
                  (rule "eqSymm" (formula "27") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,0"))
                  (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "27") (term "1,1,0,1,0"))
                  (rule "getOfSeqDef" (formula "27") (term "0,1,0,1,1,0"))
                  (rule "castDel" (formula "27") (term "1,0,1,0,1,1,0"))
                  (rule "castDel" (formula "27") (term "2,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,2,1,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
                  (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "23") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "20") (term "1,1,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "pullOutSelect" (formula "37") (term "0,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
                  (rule "applyEq" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "26") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "26") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "26") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "28") (term "1,1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "26") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "replaceKnownSelect_taclet000010_0" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000010_2" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "38") (term "0,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "31")))
                  (rule "closeTrue" (formula "37"))
               )
               (branch "Case 2"
                  (rule "translateJavaAddInt" (formula "42") (term "1,1,0,0") (userinteraction))
                  (rule "allRight" (formula "42") (inst "sk=j_1") (userinteraction))
                  (rule "allLeftHide" (formula "30") (inst "t=j_1") (userinteraction))
                  (rule "impLeft" (formula "30") (userinteraction))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0") (ifseqformula "11"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
                     (rule "translateJavaAddInt" (formula "30") (term "0,1"))
                     (rule "impRight" (formula "41"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "23"))
                     (rule "eqSymm" (formula "24"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "25") (term "1,0"))
                     (rule "eqSymm" (formula "9"))
                     (rule "eqSymm" (formula "36"))
                     (rule "eqSymm" (formula "10"))
                     (rule "eqSymm" (formula "31"))
                     (rule "eqSymm" (formula "42"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "39")))
                     (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_addComm0" (formula "2") (term "1"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "impRight" (formula "42") (userinteraction))
                     (rule "close" (formula "43") (ifseqformula "31") (userinteraction))
                  )
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0") (ifseqformula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "11"))
               (rule "translateJavaAddInt" (formula "31") (term "0,1"))
               (rule "allRight" (formula "41") (inst "sk=f_0"))
               (rule "allRight" (formula "41") (inst "sk=o_0"))
               (rule "orRight" (formula "41"))
               (rule "orRight" (formula "41"))
               (rule "eqSymm" (formula "8"))
               (rule "eqSymm" (formula "7"))
               (rule "eqSymm" (formula "29") (term "1,0"))
               (rule "eqSymm" (formula "22"))
               (rule "eqSymm" (formula "35"))
               (rule "eqSymm" (formula "20"))
               (rule "eqSymm" (formula "23") (term "1,0"))
               (rule "eqSymm" (formula "20"))
               (rule "eqSymm" (formula "30"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "39"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "37")))
               (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "19"))
               (rule "inEqSimp_commuteLeq" (formula "18"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0"))
               (rule "qeq_literals" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "nonNull" (formula "15") (inst "i=i_1"))
               (rule "greater_literals" (formula "15") (term "0,1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "35")))
               (rule "sub_literals" (formula "15") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "7"))
               (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "38"))
               (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "27") (term "1,0"))
               (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "20"))
               (rule "array2seqDef" (formula "22") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "22") (term "1,0"))
               (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "29"))
               (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "27") (term "1,0"))
               (rule "array2seqDef" (formula "22") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "22") (term "1,0"))
               (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "eqSeqDef" (formula "25") (term "1,0") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "25") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0,0,1,1,0"))
               (rule "times_zero_2" (formula "25") (term "1,1,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,1,0,0,1,1,0"))
               (rule "getOfSeqDef" (formula "25") (term "1,1,0,1,1,0"))
               (rule "castDel" (formula "25") (term "1,1,1,0,1,1,0"))
               (rule "castDel" (formula "25") (term "2,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,2,1,1,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "25") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,1,1,0,1,1,0"))
               (rule "getOfSeqDef" (formula "25") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "25") (term "2,0,1,0,1,1,0"))
               (rule "castDel" (formula "25") (term "1,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,2,1,0,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0,1,1,0"))
               (rule "times_zero_2" (formula "25") (term "1,1,1,0,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "25") (term "0,0,1,0"))
               (rule "eqSymm" (formula "25") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,0"))
               (rule "mul_literals" (formula "25") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,1,0"))
               (rule "lenOfSeqDef" (formula "25") (term "0,0,1,0"))
               (rule "eqSymm" (formula "25") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,0"))
               (rule "mul_literals" (formula "25") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "25") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "25") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "25") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "25") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0,1,0"))
               (rule "eqSeqDef2" (formula "27") (inst "iv=iv") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "eqSeqDef" (formula "20") (term "1,0") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "20") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "20") (term "1,1,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,1,1,0,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,1,0"))
               (rule "getOfSeqDef" (formula "20") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "20") (term "1,0,1,0,1,1,0"))
               (rule "castDel" (formula "20") (term "2,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,2,1,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "20") (term "1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "20") (term "0,0,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
               (rule "times_zero_2" (formula "20") (term "1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,0,0,1,0"))
               (rule "getOfSeqDef" (formula "20") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "20") (term "2,0,1,0,1,1,0"))
               (rule "castDel" (formula "20") (term "1,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,2,1,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "20") (term "1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "20") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "20") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "20") (term "1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "20") (term "1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,1,0,1,1,0"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "11"))
               (rule "eqSymm" (formula "39"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
               (rule "applyEq" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "25") (term "1,1,1,0,1,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
               (rule "applyEq" (formula "26") (term "1,0,1,0,0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "26") (term "1,0,0,0,0,0,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "26") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "25"))
               (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")))
               (rule "replaceKnownSelect_taclet10010_1" (formula "25") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_3" (formula "25") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "elementOfSingleton" (formula "25") (term "0,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,0,0,0,0,0,1,0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0,1,0") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnon" (formula "2"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
               (rule "replaceKnownSelect_taclet10010_6" (formula "2") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "commute_or_2" (formula "25") (term "0"))
               (rule "commute_or_2" (formula "22"))
               (rule "nnf_imp2or" (formula "21") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "21") (term "0,1,1,0"))
               (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,1,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "28") (ifseqformula "6"))
               (rule "replaceKnownSelect_taclet10010_4" (formula "28") (term "1,1,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_5" (formula "28") (term "1,1,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "30"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "30"))
               (rule "notLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "29"))
               (rule "notLeft" (formula "28"))
               (rule "nonNull" (formula "33") (inst "i=i_1"))
               (rule "greater_literals" (formula "33") (term "0,1"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "notLeft" (formula "33"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "32") (inst "i=i_1"))
               (rule "greater_literals" (formula "32") (term "0,1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "andLeft" (formula "32"))
               (rule "notLeft" (formula "32"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "31") (inst "i=i_1"))
               (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "greater_literals" (formula "31") (term "0,1"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "notLeft" (formula "31"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "30") (inst "i=i_1"))
               (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "greater_literals" (formula "30") (term "0,1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "notLeft" (formula "30"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "29") (inst "i=i_1"))
               (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "greater_literals" (formula "29") (term "0,1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "28") (inst "i=i_1"))
               (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "greater_literals" (formula "28") (term "0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "28"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_8"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_8"))
               (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
               (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
               (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "33") (term "0,0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "elementOfSingleton" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "simplifySelectOfAnon" (formula "33"))
               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "33") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
               (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "53"))
               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
               (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "33"))
               (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
               (rule "hideAuxiliaryEq" (formula "33"))
               (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_8"))
               (rule "applyEq" (formula "40") (term "0") (ifseqformula "32"))
               (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
               (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "32") (term "0,0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "elementOfSingleton" (formula "32") (term "0,0"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "simplifySelectOfAnon" (formula "32"))
               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "32") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
               (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "32"))
               (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
               (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
               (rule "hideAuxiliaryEq" (formula "32"))
               (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_8"))
               (rule "applyEq" (formula "39") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
               (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "31") (term "0,0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "elementOfSingleton" (formula "31") (term "0,0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "simplifySelectOfAnon" (formula "31"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "31") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "sortsDisjointModuloNull" (formula "31") (term "0,0"))
               (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "31"))
               (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
               (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
               (rule "hideAuxiliaryEq" (formula "31"))
               (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_8"))
               (rule "applyEq" (formula "38") (term "0") (ifseqformula "30"))
               (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
               (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "elementOfSingleton" (formula "30") (term "0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "simplifySelectOfAnon" (formula "30"))
               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "30") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "sortsDisjointModuloNull" (formula "30") (term "0,0"))
               (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "53"))
               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "51")))
               (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "30"))
               (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
               (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
               (rule "hideAuxiliaryEq" (formula "30"))
               (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_8"))
               (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "29"))
               (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "elementOfSingleton" (formula "29") (term "0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "simplifySelectOfAnon" (formula "29"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "29") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "sortsDisjointModuloNull" (formula "29") (term "0,0"))
               (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
               (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "29"))
               (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
               (rule "hideAuxiliaryEq" (formula "29"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_imp2or" (formula "33") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "16") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "32") (term "0"))
               (rule "nnf_imp2or" (formula "31") (term "0"))
               (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
               (rule "commute_or_2" (formula "21") (term "0,1,1,0"))
               (rule "commute_or_2" (formula "26") (term "0,1,1,0"))
               (rule "nnf_imp2or" (formula "30") (term "0"))
               (rule "nnf_imp2or" (formula "29") (term "0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "32") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
               (rule "mul_literals" (formula "32") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "31") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
               (rule "mul_literals" (formula "29") (term "1,0,0,0"))
               (rule "ifthenelse_to_or_right" (formula "21") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,1,1,0,1,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0,1,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,1,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,1,1,0,1,0"))
               (rule "ifthenelse_to_or_left" (formula "26") (term "0,1,0"))
               (rule "eqSymm" (formula "26") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "26") (term "1,1,0,1,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,1,1,0,1,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,0,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,1,0,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,1,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "¬o_0 = null ∧ ¬o_0.<created> = TRUE TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "replace_known_right" (formula "56") (term "0,0,1") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "35")))
                  (rule "notRight" (formula "56"))
                  (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "¬o_0 = null ∧ ¬o_0.<created> = TRUE FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "cut_direct" (formula "55") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "false_right" (formula "56"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "notRight" (formula "56"))
                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "notRight" (formula "35"))
                     (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                     (rule "closeFalse" (formula "3"))
                  )
               )
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0") (ifseqformula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
            (rule "translateJavaSubInt" (formula "41") (term "0"))
            (rule "translateJavaAddInt" (formula "31") (term "0,1"))
            (rule "translateJavaSubInt" (formula "41") (term "1"))
            (rule "translateJavaAddInt" (formula "41") (term "1,0"))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "21"))
            (rule "eqSymm" (formula "35"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "20"))
            (rule "eqSymm" (formula "28") (term "1,0"))
            (rule "eqSymm" (formula "23") (term "1,0"))
            (rule "eqSymm" (formula "7"))
            (rule "eqSymm" (formula "30"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "36")))
            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "polySimp_elimSub" (formula "40") (term "1"))
            (rule "polySimp_elimSub" (formula "40") (term "0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
            (rule "polySimp_addComm0" (formula "30") (term "0,0"))
            (rule "polySimp_addComm0" (formula "40") (term "1"))
            (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0"))
            (rule "mul_literals" (formula "40") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "40") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "precOfInt" (formula "40"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "inEqSimp_commuteLeq" (formula "18"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "1"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
            (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
            (rule "polySimp_pullOutFactor2b" (formula "40") (term "0,1"))
            (rule "add_literals" (formula "40") (term "1,1,0,1"))
            (rule "times_zero_1" (formula "40") (term "1,0,1"))
            (rule "add_zero_right" (formula "40") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
            (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
            (rule "add_literals" (formula "40") (term "0,0,0,1"))
            (rule "add_zero_left" (formula "40") (term "0,0,1"))
            (rule "polySimp_pullOutFactor1" (formula "40") (term "0,1"))
            (rule "add_literals" (formula "40") (term "1,0,1"))
            (rule "times_zero_1" (formula "40") (term "0,1"))
            (rule "leq_literals" (formula "40") (term "1"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "inEqSimp_leqRight" (formula "40"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_literals" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
      (branch "Exceptional Post (split)"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "5"))
         (rule "translateJavaAddInt" (formula "15") (term "0,1,0,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "18") (term "0,1,1,1,0,0,0"))
         (rule "translateJavaSubInt" (formula "18") (term "0,1,1,1,0,1"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "11"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "25"))
         (rule "close" (formula "29") (ifseqformula "28"))
      )
      (branch "Pre (split)"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "andRight" (formula "17") (userinteraction))
         (branch "Case 1"
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "21"))
            (rule "notLeft" (formula "22"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andRight" (formula "33") (userinteraction))
            (branch "Case 1"
               (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "23") (userinteraction))
               (rule "defOfarrConcat" (formula "33") (term "0,1,1") (userinteraction))
               (rule "ifthenelse_split" (formula "33") (term "0,1,1") (userinteraction))
               (branch " i_0 = array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)]).length TRUE"
                  (rule "array2seq2dDef" (formula "1") (term "0,1") (inst "u=u") (userinteraction))
                  (rule "lenOfSeqDef" (formula "1") (term "1") (userinteraction))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "12"))
                  (rule "eqSymm" (formula "23"))
                  (rule "eqSymm" (formula "8"))
                  (rule "eqSymm" (formula "25") (term "1,0"))
                  (rule "eqSymm" (formula "28"))
                  (rule "eqSymm" (formula "9"))
                  (rule "eqSymm" (formula "1"))
                  (rule "eqSymm" (formula "22"))
                  (rule "eqSymm" (formula "21"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
                  (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                  (rule "times_zero_2" (formula "1") (term "1,1,0"))
                  (rule "add_zero_right" (formula "1") (term "1,0"))
                  (rule "inEqSimp_geqRight" (formula "32"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20"))
                  (rule "apply_eq_monomials" (formula "2") (term "1,0,0,0") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,0,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,1,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                  (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "nonNull" (formula "18") (inst "i=i_1"))
                  (rule "greater_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "28")))
                  (rule "sub_literals" (formula "18") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "22"))
                  (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "9"))
                  (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "31"))
                  (rule "array2seqDef" (formula "24") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "24") (term "1,0"))
                  (rule "array2seqDef" (formula "24") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "24") (term "1,0"))
                  (rule "eqSeqDef2" (formula "22") (inst "iv=iv") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "eqSeqDef" (formula "22") (term "1,0") (inst "iv=iv"))
                  (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
                  (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,1,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
                  (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0"))
                  (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_11"))
                  (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "3") (term "0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "9"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "21") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "22"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "16") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet000210_1" (formula "16") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000210_2" (formula "16") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "17"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "17"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "18"))
                  (rule "notLeft" (formula "17"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "17"))
                  (rule "notLeft" (formula "16"))
                  (rule "nonNull" (formula "21") (inst "i=i_1"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "20") (inst "i=i_1"))
                  (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "greater_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "19") (inst "i=i_1"))
                  (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "greater_literals" (formula "19") (term "0,1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "18") (inst "i=i_1"))
                  (rule "greater_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "17") (inst "i=i_1"))
                  (rule "greater_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "17"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "16") (inst "i=i_1"))
                  (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "greater_literals" (formula "16") (term "0,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "16"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_7"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "21"))
                  (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                  (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                  (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "21"))
                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_7"))
                  (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "33") (term "0") (ifseqformula "20"))
                  (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_7"))
                  (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "32") (term "0") (ifseqformula "19"))
                  (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "19"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_7"))
                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "18"))
                  (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                  (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_7"))
                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                  (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "commute_or" (formula "25") (term "0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,1,1,0"))
                  (rule "ifthenelse_to_or_right" (formula "26") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,1,0,1,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,1,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "ifthenelse_split" (formula "2") (term "0"))
                  (branch "n ≥ 1 TRUE"
                     (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
                  (branch "n ≥ 1 FALSE"
                     (rule "eqSymm" (formula "2"))
                     (rule "inEqSimp_geqRight" (formula "28"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " i_0 = array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)]).length FALSE"
                  (rule "defOfmConcat" (formula "34") (term "0,1,1") (userinteraction))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv") (userinteraction))
                  (rule "andLeft" (formula "23") (userinteraction))
                  (rule "lenOfArray2seq" (formula "23") (term "0") (userinteraction))
                  (rule "lenNonNegative" (formula "36") (term "0,0,0,1,1") (userinteraction))
                  (rule "leq_to_geq" (formula "1") (userinteraction))
                  (rule "cut" (inst "cutFormula=inInt(seqLen(Seq::seqGet(array2seq2d(anon(heapAfter_newArray,
                                          allFields(result_0),
                                          anon_heap_LOOP<<anonHeapFunction>>),
                                     byte[][]::select(anon(heapAfter_newArray,
                                                           allFields(result_0),
                                                           anon_heap_LOOP<<anonHeapFunction>>),
                                                      self,
                                                      verif.selectvoting.system.core.MixServer::$sorted)),
                         i_0)))") (userinteraction))
                  (branch "CUT: inInt((Seq)array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)])[i_0].length) TRUE"
                     (rule "lenInverse2" (formula "38") (term "1,1") (ifseqformula "2") (ifseqformula "1") (userinteraction))
                     (rule "defOfarrConcat" (formula "25") (term "0,1") (userinteraction))
                     (rule "ifthenelse_split" (formula "25") (term "0,1") (userinteraction))
                     (branch " i_0 = array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)]).length TRUE"
                        (rule "close" (formula "38") (ifseqformula "25"))
                     )
                     (branch " i_0 = array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)]).length FALSE"
                        (rule "defOfmConcat" (formula "25") (term "0,1") (userinteraction))
                        (rule "lenOfSeqConcat" (formula "25") (term "1") (userinteraction))
                        (rule "lenOfSeqConcat" (formula "25") (term "1,1") (userinteraction))
                        (rule "polySimp_addAssoc" (formula "25") (term "1") (userinteraction))
                        (rule "lenNonNegative" (formula "25") (term "1,1") (userinteraction))
                        (rule "defOfint2seq" (formula "26") (term "0,0,0,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "6"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "12"))
                        (rule "translateJavaDivInt" (formula "24") (term "0,0,0,0,1,1,0,0,0,1"))
                        (rule "translateJavaCastByte" (formula "24") (term "0,0,0,0,0,1"))
                        (rule "translateJavaDivInt" (formula "24") (term "0,0,0,0,1,0,0,0,1"))
                        (rule "translateJavaMod" (formula "24") (term "0,0,1,1,1,0,0,0,1"))
                        (rule "translateJavaMod" (formula "24") (term "0,0,0,1,1,0,0,0,1"))
                        (rule "translateJavaDivInt" (formula "24") (term "0,0,0,0,0,0,1"))
                        (rule "translateJavaCastByte" (formula "24") (term "0,0,1,0,0,0,1"))
                        (rule "translateJavaCastByte" (formula "24") (term "0,1,1,1,0,0,0,1"))
                        (rule "translateJavaCastByte" (formula "24") (term "0,0,1,1,0,0,0,1"))
                        (rule "translateJavaDivInt" (formula "24") (term "0,0,0,0,0,0,0,1"))
                        (rule "translateJavaDivInt" (formula "24") (term "0,0,0,0,1,0,0,0,1"))
                        (rule "translateJavaDivInt" (formula "24") (term "0,0,0,0,0,0,0,0,1"))
                        (rule "translateJavaMod" (formula "24") (term "0,0,1,0,0,0,1"))
                        (rule "translateJavaMod" (formula "24") (term "0,0,0,0,0,1"))
                        (rule "eqSymm" (formula "25") (term "1,0"))
                        (rule "eqSymm" (formula "31"))
                        (rule "eqSymm" (formula "26"))
                        (rule "eqSymm" (formula "9"))
                        (rule "eqSymm" (formula "36"))
                        (rule "eqSymm" (formula "21"))
                        (rule "eqSymm" (formula "8"))
                        (rule "eqSymm" (formula "27") (term "1,0"))
                        (rule "eqSymm" (formula "21"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "32")))
                        (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "add_literals" (formula "24") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "polySimp_sepPosMonomial" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                        (rule "mul_literals" (formula "24") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "qeq_literals" (formula "21") (term "0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "nonNull" (formula "18") (inst "i=i_1"))
                        (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "31")))
                        (rule "greater_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "24") (term "0,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "getOfSeqDef" (formula "24") (term "0,1,0"))
                        (rule "castDel" (formula "24") (term "1,0,1,0"))
                        (rule "castDel" (formula "24") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                        (rule "array2seqDef" (formula "25") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "25"))
                        (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "9"))
                        (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "34"))
                        (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "27") (term "1,0"))
                        (rule "array2seqDef" (formula "24") (term "0,1,1,1,0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "24") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,1,1,0,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "2") (term "1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_12"))
                        (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "25") (term "1,1,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "24") (term "1,0,0,0,1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "1,1,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "26") (term "1,1,1") (ifseqformula "2"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "24") (term "1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "24") (term "1,0,0,0,1,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "36") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "22") (term "1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,1,1,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "21"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "CUT: inInt((Seq)array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)])[i_0].length) FALSE"
                     (builtin "One Step Simplification" (formula "6"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "closeTrue" (formula "30"))
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "33") (userinteraction))
               (branch "Case 1"
                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "23") (userinteraction))
                  (rule "defOfarrConcat" (formula "33") (term "0,0") (userinteraction))
                  (rule "ifthenelse_split" (formula "33") (term "0,0") (userinteraction))
                  (branch " i_0 = array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)]).length TRUE"
                     (rule "array2seq2dDef" (formula "1") (term "0,1") (inst "u=u") (userinteraction))
                     (rule "lenOfSeqDef" (formula "1") (term "1") (userinteraction))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "12"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "23"))
                     (rule "eqSymm" (formula "28"))
                     (rule "eqSymm" (formula "21"))
                     (rule "eqSymm" (formula "8"))
                     (rule "eqSymm" (formula "24") (term "1,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "eqSymm" (formula "9"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
                     (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                     (rule "times_zero_2" (formula "1") (term "1,1,0"))
                     (rule "add_zero_right" (formula "1") (term "1,0"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "21"))
                     (rule "apply_eq_monomials" (formula "2") (term "1,0,0,0") (ifseqformula "22"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,0,0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,1,0,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,1,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                     (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "nonNull" (formula "18") (inst "i=i_1"))
                     (rule "greater_literals" (formula "18") (term "0,1"))
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "28")))
                     (rule "sub_literals" (formula "18") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "22"))
                     (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "9"))
                     (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "31"))
                     (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                     (rule "array2seqDef" (formula "24") (term "1,1,0") (inst "u=u"))
                     (rule "eqSeqDef" (formula "24") (term "1,0") (inst "iv=iv"))
                     (rule "getOfSeqDef" (formula "24") (term "1,1,0,1,1,0"))
                     (rule "castDel" (formula "24") (term "1,1,1,0,1,1,0"))
                     (rule "castDel" (formula "24") (term "2,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "24") (term "1,1,1,0,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0,1,1,0"))
                     (rule "lenOfSeqDef" (formula "24") (term "1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,0"))
                     (rule "mul_literals" (formula "24") (term "1,1,1,0,1,0"))
                     (rule "add_zero_right" (formula "24") (term "1,1,0,1,0"))
                     (rule "lenOfSeqDef" (formula "24") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,0,1,1,0"))
                     (rule "times_zero_2" (formula "24") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "1,1,1,0,0,1,1,0"))
                     (rule "getOfSeqDef" (formula "24") (term "0,1,0,1,1,0"))
                     (rule "castDel" (formula "24") (term "2,0,1,0,1,1,0"))
                     (rule "castDel" (formula "24") (term "1,0,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1,1,0"))
                     (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1,1,0"))
                     (rule "lenOfSeqDef" (formula "24") (term "0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1,0"))
                     (rule "times_zero_2" (formula "24") (term "1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "24") (term "1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,1,1,0"))
                     (rule "eqSeqDef2" (formula "22") (inst "iv=iv") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "pullOutSelect" (formula "20") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                     (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "20"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "20"))
                     (rule "applyEq" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "20"))
                     (rule "simplifySelectOfAnon" (formula "20"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "29")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,0,0") (ifseqformula "12"))
                     (rule "replace_known_left" (formula "20") (term "0,0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "sortsDisjointModuloNull" (formula "20") (term "0,0"))
                     (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")))
                     (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "29")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "20"))
                     (rule "hideAuxiliaryEq" (formula "20"))
                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "9"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "21") (term "0,1,1,0"))
                     (rule "commute_or_2" (formula "22"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "6"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "12"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "12"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "10"))
                     (rule "nonNull" (formula "14") (inst "i=i_1"))
                     (rule "greater_literals" (formula "14") (term "0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "13") (inst "i=i_1"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "15") (inst "i=i_1"))
                     (rule "greater_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "12") (inst "i=i_1"))
                     (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "greater_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "11") (inst "i=i_1"))
                     (rule "greater_literals" (formula "11") (term "0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "10") (inst "i=i_1"))
                     (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "greater_literals" (formula "10") (term "0,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "commute_or_2" (formula "26") (term "0,1,1,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "ifthenelse_to_or_right" (formula "26") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,1,1,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,0,1,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,1,0,1,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,1,0,1,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "15") (term "0"))
                     (rule "commute_or_2" (formula "12") (term "0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "6"))
                     (rule "replaceKnownSelect_taclet0010210_1" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010210_2" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "23"))
                     (rule "notLeft" (formula "22"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "22"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "23"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "22"))
                     (rule "notLeft" (formula "21"))
                     (rule "nonNull" (formula "26") (inst "i=i_1"))
                     (rule "greater_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "25") (inst "i=i_1"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i_1"))
                     (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "23") (inst "i=i_1"))
                     (rule "greater_literals" (formula "23") (term "0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "22") (inst "i=i_1"))
                     (rule "greater_literals" (formula "22") (term "0,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "notLeft" (formula "22"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "21") (inst "i=i_1"))
                     (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")))
                     (rule "greater_literals" (formula "21") (term "0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_6"))
                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "55")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_6"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "54")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_6"))
                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_6"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                     (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "52")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_6"))
                     (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "22"))
                     (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or" (formula "27") (term "0,0"))
                     (rule "commute_or" (formula "14") (term "0,0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "commute_or" (formula "15") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "n ≥ 1 TRUE"
                        (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "n ≥ 1 FALSE"
                        (rule "eqSymm" (formula "2"))
                        (rule "inEqSimp_geqRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "applyEqRigid" (formula "31") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "3"))
                        (rule "add_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
                  (branch " i_0 = array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)]).length FALSE"
                     (rule "defOfmConcat" (formula "34") (term "0,0") (userinteraction))
                     (rule "cut" (inst "cutFormula=inInt(seqLen(Seq::seqGet(array2seq2d(anon(heapAfter_newArray,
                                          allFields(result_0),
                                          anon_heap_LOOP<<anonHeapFunction>>),
                                     byte[][]::select(anon(heapAfter_newArray,
                                                           allFields(result_0),
                                                           anon_heap_LOOP<<anonHeapFunction>>),
                                                      self,
                                                      verif.selectvoting.system.core.MixServer::$sorted)),
                         i_0)))") (userinteraction))
                     (branch "CUT: inInt((Seq)array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)])[i_0].length) TRUE"
                        (rule "lenNonNegative" (formula "35") (term "0,0,0,0") (userinteraction))
                        (rule "leq_to_geq" (formula "1") (userinteraction))
                        (rule "lenInverse2" (formula "36") (term "0") (ifseqformula "1") (ifseqformula "2") (userinteraction))
                        (rule "close" (formula "36") (ifseqformula "1"))
                     )
                     (branch "CUT: inInt((Seq)array2seq2d(heapAfter_newArray[anon(result_0.*)], self.sorted@heapAfter_newArray[anon(result_0.*)])[i_0].length) FALSE"
                        (builtin "One Step Simplification" (formula "5"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "closeTrue" (formula "27"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "33") (userinteraction))
                  (branch "Case 1"
                     (rule "applyEq" (formula "33") (term "0") (ifseqformula "23") (userinteraction))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "closeTrue" (formula "33") (userinteraction))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "33") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "eqSymm" (formula "27"))
                        (rule "eqSymm" (formula "7"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "8"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "21"))
                        (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "28")))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "33") (userinteraction))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "8"))
                           (rule "eqSymm" (formula "24") (term "1,0"))
                           (rule "eqSymm" (formula "22"))
                           (rule "eqSymm" (formula "20"))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSymm" (formula "31") (term "1"))
                           (rule "eqSymm" (formula "20"))
                           (rule "eqSymm" (formula "31") (term "0,0"))
                           (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "28")))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                           (rule "applyEq" (formula "31") (term "1") (ifseqformula "14"))
                           (rule "close" (formula "31") (ifseqformula "20"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "33") (userinteraction))
                           (branch "Case 1"
                              (rule "close" (formula "33") (ifseqformula "25") (userinteraction))
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1") (ifseqformula "11"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
                              (rule "eqSymm" (formula "24") (term "1,0"))
                              (rule "eqSymm" (formula "27"))
                              (rule "eqSymm" (formula "7"))
                              (rule "eqSymm" (formula "20"))
                              (rule "eqSymm" (formula "8"))
                              (rule "eqSymm" (formula "20"))
                              (rule "eqSymm" (formula "21"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_right" (formula "31") (term "0,1,1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "28")))
                              (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "inEqSimp_commuteLeq" (formula "19"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "nonNull" (formula "16") (inst "i=i_1"))
                              (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")))
                              (rule "greater_literals" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "22") (term "1,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "7"))
                              (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "29"))
                              (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "20"))
                              (rule "nonNull" (formula "30") (term "1") (inst "i=i_1"))
                              (rule "greater_literals" (formula "30") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
                              (rule "sub_literals" (formula "30") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
                              (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1") (ifseqformula "14"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1"))
                              (rule "eqSeqDef" (formula "22") (term "1,0") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1,1,0"))
                              (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0"))
                              (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0"))
                              (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,1,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
                              (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0"))
                              (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0"))
                              (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,1,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
                              (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_8"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "20") (term "1,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_imp2or" (formula "27") (term "0,1"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                              (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
                              (rule "commute_or_2" (formula "20"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "4"))
                              (rule "replaceKnownSelect_taclet1111110210_1" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_2" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "notLeft" (formula "14"))
                              (rule "nonNull" (formula "19") (inst "i=i_1"))
                              (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "greater_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "18") (inst "i=i_1"))
                              (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "greater_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "17") (inst "i=i_1"))
                              (rule "greater_literals" (formula "17") (term "0,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "16") (inst "i=i_1"))
                              (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "greater_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "15") (inst "i=i_1"))
                              (rule "greater_literals" (formula "15") (term "0,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "15"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "14") (inst "i=i_1"))
                              (rule "greater_literals" (formula "14") (term "0,1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "14"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                              (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "19"))
                              (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                              (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "19"))
                              (rule "hideAuxiliaryEq" (formula "19"))
                              (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
                              (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "18"))
                              (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                              (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "18"))
                              (rule "hideAuxiliaryEq" (formula "18"))
                              (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                              (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
                              (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                              (rule "hideAuxiliaryEq" (formula "17"))
                              (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_4"))
                              (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "16"))
                              (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "16"))
                              (rule "hideAuxiliaryEq" (formula "16"))
                              (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_4"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "15"))
                              (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
                              (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
                              (rule "hideAuxiliaryEq" (formula "15"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "commute_or" (formula "20") (term "0,0"))
                              (rule "commute_or" (formula "23") (term "0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,1,1,0"))
                              (rule "ifthenelse_to_or_left" (formula "24") (term "0,1,0"))
                              (rule "eqSymm" (formula "24") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "24") (term "1,1,0,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "0,1,1,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1,0,1,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,1,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,1,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or_2" (formula "19") (term "0"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "4"))
                              (rule "andLeft" (formula "8"))
                              (rule "notLeft" (formula "9"))
                              (rule "andLeft" (formula "8"))
                              (rule "notLeft" (formula "9"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "notLeft" (formula "10"))
                              (rule "andLeft" (formula "8"))
                              (rule "notLeft" (formula "10"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "notLeft" (formula "9"))
                              (rule "notLeft" (formula "8"))
                              (rule "nonNull" (formula "13") (inst "i=i_1"))
                              (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "36")))
                              (rule "greater_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "36"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "12") (inst "i=i_1"))
                              (rule "greater_literals" (formula "12") (term "0,1"))
                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "35")))
                              (rule "sub_literals" (formula "12") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "35"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "11") (inst "i=i_1"))
                              (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "34")))
                              (rule "greater_literals" (formula "11") (term "0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "34"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "10") (inst "i=i_1"))
                              (rule "greater_literals" (formula "10") (term "0,1"))
                              (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "33")))
                              (rule "sub_literals" (formula "10") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "33"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "9") (inst "i=i_1"))
                              (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "32")))
                              (rule "greater_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "8") (inst "i=i_1"))
                              (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")))
                              (rule "greater_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "31"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                              (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "11") (term "0"))
                              (rule "nnf_imp2or" (formula "10") (term "0"))
                              (rule "nnf_imp2or" (formula "9") (term "0"))
                              (rule "nnf_imp2or" (formula "8") (term "0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "8") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "49") (term "0") (ifseqformula "4"))
                              (rule "replaceKnownSelect_taclet1111110210_0" (formula "49") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_2" (formula "49") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "49") (term "1,0,0,0,0,0") (inst "i=i_1"))
                              (rule "sub_literals" (formula "49") (term "2,1,0,1,1,1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i_1"))
                              (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "sub_literals" (formula "49") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i_1"))
                              (rule "sub_literals" (formula "49") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "31")))
                              (rule "greater_literals" (formula "49") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "49") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0") (inst "i=i_1"))
                              (rule "sub_literals" (formula "49") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0") (inst "i=i_1"))
                              (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "sub_literals" (formula "49") (term "2,1,0,1,1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0,0") (inst "i=i_1"))
                              (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "sub_literals" (formula "49") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_5"))
                              (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_19" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_20" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_5"))
                              (rule "applyEq" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_21" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_22" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_5"))
                              (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_23" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_24" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_5"))
                              (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_15" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_16" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_5"))
                              (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_17" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_18" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_13" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_14" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_9" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_10" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,1,0,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_7" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_8" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,1,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_11" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_12" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_5" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_6" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,1,0,0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_5"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "replaceKnownSelect_taclet1111110210_3" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1111110210_4" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "applyEqReverse" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "commute_or_2" (formula "20") (term "0"))
                              (rule "commute_or" (formula "19") (term "0,0"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or" (formula "23") (term "0,0"))
                              (rule "commute_or" (formula "22") (term "0,0"))
                              (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                              (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                              (rule "cut_direct" (formula "31") (term "0,0"))
                              (branch "CUT: bal_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "commute_or" (formula "30") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "30") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "ifthenelse_to_or_left" (formula "30") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "30") (term "1,1,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "30") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,1,0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,0,0,0"))
                                 (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "commute_or" (formula "13") (term "0,0"))
                                 (rule "commute_or" (formula "12") (term "0,0"))
                                 (rule "commute_or" (formula "11") (term "0,0"))
                                 (rule "commute_or" (formula "10") (term "0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0"))
                                 (rule "commute_or" (formula "8") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                                 (rule "inEqSimp_or_subsumption5" (formula "33") (term "1,0,0,1,0"))
                                 (rule "greater_literals" (formula "33") (term "0,1,0,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "andRight" (formula "53"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "53"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "53"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "53"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "53"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "53"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "53") (inst "sk=i_1_27"))
                                                   (rule "orRight" (formula "53"))
                                                   (rule "orRight" (formula "53"))
                                                   (rule "notRight" (formula "55"))
                                                   (rule "inEqSimp_geqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_108"))
                                                   (rule "simplifySelectOfAnon" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "39")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "34") (ifseqformula "39"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1,0") (inst "selectSK=arr_109"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "40"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "40"))
                                                   (rule "commute_and" (formula "4") (term "0"))
                                                   (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "orLeft" (formula "4"))
                                                   (branch " arr_109«selectSK» = null ∧ ( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                      (rule "ifEqualsNull" (formula "3"))
                                                      (rule "cnf_rightDist" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "commute_or" (formula "3"))
                                                      (rule "cnf_rightDist" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "cnf_rightDist" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "commute_or" (formula "3"))
                                                      (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_to_or_left" (formula "45") (term "0,0,0,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "eqSymm" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "45") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                                      (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_1_27"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "leq_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                   (branch " ¬( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE) ∧ (self.sorted@heap)[i_1_27]@anon_heap_LOOP«anonHeapFunction» = null"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "orRight" (formula "40"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                                      (rule "close" (formula "40") (ifseqformula "7"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "53") (inst "sk=i_1_26"))
                                                   (rule "orRight" (formula "53"))
                                                   (rule "notRight" (formula "54"))
                                                   (rule "orRight" (formula "54"))
                                                   (rule "inEqSimp_geqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_106"))
                                                   (rule "simplifySelectOfAnon" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "40"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_107"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "41"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "41"))
                                                   (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "orLeft" (formula "4"))
                                                   (branch " ( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.encrypted@heap)[i_1_26]@anon_heap_LOOP«anonHeapFunction» = null"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_to_or_right" (formula "48") (term "0,0,0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "48") (term "1,1,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,1,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "19"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "hideAuxiliaryEq" (formula "15"))
                                                      (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "69") (ifseqformula "15") (ifseqformula "68"))
                                                      (rule "close" (formula "69") (ifseqformula "19"))
                                                   )
                                                   (branch " ¬( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_107«selectSK» = null"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "orRight" (formula "40"))
                                                      (rule "notRight" (formula "41"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                      (rule "ifEqualsNull" (formula "4"))
                                                      (rule "cnf_rightDist" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "cnf_rightDist" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "commute_or" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "4"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_to_or_right" (formula "48") (term "0,0,0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                                      (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "18"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "19"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "20"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_1_26"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "26") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "leq_literals" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "53") (inst "sk=i_1_25"))
                                                (rule "orRight" (formula "53"))
                                                (rule "notRight" (formula "54"))
                                                (rule "orRight" (formula "54"))
                                                (rule "inEqSimp_leqRight" (formula "54"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_104"))
                                                (rule "simplifySelectOfAnon" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "41"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                (rule "ifEqualsNull" (formula "3"))
                                                (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_105"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                                (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "42"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "42"))
                                                (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " ( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.chosen@heap)[i_1_25]@anon_heap_LOOP«anonHeapFunction» = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_to_or_right" (formula "46") (term "0,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "46") (term "0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "46") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "46") (term "0,1,0,1,1,0"))
                                                   (rule "commute_or" (formula "46") (term "1,1,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "hideAuxiliaryEq" (formula "14"))
                                                   (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "68") (ifseqformula "14") (ifseqformula "67"))
                                                   (rule "close" (formula "68") (ifseqformula "18"))
                                                )
                                                (branch " ¬( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_105«selectSK» = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "40"))
                                                   (rule "notRight" (formula "41"))
                                                   (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                   (rule "ifEqualsNull" (formula "4"))
                                                   (rule "cnf_rightDist" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "cnf_rightDist" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_to_or_left" (formula "50") (term "0,0,0,1,1,0"))
                                                   (rule "eqSymm" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "eqSymm" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "50") (term "0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "50") (term "0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "18"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "19"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "17"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                                   (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_1_25"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "27"))
                                                   (rule "qeq_literals" (formula "14") (term "0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "closeFalse" (formula "14"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "53") (inst "sk=i_1_24"))
                                             (rule "orRight" (formula "53"))
                                             (rule "orRight" (formula "53"))
                                             (rule "notRight" (formula "55"))
                                             (rule "inEqSimp_leqRight" (formula "54"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "55"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_102"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "42"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "ifEqualsNull" (formula "3"))
                                             (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_103"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                             (rule "ifthenelse_negated" (formula "3") (term "0"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "43"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "43"))
                                             (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                             (rule "orLeft" (formula "4"))
                                             (branch " ( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.b@heap)[i_1_24]@anon_heap_LOOP«anonHeapFunction» = null"
                                                (rule "andLeft" (formula "4"))
                                                (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "44"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_to_or_left" (formula "48") (term "0,0,0,1,1,0"))
                                                (rule "eqSymm" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                                (rule "eqSymm" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "48") (term "1,1,0,1,1,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_left" (formula "12") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "67") (ifseqformula "12") (ifseqformula "66"))
                                                (rule "close" (formula "67") (ifseqformula "16"))
                                             )
                                             (branch " ¬( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_103«selectSK» = null"
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "orRight" (formula "40"))
                                                (rule "notRight" (formula "41"))
                                                (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "ifEqualsNull" (formula "4"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "cnf_rightDist" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "commute_or" (formula "5"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_to_or_right" (formula "49") (term "0,0,0,1,1,0"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "49") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "19"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "53") (term "0,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "20"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "commute_or" (formula "51") (term "1,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "allLeft" (formula "28") (inst "t=i_1_24"))
                                                (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "13"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0"))
                                                (rule "leq_literals" (formula "28"))
                                                (rule "closeFalse" (formula "28"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "53") (inst "sk=i_1_23"))
                                          (rule "orRight" (formula "53"))
                                          (rule "orRight" (formula "53"))
                                          (rule "notRight" (formula "55"))
                                          (rule "inEqSimp_geqRight" (formula "55"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "55"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_100"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "43"))
                                          (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "ifEqualsNull" (formula "3"))
                                          (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_101"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                          (rule "ifthenelse_negated" (formula "3") (term "0"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "44"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "44"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                          (rule "orLeft" (formula "4"))
                                          (branch " ( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.a@heap)[i_1_23]@anon_heap_LOOP«anonHeapFunction» = null"
                                             (rule "andLeft" (formula "4"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifthenelse_to_or_right" (formula "47") (term "0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "47") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "47") (term "1,1,0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "12") (term "0,0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "66") (ifseqformula "12") (ifseqformula "65"))
                                             (rule "close" (formula "66") (ifseqformula "16"))
                                          )
                                          (branch " ¬( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_101«selectSK» = null"
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "orRight" (formula "40"))
                                             (rule "notRight" (formula "41"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                             (rule "ifEqualsNull" (formula "4"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "cnf_rightDist" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifthenelse_to_or_right" (formula "48") (term "0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or_2" (formula "50") (term "0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "50") (term "1,1,0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "29") (inst "t=i_1_23"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "29"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "53") (inst "sk=i_1_22"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "notRight" (formula "55"))
                                       (rule "inEqSimp_leqRight" (formula "54"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "55"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_98"))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "44"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_99"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                       (rule "ifthenelse_negated" (formula "3") (term "0"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "45"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "45"))
                                       (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                       (rule "orLeft" (formula "4"))
                                       (branch " ( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.msg@heap)[i_1_22]@anon_heap_LOOP«anonHeapFunction» = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "ifthenelse_to_or_right" (formula "46") (term "0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "46") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,1,1,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,1,0,1,1,0"))
                                          (rule "commute_or" (formula "46") (term "1,1,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "65") (ifseqformula "10") (ifseqformula "64"))
                                          (rule "close" (formula "65") (ifseqformula "14"))
                                       )
                                       (branch " ¬( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_99«selectSK» = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "orRight" (formula "40"))
                                          (rule "notRight" (formula "41"))
                                          (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                          (rule "ifEqualsNull" (formula "4"))
                                          (rule "cnf_rightDist" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "cnf_rightDist" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "commute_or" (formula "5"))
                                          (rule "cnf_rightDist" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "ifthenelse_to_or_left" (formula "48") (term "0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or_2" (formula "50") (term "0,1,0,1,1,0"))
                                          (rule "commute_or" (formula "50") (term "1,1,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "16"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "17"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "allLeft" (formula "30") (inst "t=i_1_22"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "14"))
                                          (rule "qeq_literals" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "closeFalse" (formula "30"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "53") (inst "sk=i_1_21"))
                                    (rule "orRight" (formula "53"))
                                    (rule "orRight" (formula "53"))
                                    (rule "notRight" (formula "55"))
                                    (rule "inEqSimp_leqRight" (formula "54"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_96"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "33") (ifseqformula "52"))
                                    (rule "shift_paren_or" (formula "36") (term "0,0,0,1,0"))
                                    (rule "commute_or" (formula "36") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_left" (formula "43") (term "0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "43") (term "1,0,0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "43") (term "1,1,0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "43") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,1,0,1,1,0"))
                                    (rule "commute_or" (formula "43") (term "1,1,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "45") (term "0,0,1,0,1,1,0"))
                                    (rule "commute_or_2" (formula "45") (term "0,1,1,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "50") (term "0,0,1,1,0,1,1,0"))
                                    (rule "cnf_rightDist" (formula "50") (term "1,1,0,1,1,0"))
                                    (rule "commute_or" (formula "50") (term "1,1,1,0,1,1,0"))
                                    (rule "cnf_rightDist" (formula "50") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "50") (term "1,0,1,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "50") (term "0,0,1,1,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1,1,0,1,1,0"))
                                    (rule "qeq_literals" (formula "50") (term "1,0,0,1,1,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "commute_or_2" (formula "50") (term "1,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,1,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,0,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,1,0,1,1,0"))
                                    (rule "allLeft" (formula "49") (inst "t=i_1_21"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "notLeft" (formula "49"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_97"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "53") (ifseqformula "16"))
                                 )
                              )
                              (branch "CUT: bal_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "commute_or" (formula "30") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "30") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "ifthenelse_to_or_left" (formula "30") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "30") (term "1,1,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "30") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,1,0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0,1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0,0,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0,0,0,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                                 (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "commute_or" (formula "13") (term "0,0"))
                                 (rule "commute_or" (formula "12") (term "0,0"))
                                 (rule "commute_or" (formula "11") (term "0,0"))
                                 (rule "commute_or" (formula "10") (term "0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0"))
                                 (rule "commute_or" (formula "8") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                                 (rule "inEqSimp_or_subsumption5" (formula "33") (term "1,0,0,1,0"))
                                 (rule "greater_literals" (formula "33") (term "0,1,0,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "andRight" (formula "54"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "54"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "54"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "54"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "54"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "54"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "54") (inst "sk=i_1_20"))
                                                   (rule "orRight" (formula "54"))
                                                   (rule "orRight" (formula "54"))
                                                   (rule "notRight" (formula "56"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_94"))
                                                   (rule "simplifySelectOfAnon" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "40")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "34") (ifseqformula "40"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1,0") (inst "selectSK=arr_95"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "41"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "41"))
                                                   (rule "commute_and" (formula "4") (term "0"))
                                                   (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "orLeft" (formula "4"))
                                                   (branch " arr_95«selectSK» = null ∧ ( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                      (rule "ifEqualsNull" (formula "3"))
                                                      (rule "cnf_rightDist" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "commute_or" (formula "3"))
                                                      (rule "cnf_rightDist" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "cnf_rightDist" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "commute_or" (formula "3"))
                                                      (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_to_or_left" (formula "45") (term "0,0,0,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "eqSymm" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "45") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "45") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                                      (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_1_20"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "leq_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                   (branch " ¬( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE) ∧ (self.sorted@heap)[i_1_20]@anon_heap_LOOP«anonHeapFunction» = null"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "orRight" (formula "40"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "43"))
                                                      (rule "close" (formula "40") (ifseqformula "7"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "54") (inst "sk=i_1_19"))
                                                   (rule "orRight" (formula "54"))
                                                   (rule "orRight" (formula "54"))
                                                   (rule "notRight" (formula "56"))
                                                   (rule "inEqSimp_geqRight" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "56"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_92"))
                                                   (rule "simplifySelectOfAnon" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "41"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_93"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "42"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "42"))
                                                   (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "orLeft" (formula "4"))
                                                   (branch " ( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.encrypted@heap)[i_1_19]@anon_heap_LOOP«anonHeapFunction» = null"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_to_or_left" (formula "46") (term "0,0,0,1,1,0"))
                                                      (rule "eqSymm" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "eqSymm" (formula "46") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "46") (term "0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "46") (term "0,1,1,0"))
                                                      (rule "commute_or_2" (formula "46") (term "0,1,0,1,1,0"))
                                                      (rule "commute_or" (formula "46") (term "1,1,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "hideAuxiliaryEq" (formula "14"))
                                                      (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "70") (ifseqformula "14") (ifseqformula "69"))
                                                      (rule "close" (formula "70") (ifseqformula "18"))
                                                   )
                                                   (branch " ¬( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_93«selectSK» = null"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "orRight" (formula "40"))
                                                      (rule "notRight" (formula "41"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                                      (rule "ifEqualsNull" (formula "4"))
                                                      (rule "cnf_rightDist" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "cnf_rightDist" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "commute_or" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "4"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_to_or_left" (formula "49") (term "0,0,0,1,1,0"))
                                                      (rule "eqSymm" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "eqSymm" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "nnf_notAnd" (formula "49") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "49") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "49") (term "0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "18"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "19"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "20"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "21"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_1_19"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "26") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "26"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0"))
                                                      (rule "leq_literals" (formula "14"))
                                                      (rule "closeFalse" (formula "14"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "54") (inst "sk=i_1_18"))
                                                (rule "orRight" (formula "54"))
                                                (rule "orRight" (formula "54"))
                                                (rule "notRight" (formula "56"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_90"))
                                                (rule "simplifySelectOfAnon" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                (rule "ifEqualsNull" (formula "3"))
                                                (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_91"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                                (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "43"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "43"))
                                                (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " ( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.chosen@heap)[i_1_18]@anon_heap_LOOP«anonHeapFunction» = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_to_or_left" (formula "46") (term "0,0,0,1,1,0"))
                                                   (rule "eqSymm" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "eqSymm" (formula "46") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "46") (term "0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "46") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "46") (term "0,1,0,1,1,0"))
                                                   (rule "commute_or" (formula "46") (term "1,1,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "hideAuxiliaryEq" (formula "12"))
                                                   (rule "replace_known_left" (formula "12") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "68") (ifseqformula "12") (ifseqformula "67"))
                                                   (rule "close" (formula "68") (ifseqformula "16"))
                                                )
                                                (branch " ¬( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_91«selectSK» = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "40"))
                                                   (rule "notRight" (formula "41"))
                                                   (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                   (rule "ifEqualsNull" (formula "4"))
                                                   (rule "cnf_rightDist" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "cnf_rightDist" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_to_or_left" (formula "48") (term "0,0,0,1,1,0"))
                                                   (rule "eqSymm" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                                   (rule "eqSymm" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                   (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "18"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "19"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "commute_or_2" (formula "50") (term "0,1,0,1,1,0"))
                                                   (rule "commute_or" (formula "50") (term "1,1,0,1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_1_18"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "13"))
                                                   (rule "andLeft" (formula "27"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0"))
                                                   (rule "leq_literals" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "54") (inst "sk=i_1_17"))
                                             (rule "orRight" (formula "54"))
                                             (rule "notRight" (formula "55"))
                                             (rule "orRight" (formula "55"))
                                             (rule "inEqSimp_geqRight" (formula "56"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "56"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_88"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "43"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "ifEqualsNull" (formula "3"))
                                             (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_89"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                             (rule "ifthenelse_negated" (formula "3") (term "0"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "44"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "44"))
                                             (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                             (rule "orLeft" (formula "4"))
                                             (branch " ( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.b@heap)[i_1_17]@anon_heap_LOOP«anonHeapFunction» = null"
                                                (rule "andLeft" (formula "4"))
                                                (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_to_or_left" (formula "46") (term "0,0,0,1,1,0"))
                                                (rule "eqSymm" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "eqSymm" (formula "46") (term "1,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "46") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "46") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "46") (term "0,1,0,1,1,0"))
                                                (rule "commute_or" (formula "46") (term "1,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "hideAuxiliaryEq" (formula "14"))
                                                (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "69") (ifseqformula "14") (ifseqformula "68"))
                                                (rule "close" (formula "69") (ifseqformula "18"))
                                             )
                                             (branch " ¬( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_89«selectSK» = null"
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "orRight" (formula "40"))
                                                (rule "notRight" (formula "41"))
                                                (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "ifEqualsNull" (formula "4"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "cnf_rightDist" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "commute_or" (formula "5"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                                (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_to_or_left" (formula "49") (term "0,0,0,1,1,0"))
                                                (rule "eqSymm" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                                (rule "eqSymm" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "49") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "19"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "20"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                                (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                                (rule "allLeft" (formula "28") (inst "t=i_1_17"))
                                                (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "13"))
                                                (rule "qeq_literals" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "14"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0"))
                                                (rule "leq_literals" (formula "28"))
                                                (rule "closeFalse" (formula "28"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "54") (inst "sk=i_1_16"))
                                          (rule "orRight" (formula "54"))
                                          (rule "notRight" (formula "55"))
                                          (rule "orRight" (formula "55"))
                                          (rule "inEqSimp_leqRight" (formula "55"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "56"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_86"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "44"))
                                          (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "ifEqualsNull" (formula "3"))
                                          (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_87"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                          (rule "ifthenelse_negated" (formula "3") (term "0"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "45"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "45"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                          (rule "orLeft" (formula "4"))
                                          (branch " ( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.a@heap)[i_1_16]@anon_heap_LOOP«anonHeapFunction» = null"
                                             (rule "andLeft" (formula "4"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifthenelse_to_or_left" (formula "47") (term "0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "47") (term "1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "47") (term "1,1,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "47") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "47") (term "1,1,0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "0,0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "67") (ifseqformula "11") (ifseqformula "66"))
                                             (rule "close" (formula "67") (ifseqformula "15"))
                                          )
                                          (branch " ¬( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_87«selectSK» = null"
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "orRight" (formula "40"))
                                             (rule "notRight" (formula "41"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                             (rule "ifEqualsNull" (formula "4"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "cnf_rightDist" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifthenelse_to_or_left" (formula "49") (term "0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "49") (term "1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "nnf_notAnd" (formula "49") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "49") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "49") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "49") (term "0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "17"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "17"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or" (formula "52") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "52") (term "0,1,0,1,1,0"))
                                             (rule "allLeft" (formula "29") (inst "t=i_1_16"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "12"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "29"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0"))
                                             (rule "add_zero_right" (formula "29") (term "0"))
                                             (rule "leq_literals" (formula "29"))
                                             (rule "closeFalse" (formula "29"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "54") (inst "sk=i_1_15"))
                                       (rule "orRight" (formula "54"))
                                       (rule "notRight" (formula "55"))
                                       (rule "orRight" (formula "55"))
                                       (rule "inEqSimp_geqRight" (formula "56"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "56"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_84"))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "34") (ifseqformula "45"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_85"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                       (rule "ifthenelse_negated" (formula "3") (term "0"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "46"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "46"))
                                       (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                       (rule "orLeft" (formula "4"))
                                       (branch " ( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.msg@heap)[i_1_15]@anon_heap_LOOP«anonHeapFunction» = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "ifthenelse_to_or_left" (formula "47") (term "0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "47") (term "1,0,0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "47") (term "1,1,0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "47") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "47") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,1,1,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,1,0,1,1,0"))
                                          (rule "commute_or" (formula "47") (term "1,1,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "66") (ifseqformula "10") (ifseqformula "65"))
                                          (rule "close" (formula "66") (ifseqformula "14"))
                                       )
                                       (branch " ¬( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_85«selectSK» = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "orRight" (formula "40"))
                                          (rule "notRight" (formula "41"))
                                          (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                          (rule "ifEqualsNull" (formula "4"))
                                          (rule "cnf_rightDist" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "cnf_rightDist" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "commute_or" (formula "5"))
                                          (rule "cnf_rightDist" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "ifthenelse_to_or_left" (formula "48") (term "0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "49") (term "1,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "49") (term "0,1,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "17"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "allLeft" (formula "30") (inst "t=i_1_15"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "30"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "14"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0"))
                                          (rule "add_zero_right" (formula "14") (term "0"))
                                          (rule "leq_literals" (formula "14"))
                                          (rule "closeFalse" (formula "14"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "54") (inst "sk=i_1_14"))
                                    (rule "orRight" (formula "54"))
                                    (rule "notRight" (formula "55"))
                                    (rule "orRight" (formula "55"))
                                    (rule "inEqSimp_leqRight" (formula "55"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "56"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_80"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "33") (ifseqformula "53"))
                                    (rule "shift_paren_or" (formula "36") (term "0,0,0,1,0"))
                                    (rule "commute_or" (formula "36") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "26") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_left" (formula "44") (term "0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "44") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "44") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "44") (term "1,1,0,1,1,0"))
                                    (rule "commute_or_2" (formula "44") (term "0,1,0,1,1,0"))
                                    (rule "commute_or_2" (formula "44") (term "0,1,1,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "45") (term "0,0,1,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "50") (term "0,0,1,1,0,1,1,0"))
                                    (rule "cnf_rightDist" (formula "50") (term "1,1,0,1,1,0"))
                                    (rule "commute_or" (formula "50") (term "1,1,1,0,1,1,0"))
                                    (rule "cnf_rightDist" (formula "50") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "50") (term "1,0,1,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "50") (term "0,0,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "1,1,0,0,1,1,0,1,1,0"))
                                    (rule "qeq_literals" (formula "50") (term "1,0,0,1,1,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "commute_or_2" (formula "50") (term "1,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,1,0,1,1,0"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,0,0,1,1,0"))
                                    (rule "allLeft" (formula "35") (inst "t=i_1_14"))
                                    (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_81"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "17") (ifseqformula "54"))
                                    (rule "shift_paren_or" (formula "50") (term "0,0,1,0,1,1,0"))
                                    (rule "allLeft" (formula "46") (inst "t=i_1_14"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                    (rule "leq_literals" (formula "46") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "notLeft" (formula "46"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_82"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                    (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "29") (ifseqformula "69"))
                                    (rule "allLeft" (formula "49") (inst "t=i_1_14"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "49") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "notLeft" (formula "49"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_83"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "53") (ifseqformula "16"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "wellFormedAnon" (formula "16") (term "0,0"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,1") (ifseqformula "11"))
            (rule "wellFormedAnonEQ" (formula "18") (term "0,0,0") (ifseqformula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0") (ifseqformula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,1,0") (ifseqformula "11"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "notLeft" (formula "14"))
            (rule "notLeft" (formula "13"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "20"))
            (rule "notLeft" (formula "21"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "7"))
            (rule "eqSymm" (formula "24") (term "1,0"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "21"))
            (rule "eqSymm" (formula "27"))
            (rule "eqSymm" (formula "20"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "27")))
            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "2")) (ifInst ""  (formula "10")) (ifInst ""  (formula "17")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "12")) (ifInst ""  (formula "24")))
            (rule "closeTrue" (formula "31"))
         )
      )
   )
   (branch "Use Case"
      (rule "variableDeclarationAssign" (formula "16") (term "1,1") (userinteraction))
      (rule "variableDeclaration" (formula "16") (term "1,1") (newnames "b_2") (userinteraction))
      (rule "less_than_comparison_simple" (formula "16") (term "1,1") (userinteraction))
      (rule "methodCallEmpty" (formula "16") (term "1,1,1") (userinteraction))
      (rule "emptyModality" (formula "16") (term "1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "16"))
      (rule "impRight" (formula "16") (userinteraction))
      (rule "methodCallReturn" (formula "17") (term "1") (userinteraction))
      (rule "assignment" (formula "17") (term "1") (userinteraction))
      (rule "methodCallEmpty" (formula "17") (term "1,1") (userinteraction))
      (rule "tryEmpty" (formula "17") (term "1,1") (userinteraction))
      (rule "emptyModality" (formula "17") (term "1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "17"))
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "1"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "20"))
      (rule "notLeft" (formula "20"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "14"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "20"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andRight" (formula "33") (userinteraction))
      (branch "Case 1"
         (rule "andRight" (formula "33") (userinteraction))
         (branch "Case 1"
            (rule "array2seq2dDef" (formula "33") (term "0") (inst "u=u") (userinteraction))
            (rule "array2seq2dDef" (formula "33") (term "1") (inst "u=u") (userinteraction))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv") (userinteraction))
            (rule "andRight" (formula "33") (userinteraction))
            (branch "Case 1"
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "10"))
               (rule "eqSymm" (formula "7"))
               (rule "eqSymm" (formula "21"))
               (rule "eqSymm" (formula "23") (term "1,0"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "25"))
               (rule "eqSymm" (formula "6"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "31"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "27")))
               (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "inEqSimp_ltRight" (formula "28"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "lenOfSeqDef" (formula "31") (term "1"))
               (rule "polySimp_elimSub" (formula "31") (term "1,1"))
               (rule "times_zero_2" (formula "31") (term "1,1,1"))
               (rule "add_zero_right" (formula "31") (term "1,1"))
               (rule "lenOfSeqDef" (formula "31") (term "0"))
               (rule "polySimp_elimSub" (formula "31") (term "1,0"))
               (rule "mul_literals" (formula "31") (term "1,1,0"))
               (rule "add_zero_right" (formula "31") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
               (rule "add_zero_right" (formula "31") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18"))
               (rule "inEqSimp_commuteLeq" (formula "19"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
               (rule "apply_eq_monomials" (formula "31") (term "1,0,0,0") (ifseqformula "20"))
               (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "31") (term "1,0,0,0"))
               (rule "add_literals" (formula "31") (term "1,1,1,0,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,1,0,0,0"))
               (rule "add_zero_right" (formula "31") (term "1,0,0,0"))
               (rule "eqSymm" (formula "31"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
               (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "31") (term "0,1,0,0,0") (ifseqformula "13"))
               (rule "eqSymm" (formula "31"))
               (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "13"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
               (rule "nonNull" (formula "15") (inst "i=i_1"))
               (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")))
               (rule "greater_literals" (formula "15") (term "0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "21"))
               (rule "array2seqDef" (formula "23") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "23") (term "1,0"))
               (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "7"))
               (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "30"))
               (rule "array2seqDef" (formula "23") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "23") (term "1,0"))
               (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "eqSeqDef" (formula "21") (term "1,0") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "21") (term "0,0,1,0"))
               (rule "eqSymm" (formula "21") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "21") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,1,0"))
               (rule "getOfSeqDef" (formula "21") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "21") (term "2,0,1,0,1,1,0"))
               (rule "castDel" (formula "21") (term "1,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,2,1,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "21") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "21") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "21") (term "1,1,1,0,0,1,1,0"))
               (rule "times_zero_2" (formula "21") (term "1,1,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "1,1,1,0,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "21") (term "0,0,1,0"))
               (rule "eqSymm" (formula "21") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "21") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,1,0"))
               (rule "getOfSeqDef" (formula "21") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "21") (term "1,0,1,0,1,1,0"))
               (rule "castDel" (formula "21") (term "2,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,2,1,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "21") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,1,0,1,1,0"))
               (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_22"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "4")))
               (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "21") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "closeTrue" (formula "28"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "33") (inst "sk=iv_8") (userinteraction))
               (rule "lenOfSeqDef" (formula "33") (term "1,1,0") (userinteraction))
               (rule "impRight" (formula "33") (userinteraction))
               (rule "allLeftHide" (formula "25") (inst "t=iv_8") (userinteraction))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "11"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "23"))
               (rule "eqSymm" (formula "25") (term "1"))
               (rule "eqSymm" (formula "28"))
               (rule "eqSymm" (formula "8"))
               (rule "eqSymm" (formula "9"))
               (rule "eqSymm" (formula "21"))
               (rule "eqSymm" (formula "33"))
               (rule "eqSymm" (formula "21"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "29")))
               (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1"))
               (rule "times_zero_2" (formula "2") (term "1,1,1"))
               (rule "add_zero_right" (formula "2") (term "1,1"))
               (rule "inEqSimp_ltRight" (formula "30"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "getOfSeqDef" (formula "33") (term "1"))
               (rule "castDel" (formula "33") (term "1,1"))
               (rule "castDel" (formula "33") (term "2,1"))
               (rule "add_zero_right" (formula "33") (term "0,2,1,1,1"))
               (rule "replace_known_left" (formula "33") (term "0,0,1") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_elimSub" (formula "33") (term "1,0,1"))
               (rule "mul_literals" (formula "33") (term "1,1,0,1"))
               (rule "add_zero_right" (formula "33") (term "1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
               (rule "add_zero_right" (formula "3") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
               (rule "getOfSeqDef" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "castDel" (formula "33") (term "1,0"))
               (rule "add_zero_right" (formula "33") (term "0,2,1,1,0"))
               (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "33") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "inEqSimp_commuteLeq" (formula "21"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "applyEq" (formula "3") (term "0,1,0,0,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "15"))
               (rule "apply_eq_monomials" (formula "33") (term "1,0,0,0") (ifseqformula "22"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "33") (term "1,0,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,1,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,1,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "1,0,0,0"))
               (rule "eqSymm" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
               (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "33") (term "0,1,0,0,0") (ifseqformula "15"))
               (rule "eqSymm" (formula "33"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
               (rule "eqSymm" (formula "33"))
               (rule "polySimp_elimOne" (formula "33") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
               (rule "eqSymm" (formula "33"))
               (rule "nonNull" (formula "17") (inst "i=i_1"))
               (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "29")))
               (rule "greater_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
               (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "23"))
               (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "9"))
               (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "32"))
               (rule "array2seqDef" (formula "25") (term "0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "25") (term "1,1") (inst "u=u"))
               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_23"))
               (rule "applyEq" (formula "26") (term "1,1,2,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "26") (term "1,0,1,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "24") (term "1,1,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "26") (term "1,0,1,0,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "25") (term "1,1,2,0,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "33") (term "1,1,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "array2seqDef" (formula "32") (term "1,1") (inst "u=u"))
               (rule "eqSymm" (formula "32"))
               (rule "eqSeqDef" (formula "24") (term "1") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "24") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1"))
               (rule "times_zero_2" (formula "24") (term "1,1,1,0,1"))
               (rule "add_zero_right" (formula "24") (term "1,1,0,1"))
               (rule "getOfSeqDef" (formula "24") (term "1,1,0,1,1"))
               (rule "castDel" (formula "24") (term "2,1,1,0,1,1"))
               (rule "castDel" (formula "24") (term "1,1,1,0,1,1"))
               (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0,1,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,1,1"))
               (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,1,0,1,1"))
               (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0,1,1"))
               (rule "lenOfSeqDef" (formula "24") (term "1,1,0,0,1,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,0,1,1"))
               (rule "mul_literals" (formula "24") (term "1,1,1,1,0,0,1,1"))
               (rule "add_zero_right" (formula "24") (term "1,1,1,0,0,1,1"))
               (rule "getOfSeqDef" (formula "24") (term "0,1,0,1,1"))
               (rule "castDel" (formula "24") (term "1,0,1,0,1,1"))
               (rule "castDel" (formula "24") (term "2,0,1,0,1,1"))
               (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1,1"))
               (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1,1"))
               (rule "lenOfSeqDef" (formula "24") (term "0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,1,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0,0,1,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,1,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,1,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1"))
               (rule "array2seqDef" (formula "32") (term "1,1") (inst "u=u"))
               (rule "eqSymm" (formula "32"))
               (rule "eqSeqDef2" (formula "22") (inst "iv=iv") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "20"))
               (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "1,0"))
               (rule "times_zero_1" (formula "20") (term "0"))
               (rule "leq_literals" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "19"))
               (rule "eqSymm" (formula "29"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
               (rule "eqSymm" (formula "29"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
               (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "19"))
               (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
               (rule "eqSymm" (formula "29"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
               (rule "eqSymm" (formula "29"))
               (rule "applyEq" (formula "8") (term "1") (ifseqformula "19"))
               (rule "applyEq" (formula "13") (term "1") (ifseqformula "19"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
               (rule "pullOutSelect" (formula "21") (term "0,1,1,0,1") (inst "selectSK=arr_77"))
               (rule "applyEq" (formula "22") (term "1,1,1,1,0,1,1") (ifseqformula "21"))
               (rule "applyEq" (formula "30") (term "0,1,1,1") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "0,1,1,1,0,1,1,0,1,1") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "0,0,0,1,0,1") (ifseqformula "21"))
               (rule "applyEq" (formula "30") (term "1,2,1,1") (ifseqformula "21"))
               (rule "simplifySelectOfAnon" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "applyEqReverse" (formula "22") (term "0,1,1,0,1") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,1,1") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "30") (term "0,1,1,1") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,1,1,0,1,1") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,1") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "30") (term "1,2,1,1") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "pullOutSelect" (formula "21") (term "1,1,0,1,0,1,1") (inst "selectSK=arr_78"))
               (rule "applyEq" (formula "22") (term "0,1,1,1,0,0,1,0,1,1") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "0,0,0,0,0,1") (ifseqformula "21"))
               (rule "applyEq" (formula "30") (term "0,1,1,0") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "0,1,0,0,1") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "0,0,0,1,1,1,0,0,1,1") (ifseqformula "21"))
               (rule "applyEq" (formula "30") (term "1,2,1,0") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "0,1,1,1,1,0,0,1,1") (ifseqformula "21"))
               (rule "simplifySelectOfAnon" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0,0") (ifseqformula "11"))
               (rule "eqSymm" (formula "22") (term "1,0,1,1"))
               (rule "eqSymm" (formula "22") (term "0,1"))
               (rule "eqSymm" (formula "30"))
               (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_79"))
               (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "24"))
               (rule "nnf_notAnd" (formula "15") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "23") (term "0,1,1"))
               (rule "nnf_notAnd" (formula "23") (term "0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1"))
               (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,1"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1"))
               (rule "mul_literals" (formula "23") (term "1,0,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1"))
               (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1"))
               (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "5"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "11"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "notLeft" (formula "9"))
               (rule "nonNull" (formula "12") (inst "i=i_1"))
               (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "greater_literals" (formula "12") (term "0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "notLeft" (formula "12"))
               (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "13") (inst "i=i_1"))
               (rule "greater_literals" (formula "13") (term "0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "13"))
               (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "11") (inst "i=i_1"))
               (rule "greater_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "11"))
               (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "14") (inst "i=i_1"))
               (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "greater_literals" (formula "14") (term "0,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "10") (inst "i=i_1"))
               (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "greater_literals" (formula "10") (term "0,1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "notLeft" (formula "10"))
               (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "9") (inst "i=i_1"))
               (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "greater_literals" (formula "9") (term "0,1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "9"))
               (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "ifthenelse_negated" (formula "27") (term "0"))
               (rule "ifthenelse_negated" (formula "26") (term "0"))
               (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "14") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "25") (term "0"))
               (rule "commute_or_2" (formula "28") (term "0,1,1"))
               (rule "commute_or_2" (formula "12") (term "0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or_2" (formula "14") (term "0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "19") (ifseqformula "5"))
               (rule "replaceKnownSelect_taclet10020_2" (formula "19") (term "1,1,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10020_3" (formula "19") (term "1,1,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "20"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "20"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "21"))
               (rule "notLeft" (formula "20"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "20"))
               (rule "notLeft" (formula "19"))
               (rule "nonNull" (formula "24") (inst "i=i_1"))
               (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "greater_literals" (formula "24") (term "0,1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "23") (inst "i=i_1"))
               (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "greater_literals" (formula "23") (term "0,1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "notLeft" (formula "23"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "22") (inst "i=i_1"))
               (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "greater_literals" (formula "22") (term "0,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "andLeft" (formula "22"))
               (rule "notLeft" (formula "22"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "21") (inst "i=i_1"))
               (rule "greater_literals" (formula "21") (term "0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "sub_literals" (formula "21") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "notLeft" (formula "21"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "20") (inst "i=i_1"))
               (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "greater_literals" (formula "20") (term "0,1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "notLeft" (formula "20"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "19") (inst "i=i_1"))
               (rule "greater_literals" (formula "19") (term "0,1"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "46")))
               (rule "sub_literals" (formula "19") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
               (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_3"))
               (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
               (rule "applyEq" (formula "40") (term "0") (ifseqformula "24"))
               (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
               (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "24"))
               (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_3"))
               (rule "applyEq" (formula "39") (term "0") (ifseqformula "23"))
               (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
               (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "23"))
               (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
               (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
               (rule "hideAuxiliaryEq" (formula "23"))
               (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_3"))
               (rule "applyEq" (formula "38") (term "0") (ifseqformula "22"))
               (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
               (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "22"))
               (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
               (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
               (rule "hideAuxiliaryEq" (formula "22"))
               (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_3"))
               (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "21"))
               (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
               (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "21"))
               (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_3"))
               (rule "applyEq" (formula "36") (term "0") (ifseqformula "20"))
               (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
               (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "53")) (ifInst ""  (formula "4")))
               (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "20"))
               (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
               (rule "hideAuxiliaryEq" (formula "20"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "24") (term "0"))
               (rule "nnf_imp2or" (formula "23") (term "0"))
               (rule "nnf_imp2or" (formula "22") (term "0"))
               (rule "nnf_imp2or" (formula "21") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "24") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "23") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
               (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
               (rule "mul_literals" (formula "23") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
               (rule "mul_literals" (formula "22") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or" (formula "25") (term "0,0"))
               (rule "commute_or" (formula "30") (term "0,0"))
               (rule "commute_or" (formula "12") (term "0,0"))
               (rule "commute_or" (formula "13") (term "0,0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "ifthenelse_split" (formula "53") (term "0"))
               (branch "iv_8 ≤ -1 + i_0 TRUE"
                  (rule "eqSymm" (formula "54"))
                  (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "eqSymm" (formula "54"))
                  (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "55") (inst "iv=iv"))
                  (rule "getOfSeqDef" (formula "55") (term "1,1,0,1"))
                  (rule "castDel" (formula "55") (term "1,1,1,0,1"))
                  (rule "castDel" (formula "55") (term "2,1,1,0,1"))
                  (rule "add_zero_right" (formula "55") (term "0,2,1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,1,0,1"))
                  (rule "times_zero_2" (formula "55") (term "1,1,1,0,1,1,0,1"))
                  (rule "add_zero_right" (formula "55") (term "1,1,0,1,1,0,1"))
                  (rule "lenOfSeqDef" (formula "55") (term "1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,0,1"))
                  (rule "times_zero_2" (formula "55") (term "1,1,1,1,0,0,1"))
                  (rule "add_zero_right" (formula "55") (term "1,1,1,0,0,1"))
                  (rule "lenOfSeqDef" (formula "55") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                  (rule "times_zero_2" (formula "55") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "55") (term "1,1,0"))
                  (rule "lenOfSeqDef" (formula "55") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "55") (term "1,0,0"))
                  (rule "times_zero_2" (formula "55") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "55") (term "1,0,0"))
                  (rule "getOfSeqDef" (formula "55") (term "0,1,0,1"))
                  (rule "castDel" (formula "55") (term "2,0,1,0,1"))
                  (rule "castDel" (formula "55") (term "1,0,1,0,1"))
                  (rule "add_zero_right" (formula "55") (term "0,2,1,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,1,0,1"))
                  (rule "times_zero_2" (formula "55") (term "1,1,1,0,0,1,0,1"))
                  (rule "add_zero_right" (formula "55") (term "1,1,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,0,1"))
                  (rule "add_zero_right" (formula "55") (term "0,0,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                  (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                  (rule "add_zero_right" (formula "55") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,1,1,0,1"))
                  (rule "mul_literals" (formula "55") (term "0,1,1,0,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,1,1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "55"))
                  (rule "allRight" (formula "55") (inst "sk=iv_0"))
                  (rule "impRight" (formula "55"))
                  (rule "andLeft" (formula "1"))
                  (rule "replace_known_left" (formula "57") (term "0,0,1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "1")))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "57") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                  (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "36"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "57") (term "1,1") (inst "selectSK=arr_32"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "20"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "58") (term "1,0") (inst "selectSK=arr_33"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "21"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "mul_literals" (formula "6") (term "0,0"))
                  (rule "add_zero_left" (formula "6") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "6"))
                  (rule "leq_literals" (formula "33") (term "0"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_35"))
                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_36"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "8"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "cut_direct" (formula "41") (term "0,0"))
                  (branch "CUT: bal_0.<created> = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                     (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "8"))
                     (rule "leq_literals" (formula "25") (term "0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "ifthenelse_split" (formula "37") (term "0"))
                     (branch "self.sorted.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                        (rule "hideAuxiliaryEq" (formula "38"))
                        (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "applyEqReverse" (formula "40") (term "0,0,0,1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "39") (term "0,1,1") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "40") (term "1,1,1,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "60") (term "0,0,0,1") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "39") (term "0,0,0,1") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "38"))
                        (rule "hideAuxiliaryEq" (formula "38"))
                        (rule "commute_or_2" (formula "26") (term "0"))
                        (rule "commute_or_2" (formula "31") (term "0"))
                        (rule "commute_or_2" (formula "30") (term "0"))
                        (rule "commute_or_2" (formula "29") (term "0"))
                        (rule "commute_or_2" (formula "28") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_or" (formula "43") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_or" (formula "35") (term "0,0"))
                        (rule "commute_or" (formula "34") (term "0,0"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "ifthenelse_split" (formula "42") (term "0"))
                        (branch " result_0[iv_8]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                           (rule "eqSymm" (formula "43"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "43"))
                           (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "eqSymm" (formula "64"))
                           (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "43"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                           (rule "ifthenelse_to_or_right" (formula "45") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,1,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,1,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or" (formula "45") (term "1,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "1,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0,1,1,0"))
                           (rule "add_zero_right" (formula "45") (term "1,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "45") (term "1,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "shift_paren_or" (formula "45") (term "1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "0"))
                           (rule "distr_forallAnd" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "shift_paren_or" (formula "46") (term "0"))
                           (rule "commute_or_2" (formula "46") (term "0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "commute_or_2" (formula "46") (term "0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "shift_paren_or" (formula "45") (term "0,0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "26") (ifseqformula "47"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "38") (ifseqformula "47"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "referencedObjectIsCreatedRight" (formula "48") (ifseqformula "47"))
                                 (rule "close" (formula "48") (ifseqformula "9"))
                              )
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_to_or_left" (formula "43") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or" (formula "43") (term "1,1,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,1,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "43") (term "1,1,0"))
                                 (rule "cnf_rightDist" (formula "43") (term "0"))
                                 (rule "distr_forallAnd" (formula "43"))
                                 (rule "andLeft" (formula "43"))
                                 (rule "commute_or" (formula "44") (term "0"))
                                 (rule "shift_paren_or" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or" (formula "44") (term "1,1,0"))
                                 (rule "cnf_rightDist" (formula "44") (term "0"))
                                 (rule "distr_forallAnd" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "shift_paren_or" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1,0"))
                                 (rule "add_literals" (formula "45") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "45") (term "0,1,0"))
                                 (rule "leq_literals" (formula "45") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                 (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "1,1,0,0,0"))
                                 (rule "qeq_literals" (formula "44") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "43"))
                                    (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0"))
                                    (rule "add_literals" (formula "44") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "44") (term "0,1,0"))
                                    (rule "leq_literals" (formula "44") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "allLeft" (formula "39") (inst "t=iv_8"))
                                    (rule "replaceKnownSelect_taclet10020_4" (formula "39") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10020_5" (formula "39") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "allLeft" (formula "35") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_69"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "65")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "45") (term "0") (ifseqformula "25") (ifseqformula "63"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                                    (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "52")))
                                    (rule "true_left" (formula "15"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "25") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "notRight" (formula "58"))
                                    (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "narrowSelectArrayType" (formula "78") (term "0") (ifseqformula "19") (ifseqformula "56"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "allLeft" (formula "40") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,1"))
                                    (rule "leq_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_70"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "19") (ifseqformula "61"))
                                    (rule "ifthenelse_split" (formula "13") (term "0"))
                                    (branch " (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created>@anon_heap_newArray«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "allLeft" (formula "31") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "allLeft" (formula "29") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allLeft" (formula "53") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_74"))
                                       (rule "simplifySelectOfAnon" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                       (rule "hideAuxiliaryEq" (formula "53"))
                                       (rule "allLeft" (formula "49") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_75"))
                                       (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                       (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                       (rule "hideAuxiliaryEq" (formula "49"))
                                       (rule "narrowSelectArrayType" (formula "49") (term "0,0,0") (ifseqformula "39") (ifseqformula "79"))
                                       (rule "allLeft" (formula "36") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "allLeft" (formula "37") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "allLeft" (formula "34") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "61"))
                                       (rule "leq_literals" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "arrayLengthIsAShort" (formula "61") (term "0"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "true_left" (formula "61"))
                                       (rule "arrayLengthNotNegative" (formula "61") (term "0"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "60"))
                                       (rule "leq_literals" (formula "61") (term "0"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "true_left" (formula "61"))
                                       (rule "allLeft" (formula "41") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "allLeft" (formula "42") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "allLeft" (formula "25") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "allLeft" (formula "28") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allLeft" (formula "29") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allLeft" (formula "67") (inst "t=iv_0"))
                                       (rule "replaceKnownSelect_taclet010020_31" (formula "67") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000010020_43" (formula "67") (term "0,0,0"))
                                       (rule "eqSymm" (formula "67") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1"))
                                       (rule "add_literals" (formula "67") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "67") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "67") (term "0,0,1"))
                                       (rule "leq_literals" (formula "67") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "67"))
                                       (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "67") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "67"))
                                       (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_76"))
                                       (rule "simplifySelectOfAnon" (formula "67"))
                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "71")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,0,0") (ifseqformula "48"))
                                       (rule "replace_known_left" (formula "67") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "67"))
                                       (rule "sortsDisjointModuloNull" (formula "67") (term "0,0"))
                                       (rule "replace_known_right" (formula "67") (term "1,0,0") (ifseqformula "89"))
                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "71")))
                                       (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "71")) (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "67"))
                                       (rule "hideAuxiliaryEq" (formula "67"))
                                       (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "19") (ifseqformula "70"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "close" (formula "92") (ifseqformula "67"))
                                    )
                                    (branch " (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created>@anon_heap_newArray«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allLeft" (formula "28") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allLeft" (formula "29") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allLeft" (formula "52") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_71"))
                                       (rule "simplifySelectOfAnon" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                       (rule "hideAuxiliaryEq" (formula "52"))
                                       (rule "allLeft" (formula "48") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_72"))
                                       (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                       (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                       (rule "hideAuxiliaryEq" (formula "48"))
                                       (rule "narrowSelectArrayType" (formula "48") (term "0,0,0") (ifseqformula "38") (ifseqformula "79"))
                                       (rule "allLeft" (formula "35") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "allLeft" (formula "36") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "allLeft" (formula "33") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "arrayLengthIsAShort" (formula "59") (term "0"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "arrayLengthNotNegative" (formula "59") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "60"))
                                       (rule "leq_literals" (formula "59") (term "0"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "61"))
                                       (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "59"))
                                       (rule "leq_literals" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "allLeft" (formula "40") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "allLeft" (formula "41") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "allLeft" (formula "24") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "allLeft" (formula "27") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "allLeft" (formula "28") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allLeft" (formula "66") (inst "t=iv_0"))
                                       (rule "replaceKnownSelect_taclet010020_31" (formula "66") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1010000010020_43" (formula "66") (term "0,0,0"))
                                       (rule "eqSymm" (formula "66") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                                       (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "66") (term "0,0,1"))
                                       (rule "leq_literals" (formula "66") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=arr_73"))
                                       (rule "simplifySelectOfAnon" (formula "66"))
                                       (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "71")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,0,0") (ifseqformula "47"))
                                       (rule "replace_known_left" (formula "66") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "sortsDisjointModuloNull" (formula "66") (term "0,0"))
                                       (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "71"))
                                       (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "89")))
                                       (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "71")) (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "66"))
                                       (rule "hideAuxiliaryEq" (formula "66"))
                                       (rule "narrowSelectArrayType" (formula "66") (term "0") (ifseqformula "18") (ifseqformula "70"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "close" (formula "92") (ifseqformula "66"))
                                    )
                                 )
                                 (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "inEqSimp_geqRight" (formula "46"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "42"))
                                    (rule "closeFalse" (formula "42"))
                                 )
                              )
                           )
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "referencedObjectIsCreatedRight" (formula "48") (ifseqformula "47"))
                                 (rule "close" (formula "48") (ifseqformula "9"))
                              )
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_to_or_left" (formula "43") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or" (formula "43") (term "1,1,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,1,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "43") (term "1,1,0"))
                                 (rule "cnf_rightDist" (formula "43") (term "0"))
                                 (rule "distr_forallAnd" (formula "43"))
                                 (rule "andLeft" (formula "43"))
                                 (rule "commute_or" (formula "44") (term "0"))
                                 (rule "shift_paren_or" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or" (formula "44") (term "1,1,0"))
                                 (rule "cnf_rightDist" (formula "44") (term "0"))
                                 (rule "distr_forallAnd" (formula "44"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "shift_paren_or" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1,0"))
                                 (rule "add_literals" (formula "45") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "45") (term "0,1,0"))
                                 (rule "leq_literals" (formula "45") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                 (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "1,1,0,0,0"))
                                 (rule "qeq_literals" (formula "44") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "42"))
                                    (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "42"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0"))
                                    (rule "add_literals" (formula "44") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "44") (term "0,1,0"))
                                    (rule "leq_literals" (formula "44") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "allLeft" (formula "39") (inst "t=iv_8"))
                                    (rule "replaceKnownSelect_taclet10020_4" (formula "39") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10020_5" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "narrowSelectArrayType" (formula "65") (term "0") (ifseqformula "8") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "allLeft" (formula "35") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_51"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "64")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "45") (term "0") (ifseqformula "25") (ifseqformula "62"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "49"))
                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "41")))
                                    (rule "true_left" (formula "13"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "25") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "notRight" (formula "59"))
                                    (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "77") (term "0") (ifseqformula "19") (ifseqformula "56"))
                                    (rule "eqSymm" (formula "77"))
                                    (rule "allLeft" (formula "40") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                    (rule "leq_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_52"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "19") (ifseqformula "60"))
                                    (rule "allLeft" (formula "31") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "32") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allLeft" (formula "52") (inst "t=iv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_53"))
                                    (rule "simplifySelectOfAnon" (formula "52"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                    (rule "hideAuxiliaryEq" (formula "52"))
                                    (rule "allLeft" (formula "48") (inst "t=iv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_55"))
                                    (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                    (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "narrowSelectArrayType" (formula "48") (term "0,0,0") (ifseqformula "38") (ifseqformula "77"))
                                    (rule "allLeft" (formula "29") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allLeft" (formula "37") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "allLeft" (formula "38") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "60"))
                                    (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "61"))
                                    (rule "leq_literals" (formula "60") (term "0"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "60"))
                                    (rule "arrayLengthNotNegative" (formula "61") (term "0"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                                    (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "60"))
                                    (rule "leq_literals" (formula "61") (term "0"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "arrayLengthIsAShort" (formula "61") (term "0"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "allLeft" (formula "41") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "allLeft" (formula "42") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "allLeft" (formula "25") (inst "t=iv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "28") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allLeft" (formula "29") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allLeft" (formula "52") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_57"))
                                    (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "75")) (ifInst ""  (formula "4")))
                                    (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                    (rule "hideAuxiliaryEq" (formula "52"))
                                    (rule "narrowSelectArrayType" (formula "52") (term "0,0,0") (ifseqformula "19") (ifseqformula "74"))
                                    (rule "allLeft" (formula "56") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_58"))
                                    (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "76")) (ifInst ""  (formula "5")))
                                    (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                    (rule "hideAuxiliaryEq" (formula "56"))
                                    (rule "narrowSelectArrayType" (formula "56") (term "0,0,0") (ifseqformula "19") (ifseqformula "75"))
                                    (rule "allLeft" (formula "54") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_59"))
                                    (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "79")) (ifInst ""  (formula "6")))
                                    (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                    (rule "hideAuxiliaryEq" (formula "54"))
                                    (rule "narrowSelectArrayType" (formula "54") (term "0,0,0") (ifseqformula "19") (ifseqformula "78"))
                                    (rule "allLeft" (formula "53") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_60"))
                                    (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "77")) (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                    (rule "hideAuxiliaryEq" (formula "53"))
                                    (rule "narrowSelectArrayType" (formula "53") (term "0,0,0") (ifseqformula "19") (ifseqformula "76"))
                                    (rule "allLeft" (formula "51") (inst "t=iv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_61"))
                                    (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "74")) (ifInst ""  (formula "66")))
                                    (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                    (rule "hideAuxiliaryEq" (formula "51"))
                                    (rule "narrowSelectArrayType" (formula "51") (term "0,0,0") (ifseqformula "19") (ifseqformula "73"))
                                    (rule "allLeft" (formula "56") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_62"))
                                    (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "76")) (ifInst ""  (formula "5")))
                                    (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                    (rule "hideAuxiliaryEq" (formula "56"))
                                    (rule "narrowSelectArrayType" (formula "56") (term "0,0,0") (ifseqformula "19") (ifseqformula "75"))
                                    (rule "allLeft" (formula "52") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_63"))
                                    (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "75")) (ifInst ""  (formula "4")))
                                    (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                    (rule "hideAuxiliaryEq" (formula "52"))
                                    (rule "narrowSelectArrayType" (formula "52") (term "0,0,0") (ifseqformula "19") (ifseqformula "74"))
                                    (rule "allLeft" (formula "53") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_64"))
                                    (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "77")) (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                    (rule "hideAuxiliaryEq" (formula "53"))
                                    (rule "narrowSelectArrayType" (formula "53") (term "0,0,0") (ifseqformula "19") (ifseqformula "76"))
                                    (rule "allLeft" (formula "54") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_65"))
                                    (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "79")) (ifInst ""  (formula "6")))
                                    (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                    (rule "hideAuxiliaryEq" (formula "54"))
                                    (rule "narrowSelectArrayType" (formula "54") (term "0,0,0") (ifseqformula "19") (ifseqformula "78"))
                                    (rule "allLeft" (formula "55") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_66"))
                                    (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "78")) (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                    (rule "hideAuxiliaryEq" (formula "55"))
                                    (rule "narrowSelectArrayType" (formula "55") (term "0,0,0") (ifseqformula "19") (ifseqformula "77"))
                                    (rule "allLeft" (formula "55") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_67"))
                                    (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "78")) (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                    (rule "hideAuxiliaryEq" (formula "55"))
                                    (rule "narrowSelectArrayType" (formula "55") (term "0,0,0") (ifseqformula "19") (ifseqformula "77"))
                                    (rule "allLeft" (formula "67") (inst "t=iv_0"))
                                    (rule "replaceKnownSelect_taclet010020_31" (formula "67") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000010020_38" (formula "67") (term "0,0,0"))
                                    (rule "eqSymm" (formula "67") (term "0,0"))
                                    (rule "narrowSelectArrayType" (formula "67") (term "1,0,0") (ifseqformula "19") (ifseqformula "72"))
                                    (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1"))
                                    (rule "add_literals" (formula "67") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,1"))
                                    (rule "leq_literals" (formula "67") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "67") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_68"))
                                    (rule "simplifySelectOfAnon" (formula "67"))
                                    (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "71")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,0,0") (ifseqformula "48"))
                                    (rule "replace_known_left" (formula "67") (term "0,0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "sortsDisjointModuloNull" (formula "67") (term "0,0"))
                                    (rule "replace_known_right" (formula "67") (term "0,0,0") (ifseqformula "71"))
                                    (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "88")))
                                    (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "71")) (ifInst ""  (formula "1")))
                                    (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "67"))
                                    (rule "hideAuxiliaryEq" (formula "67"))
                                    (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "19") (ifseqformula "70"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "close" (formula "91") (ifseqformula "67"))
                                 )
                                 (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "inEqSimp_geqRight" (formula "46"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "42"))
                                    (rule "closeFalse" (formula "42"))
                                 )
                              )
                           )
                        )
                        (branch " result_0[iv_8]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                           (rule "eqSymm" (formula "42"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_geqRight" (formula "45"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0"))
                           (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                           (rule "ifthenelse_to_or_right" (formula "45") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,1,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,1,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or" (formula "45") (term "1,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "1,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0,1,1,0"))
                           (rule "add_zero_right" (formula "45") (term "1,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "45") (term "1,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "shift_paren_or" (formula "45") (term "1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "0"))
                           (rule "distr_forallAnd" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "shift_paren_or" (formula "46") (term "0"))
                           (rule "commute_or_2" (formula "46") (term "0,0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "46") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "3"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "39") (ifseqformula "47"))
                              (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "27") (ifseqformula "47"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "46") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "replace_known_left" (formula "68") (term "0,1") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "replace_known_left" (formula "45") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradEq7" (formula "44") (term "1") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "44") (term "0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "closeFalse" (formula "44"))
                              )
                              (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                 (rule "replace_known_right" (formula "45") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_right" (formula "44") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_geqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "times_zero_2" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "67") (term "0,1") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "replace_known_left" (formula "45") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_left" (formula "46") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradEq7" (formula "44") (term "1") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "44") (term "0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "closeFalse" (formula "44"))
                              )
                              (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                 (rule "replace_known_right" (formula "45") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_right" (formula "44") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_geqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "times_zero_2" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                        )
                     )
                     (branch "self.sorted.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "43"))
                        (rule "close" (formula "42") (ifseqformula "10"))
                     )
                  )
                  (branch "CUT: bal_0.<created> = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                     (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "8"))
                     (rule "leq_literals" (formula "25") (term "0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "ifthenelse_split" (formula "37") (term "0"))
                     (branch "self.sorted.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                        (rule "hideAuxiliaryEq" (formula "38"))
                        (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "40") (term "0,0,0,1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "40") (term "1,1,1,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "61") (term "0,0,0,1") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "39") (term "0,1,1") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "39") (term "0,0,0,1") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "38"))
                        (rule "hideAuxiliaryEq" (formula "38"))
                        (rule "commute_or_2" (formula "26") (term "0"))
                        (rule "commute_or_2" (formula "31") (term "0"))
                        (rule "commute_or_2" (formula "30") (term "0"))
                        (rule "commute_or_2" (formula "29") (term "0"))
                        (rule "commute_or_2" (formula "28") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_or" (formula "43") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_or" (formula "35") (term "0,0"))
                        (rule "commute_or" (formula "34") (term "0,0"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "ifthenelse_split" (formula "42") (term "0"))
                        (branch " result_0[iv_8]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                           (rule "eqSymm" (formula "43"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "43"))
                           (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "eqSymm" (formula "65"))
                           (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "43"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                           (rule "ifthenelse_to_or_left" (formula "45") (term "0,0,0"))
                           (rule "eqSymm" (formula "45") (term "1,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "eqSymm" (formula "45") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,1,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,1,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,0"))
                           (rule "commute_or" (formula "45") (term "1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "1,1,0"))
                           (rule "commute_or" (formula "45") (term "1,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "0"))
                           (rule "distr_forallAnd" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "commute_or" (formula "46") (term "0"))
                           (rule "shift_paren_or" (formula "45") (term "0"))
                           (rule "commute_or_2" (formula "45") (term "0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "commute_or_2" (formula "46") (term "0,1,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "46") (term "0,0,1,0"))
                           (rule "add_zero_right" (formula "46") (term "1,1,0,0,1,0"))
                           (rule "qeq_literals" (formula "46") (term "1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "commute_or_2" (formula "46") (term "0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0"))
                           (rule "shift_paren_or" (formula "46") (term "0,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "46") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "46") (term "0,1,0"))
                           (rule "add_literals" (formula "46") (term "1,0,1,0"))
                           (rule "times_zero_1" (formula "46") (term "0,1,0"))
                           (rule "leq_literals" (formula "46") (term "1,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "commute_or" (formula "45") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "26") (ifseqformula "46"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "38") (ifseqformula "46"))
                              (rule "ifthenelse_to_or_left" (formula "44") (term "0,0,0"))
                              (rule "eqSymm" (formula "44") (term "1,0,0,0,0"))
                              (rule "eqSymm" (formula "44") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "44") (term "0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or" (formula "44") (term "1,1,0"))
                              (rule "commute_or_2" (formula "44") (term "0,1,0"))
                              (rule "commute_or" (formula "44") (term "0,0,1,0"))
                              (rule "cnf_rightDist" (formula "44") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "44") (term "0"))
                              (rule "distr_forallAnd" (formula "44"))
                              (rule "andLeft" (formula "44"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or" (formula "45") (term "0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "45") (term "0"))
                              (rule "distr_forallAnd" (formula "45"))
                              (rule "andLeft" (formula "45"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "shift_paren_or" (formula "46") (term "0"))
                              (rule "commute_or_2" (formula "46") (term "0,0"))
                              (rule "shift_paren_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0"))
                              (rule "add_literals" (formula "45") (term "1,1,0,0"))
                              (rule "qeq_literals" (formula "45") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                              (rule "commute_or" (formula "44") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "48"))
                                 (rule "close" (formula "47") (ifseqformula "9"))
                              )
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "42"))
                                    (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0"))
                                    (rule "add_literals" (formula "44") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "44") (term "0,1,0"))
                                    (rule "leq_literals" (formula "44") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "allLeft" (formula "35") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_42"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "45") (term "0") (ifseqformula "25") (ifseqformula "64"))
                                    (rule "allLeft" (formula "39") (inst "t=iv_8"))
                                    (rule "replaceKnownSelect_taclet10020_4" (formula "39") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10020_5" (formula "39") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "25") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "notRight" (formula "58"))
                                    (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "narrowSelectArrayType" (formula "79") (term "0") (ifseqformula "19") (ifseqformula "56"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "ifthenelse_split" (formula "13") (term "0"))
                                    (branch " (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created>@anon_heap_newArray«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "allLeft" (formula "40") (inst "t=iv_8"))
                                       (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "notLeft" (formula "40"))
                                       (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_47"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "52")))
                                       (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "19") (ifseqformula "62"))
                                       (rule "allLeft" (formula "31") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "allLeft" (formula "34") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "32") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allLeft" (formula "36") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "allLeft" (formula "54") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_48"))
                                       (rule "simplifySelectOfAnon" (formula "54"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                       (rule "hideAuxiliaryEq" (formula "54"))
                                       (rule "allLeft" (formula "50") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_49"))
                                       (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "82")) (ifInst ""  (formula "83")))
                                       (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                       (rule "hideAuxiliaryEq" (formula "50"))
                                       (rule "narrowSelectArrayType" (formula "50") (term "0,0,0") (ifseqformula "40") (ifseqformula "81"))
                                       (rule "allLeft" (formula "29") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "61"))
                                       (rule "leq_literals" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "arrayLengthIsAShort" (formula "61") (term "0"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "true_left" (formula "61"))
                                       (rule "arrayLengthNotNegative" (formula "61") (term "0"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "60"))
                                       (rule "leq_literals" (formula "61") (term "0"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "true_left" (formula "61"))
                                       (rule "allLeft" (formula "62") (inst "t=iv_0"))
                                       (rule "replaceKnownSelect_taclet010020_31" (formula "62") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010001010020_41" (formula "62") (term "0,0,0"))
                                       (rule "eqSymm" (formula "62") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                       (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "62") (term "0,0,1"))
                                       (rule "leq_literals" (formula "62") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "62") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_50"))
                                       (rule "simplifySelectOfAnon" (formula "62"))
                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "66")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,1,0,0") (ifseqformula "43"))
                                       (rule "replace_known_left" (formula "62") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "sortsDisjointModuloNull" (formula "62") (term "0,0"))
                                       (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "85"))
                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "66")))
                                       (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "66")) (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                       (rule "hideAuxiliaryEq" (formula "62"))
                                       (rule "narrowSelectArrayType" (formula "62") (term "0") (ifseqformula "19") (ifseqformula "65"))
                                       (rule "eqSymm" (formula "62"))
                                       (rule "close" (formula "88") (ifseqformula "62"))
                                    )
                                    (branch " (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created>@anon_heap_newArray«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "allLeft" (formula "39") (inst "t=iv_8"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "notLeft" (formula "39"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_43"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "55") (term "0") (ifseqformula "18") (ifseqformula "62"))
                                       (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allLeft" (formula "33") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allLeft" (formula "28") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allLeft" (formula "52") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_44"))
                                       (rule "simplifySelectOfAnon" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                       (rule "hideAuxiliaryEq" (formula "52"))
                                       (rule "allLeft" (formula "29") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allLeft" (formula "33") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allLeft" (formula "50") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_45"))
                                       (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "83")) (ifInst ""  (formula "84")))
                                       (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                       (rule "hideAuxiliaryEq" (formula "50"))
                                       (rule "narrowSelectArrayType" (formula "50") (term "0,0,0") (ifseqformula "40") (ifseqformula "82"))
                                       (rule "allLeft" (formula "37") (inst "t=iv_8"))
                                       (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "arrayLengthIsAShort" (formula "59") (term "0"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "arrayLengthNotNegative" (formula "59") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "60"))
                                       (rule "leq_literals" (formula "59") (term "0"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "61"))
                                       (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "59"))
                                       (rule "leq_literals" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "allLeft" (formula "61") (inst "t=iv_0"))
                                       (rule "replaceKnownSelect_taclet010020_31" (formula "61") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1010001010020_41" (formula "61") (term "0,0,0"))
                                       (rule "eqSymm" (formula "61") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                       (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                       (rule "leq_literals" (formula "61") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_46"))
                                       (rule "simplifySelectOfAnon" (formula "61"))
                                       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "66")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0") (ifseqformula "42"))
                                       (rule "replace_known_left" (formula "61") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "sortsDisjointModuloNull" (formula "61") (term "0,0"))
                                       (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "85"))
                                       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "66")))
                                       (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "66")) (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "61"))
                                       (rule "hideAuxiliaryEq" (formula "61"))
                                       (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "18") (ifseqformula "65"))
                                       (rule "eqSymm" (formula "61"))
                                       (rule "close" (formula "88") (ifseqformula "61"))
                                    )
                                 )
                                 (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "inEqSimp_geqRight" (formula "46"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "42"))
                                    (rule "closeFalse" (formula "42"))
                                 )
                              )
                           )
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_to_or_left" (formula "44") (term "0,0,0"))
                              (rule "eqSymm" (formula "44") (term "1,0,0,0,0"))
                              (rule "eqSymm" (formula "44") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "44") (term "0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or" (formula "44") (term "1,1,0"))
                              (rule "commute_or_2" (formula "44") (term "0,1,0"))
                              (rule "commute_or" (formula "44") (term "0,0,1,0"))
                              (rule "cnf_rightDist" (formula "44") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "44") (term "0"))
                              (rule "distr_forallAnd" (formula "44"))
                              (rule "andLeft" (formula "44"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or" (formula "45") (term "0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "45") (term "0"))
                              (rule "distr_forallAnd" (formula "45"))
                              (rule "andLeft" (formula "45"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "shift_paren_or" (formula "46") (term "0"))
                              (rule "commute_or_2" (formula "46") (term "0,0"))
                              (rule "shift_paren_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0"))
                              (rule "add_zero_right" (formula "45") (term "1,1,0,0"))
                              (rule "qeq_literals" (formula "45") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                              (rule "commute_or" (formula "44") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "referencedObjectIsCreatedRight" (formula "48") (ifseqformula "47"))
                                 (rule "close" (formula "48") (ifseqformula "9"))
                              )
                              (branch " ¬self.sorted[iv_8] = null ∧ ¬self.sorted[iv_8].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "42"))
                                    (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0"))
                                    (rule "add_literals" (formula "44") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "44") (term "0,1,0"))
                                    (rule "leq_literals" (formula "44") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "allLeft" (formula "39") (inst "t=iv_8"))
                                    (rule "replaceKnownSelect_taclet10020_4" (formula "39") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10020_5" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "narrowSelectArrayType" (formula "66") (term "0") (ifseqformula "8") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "allLeft" (formula "35") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_37"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "65")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "45") (term "0") (ifseqformula "25") (ifseqformula "63"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "42")))
                                    (rule "true_left" (formula "14"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "25") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "notRight" (formula "59"))
                                    (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "78") (term "0") (ifseqformula "19") (ifseqformula "56"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "allLeft" (formula "40") (inst "t=iv_8"))
                                    (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                    (rule "leq_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "19") (ifseqformula "61"))
                                    (rule "allLeft" (formula "33") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "51") (inst "t=iv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_39"))
                                    (rule "simplifySelectOfAnon" (formula "51"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                    (rule "hideAuxiliaryEq" (formula "51"))
                                    (rule "allLeft" (formula "34") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "allLeft" (formula "31") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "29") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allLeft" (formula "50") (inst "t=iv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_40"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "81")) (ifInst ""  (formula "82")))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "narrowSelectArrayType" (formula "50") (term "0,0,0") (ifseqformula "40") (ifseqformula "80"))
                                    (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allLeft" (formula "34") (inst "t=iv_8"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "60"))
                                    (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "61"))
                                    (rule "leq_literals" (formula "60") (term "0"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "60"))
                                    (rule "arrayLengthIsAShort" (formula "61") (term "0"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "arrayLengthNotNegative" (formula "61") (term "0"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                                    (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "60"))
                                    (rule "leq_literals" (formula "61") (term "0"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "allLeft" (formula "62") (inst "t=iv_0"))
                                    (rule "replaceKnownSelect_taclet010020_31" (formula "62") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011001010020_38" (formula "62") (term "0,0,0"))
                                    (rule "eqSymm" (formula "62") (term "0,0"))
                                    (rule "narrowSelectArrayType" (formula "62") (term "1,0,0") (ifseqformula "19") (ifseqformula "67"))
                                    (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                    (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                    (rule "leq_literals" (formula "62") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_41"))
                                    (rule "simplifySelectOfAnon" (formula "62"))
                                    (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "66")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,1,0,0") (ifseqformula "43"))
                                    (rule "replace_known_left" (formula "62") (term "0,0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "sortsDisjointModuloNull" (formula "62") (term "0,0"))
                                    (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "84")))
                                    (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "66")) (ifInst ""  (formula "1")))
                                    (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                    (rule "hideAuxiliaryEq" (formula "62"))
                                    (rule "narrowSelectArrayType" (formula "62") (term "0") (ifseqformula "19") (ifseqformula "65"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "close" (formula "87") (ifseqformula "62"))
                                 )
                                 (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "inEqSimp_geqRight" (formula "46"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "42"))
                                    (rule "closeFalse" (formula "42"))
                                 )
                              )
                           )
                        )
                        (branch " result_0[iv_8]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                           (rule "eqSymm" (formula "42"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_geqRight" (formula "45"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0"))
                           (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "ifthenelse_to_or_left" (formula "45") (term "0,0,0"))
                           (rule "eqSymm" (formula "45") (term "1,0,0,0,0"))
                           (rule "eqSymm" (formula "45") (term "1,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,1,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,1,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or" (formula "45") (term "1,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,0"))
                           (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "1,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0,1,1,0"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "45") (term "1,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "commute_or" (formula "45") (term "1,1,0"))
                           (rule "cnf_rightDist" (formula "45") (term "0"))
                           (rule "distr_forallAnd" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "shift_paren_or" (formula "46") (term "0"))
                           (rule "commute_or_2" (formula "46") (term "0,0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "46") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "3"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "39") (ifseqformula "47"))
                              (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "27") (ifseqformula "47"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "45") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_left" (formula "69") (term "0,1") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "69"))
                                 (rule "replace_known_left" (formula "46") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradEq7" (formula "44") (term "1") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "44") (term "0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "closeFalse" (formula "44"))
                              )
                              (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                 (rule "replace_known_right" (formula "44") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "replace_known_right" (formula "45") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_geqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "times_zero_2" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                           (branch " ¬ result_0[iv_8]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (result_0[iv_8]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch "self.sorted[iv_8].length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "68") (term "0,1") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "replace_known_left" (formula "45") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_left" (formula "46") (term "0,1,1,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradEq7" (formula "44") (term "1") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "44"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch "self.sorted[iv_8].length ≥ 1 FALSE"
                                 (rule "replace_known_right" (formula "45") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_right" (formula "44") (term "0,1,1,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_geqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                        )
                     )
                     (branch "self.sorted.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "44"))
                        (rule "close" (formula "42") (ifseqformula "10"))
                     )
                  )
               )
               (branch "iv_8 ≤ -1 + i_0 FALSE"
                  (rule "eqSymm" (formula "54"))
                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "53")))
                  (rule "closeTrue" (formula "54"))
               )
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "10"))
            (rule "eqSymm" (formula "20"))
            (rule "eqSymm" (formula "19"))
            (rule "eqSymm" (formula "25"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "7"))
            (rule "eqSymm" (formula "22") (term "1,0"))
            (rule "eqSymm" (formula "20"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "27")))
            (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
            (rule "inEqSimp_ltRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "18"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "15") (inst "i=i_1"))
            (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")))
            (rule "greater_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "7"))
            (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "30"))
            (rule "array2seqDef" (formula "23") (term "1,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "23") (term "1,0"))
            (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "21"))
            (rule "nonNull" (formula "31") (term "1") (inst "i=i_1"))
            (rule "sub_literals" (formula "31") (term "2,1,0,1,1,1"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "27")))
            (rule "greater_literals" (formula "31") (term "0,1"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1"))
            (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1"))
            (rule "array2seqDef" (formula "23") (term "1,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "23") (term "1,0"))
            (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "eqSeqDef" (formula "22") (term "1,0") (inst "iv=iv"))
            (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
            (rule "eqSymm" (formula "22") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "22") (term "1,1,1,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
            (rule "getOfSeqDef" (formula "22") (term "1,1,0,1,1,0"))
            (rule "castDel" (formula "22") (term "2,1,1,0,1,1,0"))
            (rule "castDel" (formula "22") (term "1,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
            (rule "mul_literals" (formula "22") (term "1,1,1,0,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0"))
            (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,1,1,0"))
            (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1,1,0"))
            (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0"))
            (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0"))
            (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1,1,0"))
            (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1,1,0"))
            (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0"))
            (rule "eqSymm" (formula "22") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "22") (term "1,1,1,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "1,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
            (rule "eqSymm" (formula "22") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
            (rule "eqSymm" (formula "22") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
            (rule "eqSymm" (formula "22") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0"))
            (rule "eqSymm" (formula "22") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0"))
            (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_21"))
            (rule "applyEq" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "25") (term "0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "19"))
            (rule "simplifySelectOfAnon" (formula "19"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1,0,0") (ifseqformula "10"))
            (rule "replace_known_left" (formula "19") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "sortsDisjointModuloNull" (formula "19") (term "0,0"))
            (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "21") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
            (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
            (rule "inEqSimp_homoInEq1" (formula "19"))
            (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
            (rule "add_literals" (formula "19") (term "1,0"))
            (rule "times_zero_1" (formula "19") (term "0"))
            (rule "leq_literals" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "17"))
            (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "17"))
            (rule "applyEq" (formula "27") (term "1,1,1,0,0,1") (ifseqformula "17"))
            (rule "applyEq" (formula "6") (term "1") (ifseqformula "17"))
            (rule "applyEq" (formula "11") (term "1") (ifseqformula "17"))
            (rule "nnf_imp2or" (formula "19") (term "0"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0,1"))
            (rule "nnf_notAnd" (formula "19") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
            (rule "mul_literals" (formula "19") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "20"))
            (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,1,0"))
            (rule "commute_or_2" (formula "13") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "3"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "nonNull" (formula "11") (inst "i=i_1"))
            (rule "greater_literals" (formula "11") (term "0,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "sub_literals" (formula "11") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "12") (inst "i=i_1"))
            (rule "greater_literals" (formula "12") (term "0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "sub_literals" (formula "12") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "12"))
            (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "9") (inst "i=i_1"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "10") (inst "i=i_1"))
            (rule "greater_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "sub_literals" (formula "10") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "8") (inst "i=i_1"))
            (rule "greater_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "sub_literals" (formula "8") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "8"))
            (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "7") (inst "i=i_1"))
            (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "greater_literals" (formula "7") (term "0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or" (formula "18") (term "0,0"))
            (rule "commute_or_2" (formula "24") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "ifthenelse_to_or_left" (formula "24") (term "0,1,0"))
            (rule "eqSymm" (formula "24") (term "1,1,0,1,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "eqSymm" (formula "24") (term "1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,1,1,0,1,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1,0,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,1,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,1,0,1,0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet1020_1" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_2" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "19"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "18"))
            (rule "notLeft" (formula "17"))
            (rule "nonNull" (formula "22") (inst "i=i_1"))
            (rule "greater_literals" (formula "22") (term "0,1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "sub_literals" (formula "22") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "21") (inst "i=i_1"))
            (rule "greater_literals" (formula "21") (term "0,1"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "sub_literals" (formula "21") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "20") (inst "i=i_1"))
            (rule "greater_literals" (formula "20") (term "0,1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "sub_literals" (formula "20") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "19") (inst "i=i_1"))
            (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "greater_literals" (formula "19") (term "0,1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "18") (inst "i=i_1"))
            (rule "greater_literals" (formula "18") (term "0,1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "sub_literals" (formula "18") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "17") (inst "i=i_1"))
            (rule "greater_literals" (formula "17") (term "0,1"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "42")))
            (rule "sub_literals" (formula "17") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
            (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
            (rule "applyEq" (formula "36") (term "0") (ifseqformula "22"))
            (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "53")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
            (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
            (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "22"))
            (rule "hideAuxiliaryEq" (formula "22"))
            (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "21"))
            (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "52")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "21"))
            (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
            (rule "hideAuxiliaryEq" (formula "21"))
            (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
            (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "20"))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "51")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
            (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "20"))
            (rule "hideAuxiliaryEq" (formula "20"))
            (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_1"))
            (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "19"))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "50")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_1"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
            (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "49")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
            (rule "hideAuxiliaryEq" (formula "18"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_imp2or" (formula "21") (term "0"))
            (rule "nnf_imp2or" (formula "20") (term "0"))
            (rule "nnf_imp2or" (formula "19") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
            (rule "mul_literals" (formula "19") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "49") (term "0") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet1020_0" (formula "49") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_2" (formula "49") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "nonNull" (formula "49") (term "1,0,0,0,0,0") (inst "i=i_1"))
            (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1,1,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
            (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0") (inst "i=i_1"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
            (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0") (inst "i=i_1"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
            (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i_1"))
            (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
            (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0,0") (inst "i=i_1"))
            (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
            (rule "nonNull" (formula "49") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i_1"))
            (rule "greater_literals" (formula "49") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "31")))
            (rule "sub_literals" (formula "49") (term "2,1,0,1,0,0,0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "applyEq" (formula "49") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_5" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_6" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "applyEqReverse" (formula "50") (term "0,0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,1,0,0") (ifseqformula "41"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_2"))
            (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_17" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_18" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_2"))
            (rule "applyEq" (formula "50") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_15" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_16" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_2"))
            (rule "applyEq" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_23" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_24" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_2"))
            (rule "applyEq" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_19" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_20" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_3" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_4" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "applyEqReverse" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_2"))
            (rule "applyEq" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_21" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_22" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_9" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_10" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
            (rule "applyEqReverse" (formula "50") (term "0,0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,1,0,0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_11" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_12" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "applyEqReverse" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_7" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_8" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
            (rule "applyEqReverse" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "replaceKnownSelect_taclet1020_13" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1020_14" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
            (rule "applyEqReverse" (formula "50") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "49") (term "0,0,0,0,0,0,0,0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or_2" (formula "7") (term "0"))
            (rule "commute_or" (formula "28") (term "0,0"))
            (rule "commute_or" (formula "11") (term "0,0"))
            (rule "commute_or" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "9") (term "0,0"))
            (rule "commute_or" (formula "10") (term "0,0"))
            (rule "commute_or" (formula "29") (term "1,0,1,0"))
            (rule "commute_or" (formula "29") (term "0,0,1,1,0"))
            (rule "arrayLengthNotNegative" (formula "6") (term "0"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
            (rule "cut_direct" (formula "30") (term "0,0"))
            (branch "CUT: bal_0.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "arrayLengthIsAShort" (formula "6") (term "0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "arrayLengthNotNegative" (formula "16") (term "0"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
               (rule "arrayLengthIsAShort" (formula "16") (term "0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "ifthenelse_to_or_left" (formula "29") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "29") (term "1,1,1,0,0,1,0"))
               (rule "eqSymm" (formula "29") (term "1,0,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,1,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or_2" (formula "22") (term "0"))
               (rule "commute_or_2" (formula "21") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "19") (term "0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "nnf_imp2or" (formula "50") (term "0,1,0"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
               (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "nnf_imp2or" (formula "52") (term "0,1,0,0"))
               (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "nnf_imp2or" (formula "53") (term "0,1,0,0,0"))
               (rule "nnf_imp2or" (formula "53") (term "0,1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "53") (term "0,0,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "53") (term "0,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "53") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "53") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "53") (term "0,0,0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0,0,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "commute_or" (formula "8") (term "0,0"))
               (rule "commute_or" (formula "7") (term "0,0"))
               (rule "commute_or" (formula "21") (term "0,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "commute_or" (formula "25") (term "0,0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
               (rule "inEqSimp_or_subsumption5" (formula "33") (term "1,0,0,1,0"))
               (rule "greater_literals" (formula "33") (term "0,1,0,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "andRight" (formula "53"))
               (branch "Case 1"
                  (rule "andRight" (formula "53"))
                  (branch "Case 1"
                     (rule "andRight" (formula "53"))
                     (branch "Case 1"
                        (rule "andRight" (formula "53"))
                        (branch "Case 1"
                           (rule "andRight" (formula "53"))
                           (branch "Case 1"
                              (rule "andRight" (formula "53"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "53") (inst "sk=i_1_13"))
                                 (rule "orRight" (formula "53"))
                                 (rule "notRight" (formula "54"))
                                 (rule "orRight" (formula "54"))
                                 (rule "inEqSimp_leqRight" (formula "54"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "55"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_30"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "39")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "33") (ifseqformula "39"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,0") (inst "selectSK=arr_31"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "40"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "2") (term "0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "commute_and" (formula "5") (term "0"))
                                 (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                 (rule "orLeft" (formula "5"))
                                 (branch " arr_31«selectSK» = null ∧ ( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)"
                                    (rule "andLeft" (formula "5"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                    (rule "ifEqualsNull" (formula "4"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "cnf_rightDist" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "commute_or" (formula "5"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_right" (formula "49") (term "0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "nnf_notAnd" (formula "49") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "49") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                                    (rule "allLeft" (formula "25") (inst "t=i_1_13"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "closeFalse" (formula "14"))
                                 )
                                 (branch " ¬( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE) ∧ (self.sorted@heap)[i_1_13]@anon_heap_LOOP«anonHeapFunction» = null"
                                    (rule "andLeft" (formula "5"))
                                    (rule "notLeft" (formula "5"))
                                    (rule "orRight" (formula "40"))
                                    (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                    (rule "close" (formula "40") (ifseqformula "7"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "53") (inst "sk=i_1_12"))
                                 (rule "orRight" (formula "53"))
                                 (rule "notRight" (formula "54"))
                                 (rule "orRight" (formula "54"))
                                 (rule "inEqSimp_geqRight" (formula "55"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "55"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_28"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "40"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_29"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "41"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "41"))
                                 (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                 (rule "orLeft" (formula "4"))
                                 (branch " ( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.encrypted@heap)[i_1_12]@anon_heap_LOOP«anonHeapFunction» = null"
                                    (rule "andLeft" (formula "4"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_left" (formula "50") (term "0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "eqSymm" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "50") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "68") (ifseqformula "15") (ifseqformula "67"))
                                    (rule "close" (formula "68") (ifseqformula "18"))
                                 )
                                 (branch " ¬( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_29«selectSK» = null"
                                    (rule "andLeft" (formula "4"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "orRight" (formula "40"))
                                    (rule "notRight" (formula "41"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                    (rule "ifEqualsNull" (formula "4"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "cnf_rightDist" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "commute_or" (formula "5"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_right" (formula "52") (term "0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "19"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "commute_or" (formula "51") (term "1,1,0,1,1,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,1,0,1,1,0"))
                                    (rule "allLeft" (formula "26") (inst "t=i_1_12"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                    (rule "leq_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "closeFalse" (formula "12"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "53") (inst "sk=i_1_11"))
                              (rule "orRight" (formula "53"))
                              (rule "orRight" (formula "53"))
                              (rule "notRight" (formula "55"))
                              (rule "inEqSimp_leqRight" (formula "54"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "55"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_26"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "42"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "ifEqualsNull" (formula "3"))
                              (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_27"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "43"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "43"))
                              (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                              (rule "orLeft" (formula "4"))
                              (branch " ( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.chosen@heap)[i_1_11]@anon_heap_LOOP«anonHeapFunction» = null"
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "replace_known_left" (formula "10") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "10") (ifseqformula "62"))
                                 (rule "close" (formula "63") (ifseqformula "13"))
                              )
                              (branch " ¬( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_27«selectSK» = null"
                                 (rule "andLeft" (formula "4"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "orRight" (formula "40"))
                                 (rule "notRight" (formula "41"))
                                 (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                 (rule "ifEqualsNull" (formula "4"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "cnf_rightDist" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "16"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_to_or_left" (formula "50") (term "0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "50") (term "1,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "50") (term "1,1,0,0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "17"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                                 (rule "allLeft" (formula "28") (inst "t=i_1_11"))
                                 (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "13"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "53") (inst "sk=i_1_10"))
                           (rule "orRight" (formula "53"))
                           (rule "orRight" (formula "53"))
                           (rule "notRight" (formula "55"))
                           (rule "inEqSimp_geqRight" (formula "55"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "55"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_24"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "41"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_25"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                           (rule "ifthenelse_negated" (formula "3") (term "0"))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "42"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "42"))
                           (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                           (rule "orLeft" (formula "4"))
                           (branch " ( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.b@heap)[i_1_10]@anon_heap_LOOP«anonHeapFunction» = null"
                              (rule "andLeft" (formula "4"))
                              (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                              (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "7"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "11"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifthenelse_to_or_left" (formula "50") (term "0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "50") (term "1,1,0,0,0,1,1,0"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "eqSymm" (formula "50") (term "1,0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "50") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "50") (term "0,1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "16"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "68") (ifseqformula "14") (ifseqformula "67"))
                              (rule "close" (formula "68") (ifseqformula "17"))
                           )
                           (branch " ¬( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_25«selectSK» = null"
                              (rule "andLeft" (formula "4"))
                              (rule "notLeft" (formula "4"))
                              (rule "orRight" (formula "40"))
                              (rule "notRight" (formula "41"))
                              (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                              (rule "ifEqualsNull" (formula "4"))
                              (rule "cnf_rightDist" (formula "4"))
                              (rule "andLeft" (formula "4"))
                              (rule "commute_or" (formula "4"))
                              (rule "cnf_rightDist" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "commute_or" (formula "5"))
                              (rule "cnf_rightDist" (formula "4"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "commute_or" (formula "4"))
                              (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                              (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "9"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "17"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "18"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "ifthenelse_to_or_right" (formula "50") (term "0,0,0,1,1,0"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "16"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                              (rule "allLeft" (formula "30") (inst "t=i_1_10"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "30") (term "0,0,1"))
                              (rule "leq_literals" (formula "30") (term "0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "closeFalse" (formula "12"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "53") (inst "sk=i_1_9"))
                        (rule "orRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "notRight" (formula "55"))
                        (rule "inEqSimp_leqRight" (formula "54"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "55"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_22"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "44"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_23"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "45"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "45"))
                        (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                        (rule "orLeft" (formula "4"))
                        (branch " ( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.a@heap)[i_1_9]@anon_heap_LOOP«anonHeapFunction» = null"
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                           (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "hideAuxiliaryEq" (formula "9"))
                           (rule "replace_known_left" (formula "9") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "9") (ifseqformula "62"))
                           (rule "close" (formula "63") (ifseqformula "12"))
                        )
                        (branch " ¬( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_23«selectSK» = null"
                           (rule "andLeft" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "orRight" (formula "40"))
                           (rule "notRight" (formula "41"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "ifEqualsNull" (formula "4"))
                           (rule "cnf_rightDist" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "cnf_rightDist" (formula "5"))
                           (rule "andLeft" (formula "5"))
                           (rule "commute_or" (formula "5"))
                           (rule "cnf_rightDist" (formula "4"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "16"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ifthenelse_to_or_left" (formula "50") (term "0,0,0,1,1,0"))
                           (rule "eqSymm" (formula "50") (term "1,0,0,0,0,1,1,0"))
                           (rule "eqSymm" (formula "50") (term "1,1,0,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                           (rule "allLeft" (formula "32") (inst "t=i_1_9"))
                           (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "32") (term "0,0,1"))
                           (rule "leq_literals" (formula "32") (term "0,1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "closeFalse" (formula "32"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "53") (inst "sk=i_1_8"))
                     (rule "orRight" (formula "53"))
                     (rule "orRight" (formula "53"))
                     (rule "notRight" (formula "55"))
                     (rule "inEqSimp_leqRight" (formula "54"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "55"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_20"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "43"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_21"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "44"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "44"))
                     (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                     (rule "orLeft" (formula "4"))
                     (branch " ( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.msg@heap)[i_1_8]@anon_heap_LOOP«anonHeapFunction» = null"
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                        (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "hideAuxiliaryEq" (formula "10"))
                        (rule "replace_known_left" (formula "10") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "referencedObjectIsCreatedRightEQ" (formula "64") (ifseqformula "10") (ifseqformula "63"))
                        (rule "close" (formula "64") (ifseqformula "13"))
                     )
                     (branch " ¬( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_21«selectSK» = null"
                        (rule "andLeft" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "orRight" (formula "40"))
                        (rule "notRight" (formula "41"))
                        (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "ifEqualsNull" (formula "4"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "commute_or" (formula "5"))
                        (rule "cnf_rightDist" (formula "4"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "49"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_to_or_left" (formula "49") (term "0,0,0,1,1,0"))
                        (rule "eqSymm" (formula "49") (term "1,1,0,0,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "eqSymm" (formula "49") (term "1,0,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                        (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                        (rule "allLeft" (formula "34") (inst "t=i_1_8"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "34") (term "0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "12"))
                        (rule "andLeft" (formula "34"))
                        (rule "inEqSimp_homoInEq1" (formula "34"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                        (rule "add_literals" (formula "34") (term "1,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0"))
                        (rule "add_zero_right" (formula "34") (term "0"))
                        (rule "leq_literals" (formula "34"))
                        (rule "closeFalse" (formula "34"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "53") (inst "sk=i_1_7"))
                  (rule "orRight" (formula "53"))
                  (rule "orRight" (formula "53"))
                  (rule "notRight" (formula "55"))
                  (rule "inEqSimp_leqRight" (formula "54"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "55"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_16"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "32") (ifseqformula "52"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                  (rule "mul_literals" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "2"))
                  (rule "leq_literals" (formula "34") (term "0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "shift_paren_or" (formula "36") (term "0,0,0,1,0"))
                  (rule "commute_or" (formula "36") (term "0,0,0,0,1,0"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "6"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "6"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "7"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "10"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "13"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "14"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_to_or_left" (formula "48") (term "0,0,0,1,1,0"))
                  (rule "eqSymm" (formula "48") (term "1,0,0,0,0,1,1,0"))
                  (rule "eqSymm" (formula "48") (term "1,1,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "15"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or_2" (formula "49") (term "0,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,1,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "49") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "1,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "49") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,1,1,0,1,1,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "49") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "49") (term "1,0,0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "commute_or_2" (formula "49") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "allLeft" (formula "44") (inst "t=i_1_7"))
                  (rule "inEqSimp_contradInEq0" (formula "44") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                  (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "44") (term "0,0,1"))
                  (rule "leq_literals" (formula "44") (term "0,1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "44") (term "0,1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "notLeft" (formula "44"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_17"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "34") (ifseqformula "66"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,0,0,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "allLeft" (formula "23") (inst "t=i_1_7"))
                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "23") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "23") (term "0,0,1"))
                  (rule "leq_literals" (formula "23") (term "0,1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "allLeft" (formula "38") (inst "t=i_1_7"))
                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                  (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1"))
                  (rule "leq_literals" (formula "38") (term "0,1"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "notLeft" (formula "38"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_18"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "22")))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "16") (ifseqformula "54"))
                  (rule "allLeft" (formula "48") (inst "t=i_1_7"))
                  (rule "inEqSimp_contradInEq0" (formula "48") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                  (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "48") (term "0,0,1"))
                  (rule "leq_literals" (formula "48") (term "0,1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "48") (term "0,1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "notLeft" (formula "48"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_19"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "52") (ifseqformula "16"))
               )
            )
            (branch "CUT: bal_0.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "30"))
               (rule "arrayLengthIsAShort" (formula "6") (term "0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "arrayLengthNotNegative" (formula "16") (term "0"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
               (rule "arrayLengthIsAShort" (formula "16") (term "0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "ifthenelse_to_or_left" (formula "29") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "29") (term "1,1,1,0,0,1,0"))
               (rule "eqSymm" (formula "29") (term "1,0,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,1,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or_2" (formula "22") (term "0"))
               (rule "commute_or_2" (formula "21") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "19") (term "0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "nnf_imp2or" (formula "51") (term "0,1,0"))
               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
               (rule "nnf_imp2or" (formula "53") (term "0,1,0,0"))
               (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "nnf_imp2or" (formula "54") (term "0,1,0,0,0"))
               (rule "nnf_imp2or" (formula "54") (term "0,1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "54") (term "0,0,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "54") (term "0,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "54") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "54") (term "0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0"))
               (rule "nnf_notAnd" (formula "54") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1,0,0,0"))
               (rule "nnf_notAnd" (formula "54") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "54") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "54") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,0,0,0"))
               (rule "commute_or" (formula "8") (term "0,0"))
               (rule "commute_or" (formula "7") (term "0,0"))
               (rule "commute_or" (formula "21") (term "0,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "commute_or" (formula "25") (term "0,0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
               (rule "inEqSimp_or_subsumption5" (formula "33") (term "1,0,0,1,0"))
               (rule "greater_literals" (formula "33") (term "0,1,0,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "andRight" (formula "54"))
               (branch "Case 1"
                  (rule "andRight" (formula "54"))
                  (branch "Case 1"
                     (rule "andRight" (formula "54"))
                     (branch "Case 1"
                        (rule "andRight" (formula "54"))
                        (branch "Case 1"
                           (rule "andRight" (formula "54"))
                           (branch "Case 1"
                              (rule "andRight" (formula "54"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "54") (inst "sk=i_1_6"))
                                 (rule "orRight" (formula "54"))
                                 (rule "notRight" (formula "55"))
                                 (rule "orRight" (formula "55"))
                                 (rule "inEqSimp_geqRight" (formula "56"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_leqRight" (formula "56"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "40")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "33") (ifseqformula "40"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "41"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "41"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "commute_and" (formula "5") (term "0"))
                                 (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                 (rule "orLeft" (formula "5"))
                                 (branch " arr_15«selectSK» = null ∧ ( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)"
                                    (rule "andLeft" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                    (rule "ifEqualsNull" (formula "4"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "cnf_rightDist" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "commute_or" (formula "5"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_right" (formula "50") (term "0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "25") (inst "t=i_1_6"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "15"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0"))
                                    (rule "leq_literals" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                                 (branch " ¬( self.sorted.<created> = TRUE ∨ (self.sorted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE) ∧ (self.sorted@heap)[i_1_6]@anon_heap_LOOP«anonHeapFunction» = null"
                                    (rule "andLeft" (formula "5"))
                                    (rule "notLeft" (formula "5"))
                                    (rule "orRight" (formula "40"))
                                    (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "43"))
                                    (rule "close" (formula "40") (ifseqformula "7"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "54") (inst "sk=i_1_5"))
                                 (rule "orRight" (formula "54"))
                                 (rule "orRight" (formula "54"))
                                 (rule "notRight" (formula "56"))
                                 (rule "inEqSimp_geqRight" (formula "56"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "56"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "42"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "42"))
                                 (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                                 (rule "orLeft" (formula "4"))
                                 (branch " ( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.encrypted@heap)[i_1_5]@anon_heap_LOOP«anonHeapFunction» = null"
                                    (rule "andLeft" (formula "4"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_to_or_right" (formula "51") (term "0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "69") (ifseqformula "15") (ifseqformula "68"))
                                    (rule "close" (formula "69") (ifseqformula "18"))
                                 )
                                 (branch " ¬( self.encrypted = result_0 ∨ ¬( self.encrypted.<created> = TRUE ∨ (self.encrypted@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_13«selectSK» = null"
                                    (rule "andLeft" (formula "4"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "orRight" (formula "40"))
                                    (rule "notRight" (formula "41"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                    (rule "ifEqualsNull" (formula "4"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "cnf_rightDist" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "commute_or" (formula "5"))
                                    (rule "cnf_rightDist" (formula "4"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "commute_or" (formula "4"))
                                    (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "18"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "19"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "20"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "ifthenelse_to_or_left" (formula "51") (term "0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "51") (term "1,0,0,0,0,1,1,0"))
                                    (rule "eqSymm" (formula "51") (term "1,1,0,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                                    (rule "allLeft" (formula "26") (inst "t=i_1_5"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "14"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0"))
                                    (rule "leq_literals" (formula "26"))
                                    (rule "closeFalse" (formula "26"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "54") (inst "sk=i_1_4"))
                              (rule "orRight" (formula "54"))
                              (rule "orRight" (formula "54"))
                              (rule "notRight" (formula "56"))
                              (rule "inEqSimp_leqRight" (formula "55"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "56"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "43"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "ifEqualsNull" (formula "3"))
                              (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_11"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "44"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "44"))
                              (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                              (rule "orLeft" (formula "4"))
                              (branch " ( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.chosen@heap)[i_1_4]@anon_heap_LOOP«anonHeapFunction» = null"
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "replace_known_left" (formula "10") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "64") (ifseqformula "10") (ifseqformula "63"))
                                 (rule "close" (formula "64") (ifseqformula "13"))
                              )
                              (branch " ¬( self.chosen = result_0 ∨ ¬( self.chosen.<created> = TRUE ∨ (self.chosen@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_11«selectSK» = null"
                                 (rule "andLeft" (formula "4"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "orRight" (formula "40"))
                                 (rule "notRight" (formula "41"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                 (rule "ifEqualsNull" (formula "4"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "cnf_rightDist" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "16"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_to_or_right" (formula "51") (term "0,0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                                 (rule "allLeft" (formula "28") (inst "t=i_1_4"))
                                 (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "28") (term "0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "54") (inst "sk=i_1_3"))
                           (rule "orRight" (formula "54"))
                           (rule "notRight" (formula "55"))
                           (rule "orRight" (formula "55"))
                           (rule "inEqSimp_geqRight" (formula "56"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "56"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "42"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                           (rule "ifthenelse_negated" (formula "3") (term "0"))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "43"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "43"))
                           (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                           (rule "orLeft" (formula "4"))
                           (branch " ( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.b@heap)[i_1_3]@anon_heap_LOOP«anonHeapFunction» = null"
                              (rule "andLeft" (formula "4"))
                              (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                              (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "7"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "hideAuxiliaryEq" (formula "8"))
                              (rule "replace_known_left" (formula "8") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "8") (ifseqformula "62"))
                              (rule "close" (formula "63") (ifseqformula "11"))
                           )
                           (branch " ¬( self.b = result_0 ∨ ¬( self.b.<created> = TRUE ∨ (self.b@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_9«selectSK» = null"
                              (rule "andLeft" (formula "4"))
                              (rule "notLeft" (formula "4"))
                              (rule "orRight" (formula "40"))
                              (rule "notRight" (formula "41"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                              (rule "ifEqualsNull" (formula "4"))
                              (rule "cnf_rightDist" (formula "4"))
                              (rule "andLeft" (formula "4"))
                              (rule "commute_or" (formula "4"))
                              (rule "cnf_rightDist" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "commute_or" (formula "5"))
                              (rule "cnf_rightDist" (formula "4"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "commute_or" (formula "4"))
                              (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                              (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifthenelse_to_or_right" (formula "51") (term "0,0,0,1,1,0"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "51") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "51") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "51") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "51") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "51") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                              (rule "allLeft" (formula "30") (inst "t=i_1_3"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "30") (term "0,0,1"))
                              (rule "leq_literals" (formula "30") (term "0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "54") (inst "sk=i_1_2"))
                        (rule "orRight" (formula "54"))
                        (rule "notRight" (formula "55"))
                        (rule "orRight" (formula "55"))
                        (rule "inEqSimp_geqRight" (formula "56"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "56"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "45"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_7"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "46"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "46"))
                        (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                        (rule "orLeft" (formula "4"))
                        (branch " ( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.a@heap)[i_1_2]@anon_heap_LOOP«anonHeapFunction» = null"
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                           (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "hideAuxiliaryEq" (formula "11"))
                           (rule "replace_known_left" (formula "11") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "referencedObjectIsCreatedRightEQ" (formula "65") (ifseqformula "11") (ifseqformula "64"))
                           (rule "close" (formula "65") (ifseqformula "14"))
                        )
                        (branch " ¬( self.a = result_0 ∨ ¬( self.a.<created> = TRUE ∨ (self.a@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_7«selectSK» = null"
                           (rule "andLeft" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "orRight" (formula "40"))
                           (rule "notRight" (formula "41"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "ifEqualsNull" (formula "4"))
                           (rule "cnf_rightDist" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "cnf_rightDist" (formula "5"))
                           (rule "andLeft" (formula "5"))
                           (rule "commute_or" (formula "5"))
                           (rule "cnf_rightDist" (formula "4"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "17"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ifthenelse_to_or_right" (formula "50") (term "0,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "17"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                           (rule "allLeft" (formula "32") (inst "t=i_1_2"))
                           (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "32") (term "0,0,1"))
                           (rule "leq_literals" (formula "32") (term "0,1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "32"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "54") (inst "sk=i_1_1"))
                     (rule "orRight" (formula "54"))
                     (rule "notRight" (formula "55"))
                     (rule "orRight" (formula "55"))
                     (rule "inEqSimp_leqRight" (formula "55"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "56"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "33") (ifseqformula "44"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "22") (ifseqformula "45"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "45"))
                     (rule "shift_paren_or" (formula "38") (term "0,0,0,1,0"))
                     (rule "orLeft" (formula "4"))
                     (branch " ( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ (self.msg@heap)[i_1_1]@anon_heap_LOOP«anonHeapFunction» = null"
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "39") (term "0,0,0,0,1,0"))
                        (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "47"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "replace_known_left" (formula "13") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "referencedObjectIsCreatedRightEQ" (formula "68") (ifseqformula "13") (ifseqformula "67"))
                        (rule "close" (formula "68") (ifseqformula "16"))
                     )
                     (branch " ¬( self.msg = result_0 ∨ ¬( self.msg.<created> = TRUE ∨ (self.msg@heap).<created>@anon_heap_newArray«anonHeapFunction» = TRUE)) ∧ arr_5«selectSK» = null"
                        (rule "andLeft" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "orRight" (formula "40"))
                        (rule "notRight" (formula "41"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "ifEqualsNull" (formula "4"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "commute_or" (formula "5"))
                        (rule "cnf_rightDist" (formula "4"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "commute_or" (formula "41") (term "0,0,0,0,1,0"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "47"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "18"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "ifthenelse_to_or_left" (formula "50") (term "0,0,0,1,1,0"))
                        (rule "eqSymm" (formula "50") (term "1,1,0,0,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "eqSymm" (formula "50") (term "1,0,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "50") (term "1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "51") (term "0,0,1,1,0"))
                        (rule "commute_or_2" (formula "51") (term "0,1,1,0"))
                        (rule "allLeft" (formula "34") (inst "t=i_1_1"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "34") (term "0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "12"))
                        (rule "andLeft" (formula "34"))
                        (rule "inEqSimp_homoInEq1" (formula "34"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                        (rule "add_literals" (formula "34") (term "1,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0"))
                        (rule "add_zero_right" (formula "34") (term "0"))
                        (rule "leq_literals" (formula "34"))
                        (rule "closeFalse" (formula "34"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "54") (inst "sk=i_1_0"))
                  (rule "orRight" (formula "54"))
                  (rule "orRight" (formula "54"))
                  (rule "notRight" (formula "56"))
                  (rule "inEqSimp_geqRight" (formula "56"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "32") (ifseqformula "53"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "1"))
                  (rule "leq_literals" (formula "34") (term "0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "shift_paren_or" (formula "36") (term "0,0,0,1,0"))
                  (rule "commute_or" (formula "36") (term "0,0,0,0,1,0"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "6"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "6"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "7"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "8"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "11"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "14"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_to_or_left" (formula "48") (term "0,0,0,1,1,0"))
                  (rule "eqSymm" (formula "48") (term "1,0,0,0,0,1,1,0"))
                  (rule "eqSymm" (formula "48") (term "1,1,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "48") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "48") (term "0,1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or" (formula "49") (term "1,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,1,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "49") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "1,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "49") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "49") (term "0,1,1,0,1,1,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0,0,1,1,0,1,1,0"))
                  (rule "add_literals" (formula "49") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "49") (term "1,0,0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "commute_or_2" (formula "49") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "allLeft" (formula "44") (inst "t=i_1_0"))
                  (rule "inEqSimp_contradInEq0" (formula "44") (term "1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                  (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "44") (term "0,0,1"))
                  (rule "leq_literals" (formula "44") (term "0,1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "44") (term "0,1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "notLeft" (formula "44"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "34") (ifseqformula "67"))
                  (rule "shift_paren_or" (formula "49") (term "0,0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "49") (term "0,0,0,0,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "23") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "23") (term "0,0,1"))
                  (rule "leq_literals" (formula "23") (term "0,1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "allLeft" (formula "38") (inst "t=i_1_0"))
                  (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                  (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1"))
                  (rule "leq_literals" (formula "38") (term "0,1"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "38") (term "0,1"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "notLeft" (formula "38"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "22")))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "16") (ifseqformula "55"))
                  (rule "allLeft" (formula "48") (inst "t=i_1_0"))
                  (rule "inEqSimp_contradInEq0" (formula "48") (term "1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                  (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "48") (term "0,0,1"))
                  (rule "leq_literals" (formula "48") (term "0,1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "48") (term "0,1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "notLeft" (formula "48"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "52") (ifseqformula "16"))
               )
            )
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "10"))
         (rule "allRight" (formula "32") (inst "sk=f_1"))
         (rule "allRight" (formula "32") (inst "sk=o_1"))
         (rule "orRight" (formula "32"))
         (rule "eqSymm" (formula "23") (term "1,0"))
         (rule "eqSymm" (formula "7"))
         (rule "eqSymm" (formula "21"))
         (rule "eqSymm" (formula "26"))
         (rule "eqSymm" (formula "19"))
         (rule "eqSymm" (formula "6"))
         (rule "eqSymm" (formula "19"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "26")))
         (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltRight" (formula "28"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "15") (inst "i=i_1"))
         (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")))
         (rule "greater_literals" (formula "15") (term "0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "23") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "23") (term "1,0"))
         (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "21"))
         (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "7"))
         (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "30"))
         (rule "array2seqDef" (formula "23") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "23") (term "1,0"))
         (rule "eqSeqDef" (formula "23") (term "1,0") (inst "iv=iv"))
         (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,1,1,0"))
         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "23") (term "2,0,1,0,1,1,0"))
         (rule "castDel" (formula "23") (term "1,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "23") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1,1,0"))
         (rule "lenOfSeqDef" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,0"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,0"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,0"))
         (rule "lenOfSeqDef" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "23") (term "1,0,0,1,0"))
         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "23") (term "1,0,1,0,1,1,0"))
         (rule "castDel" (formula "23") (term "2,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,1,0,1,1,0"))
         (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_1_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "11"))
         (rule "eqSymm" (formula "31"))
         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_20"))
         (rule "applyEq" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "5")))
         (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "22") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "22") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
         (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "19"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,0"))
         (rule "times_zero_1" (formula "2") (term "0"))
         (rule "qeq_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "18"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq1" (formula "19"))
         (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
         (rule "add_literals" (formula "19") (term "1,0"))
         (rule "times_zero_1" (formula "19") (term "0"))
         (rule "leq_literals" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "applyEq" (formula "7") (term "1") (ifseqformula "18"))
         (rule "applyEq" (formula "12") (term "1") (ifseqformula "18"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "nnf_imp2or" (formula "20") (term "0"))
         (rule "nnf_imp2or" (formula "19") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
         (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "20") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "21"))
         (rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0"))
         (rule "commute_and" (formula "1") (term "0,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "4"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "10"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "8"))
         (rule "notLeft" (formula "8"))
         (rule "nonNull" (formula "13") (inst "i=i_1"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "greater_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "12") (inst "i=i_1"))
         (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "greater_literals" (formula "12") (term "0,1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "notLeft" (formula "12"))
         (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "11") (inst "i=i_1"))
         (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "greater_literals" (formula "11") (term "0,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "11"))
         (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "10") (inst "i=i_1"))
         (rule "greater_literals" (formula "10") (term "0,1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "sub_literals" (formula "10") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "9") (inst "i=i_1"))
         (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "greater_literals" (formula "9") (term "0,1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "notLeft" (formula "9"))
         (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "8") (inst "i=i_1"))
         (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "greater_literals" (formula "8") (term "0,1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "8"))
         (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or_2" (formula "24") (term "0"))
         (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0"))
         (rule "ifthenelse_to_or_right" (formula "25") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,1,1,0,1,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1,0,1,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,1,0,1,0"))
         (rule "add_zero_left" (formula "25") (term "0,0,1,1,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "25") (term "0,0,0,0,1,0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "4"))
         (rule "replaceKnownSelect_taclet120_2" (formula "18") (term "1,1,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet120_3" (formula "18") (term "1,1,0,0,0,0,0,0,0,0,0"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "20"))
         (rule "notLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "19"))
         (rule "notLeft" (formula "18"))
         (rule "nonNull" (formula "23") (inst "i=i_1"))
         (rule "greater_literals" (formula "23") (term "0,1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "sub_literals" (formula "23") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "22") (inst "i=i_1"))
         (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "greater_literals" (formula "22") (term "0,1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "21") (inst "i=i_1"))
         (rule "greater_literals" (formula "21") (term "0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "20") (inst "i=i_1"))
         (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "greater_literals" (formula "20") (term "0,1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "19") (inst "i=i_1"))
         (rule "greater_literals" (formula "19") (term "0,1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "sub_literals" (formula "19") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "18") (inst "i=i_1"))
         (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "43")))
         (rule "greater_literals" (formula "18") (term "0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
         (rule "applyEq" (formula "37") (term "0") (ifseqformula "23"))
         (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "54")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "23"))
         (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
         (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
         (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
         (rule "applyEq" (formula "36") (term "0") (ifseqformula "22"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "53")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
         (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "22"))
         (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
         (rule "applyEq" (formula "35") (term "0") (ifseqformula "21"))
         (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "52")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "21"))
         (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
         (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
         (rule "hideAuxiliaryEq" (formula "21"))
         (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
         (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
         (rule "applyEq" (formula "34") (term "0") (ifseqformula "20"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "51")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
         (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
         (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "20"))
         (rule "hideAuxiliaryEq" (formula "20"))
         (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
         (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
         (rule "applyEq" (formula "33") (term "0") (ifseqformula "19"))
         (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
         (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "19"))
         (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_imp2or" (formula "21") (term "0"))
         (rule "nnf_imp2or" (formula "20") (term "0"))
         (rule "nnf_imp2or" (formula "19") (term "0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "21") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or_2" (formula "8") (term "0"))
         (rule "commute_or" (formula "24") (term "0,0"))
         (rule "commute_or" (formula "29") (term "0,0"))
         (rule "commute_or" (formula "13") (term "0,0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or" (formula "11") (term "0,0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = result_0 ∨ ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_newArray«anonHeapFunction» = TRUE) TRUE"
            (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "eqSymm" (formula "51"))
            (rule "commute_or" (formula "30") (term "0,0,1,1,0"))
            (rule "shift_paren_or" (formula "30") (term "1,0,1,0"))
            (rule "cut_direct" (formula "50") (term "0,0"))
            (branch "CUT: o_1 = null TRUE"
               (builtin "One Step Simplification" (formula "51"))
               (rule "false_right" (formula "51"))
               (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "close" (formula "48") (ifseqformula "1"))
            )
            (branch "CUT: o_1 = null FALSE"
               (builtin "One Step Simplification" (formula "51"))
               (rule "notRight" (formula "51"))
               (rule "replace_known_left" (formula "2") (term "0,0,1,1") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
               (rule "close" (formula "49") (ifseqformula "1"))
            )
         )
         (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = result_0 ∨ ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_newArray«anonHeapFunction» = TRUE) FALSE"
            (rule "close" (formula "52") (ifseqformula "1"))
         )
      )
   )
)
(branch "Exceptional Post (newArray)"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "4"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (newArray)"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")) (ifInst ""  (formula "9")))
   (rule "true_left" (formula "4"))
   (rule "eqSymm" (formula "7"))
   (rule "eqSymm" (formula "6"))
   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "inEqSimp_geqRight" (formula "11"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "7"))
   (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "11"))
   (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "4"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "10"))
   (rule "notLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "nonNull" (formula "11") (inst "i=i_1"))
   (rule "greater_literals" (formula "11") (term "0,1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "sub_literals" (formula "11") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "11"))
   (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "13") (inst "i=i_1"))
   (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "greater_literals" (formula "13") (term "0,1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "13"))
   (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "10") (inst "i=i_1"))
   (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "greater_literals" (formula "10") (term "0,1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "12") (inst "i=i_1"))
   (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "greater_literals" (formula "12") (term "0,1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "9") (inst "i=i_1"))
   (rule "greater_literals" (formula "9") (term "0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "sub_literals" (formula "9") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "9"))
   (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "8") (inst "i=i_1"))
   (rule "greater_literals" (formula "8") (term "0,1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "sub_literals" (formula "8") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "nnf_imp2or" (formula "13") (term "0"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_imp2or" (formula "12") (term "0"))
   (rule "nnf_imp2or" (formula "9") (term "0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
   (rule "mul_literals" (formula "12") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "commute_or_2" (formula "11") (term "0"))
   (rule "commute_or_2" (formula "13") (term "0"))
   (rule "commute_or_2" (formula "10") (term "0"))
   (rule "commute_or_2" (formula "12") (term "0"))
   (rule "commute_or_2" (formula "9") (term "0"))
   (rule "commute_or_2" (formula "8") (term "0"))
   (rule "commute_or" (formula "11") (term "0,0"))
   (rule "commute_or" (formula "13") (term "0,0"))
   (rule "commute_or" (formula "10") (term "0,0"))
   (rule "commute_or" (formula "12") (term "0,0"))
   (rule "commute_or" (formula "9") (term "0,0"))
   (rule "commute_or" (formula "8") (term "0,0"))
   (rule "arrayLengthIsAShort" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "7") (term "0"))
   (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
   (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
   (rule "qeq_literals" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
)

}
