\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 06 18:10:00 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Apr 06 18:10:00 CEST 2016
name=verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils\\:\\:shiftRight([[B,int,int,[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils\\:\\:shiftRight([[B,int,int,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "84687")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "byteArrays,fromIndex,sorted,key,result,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,0,1,0,1,1,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,1,1,1,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "12"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "13") (term "1,0,0,0,0,0,1"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,0,0,1"))
(rule "eqSymm" (formula "10"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "3"))
(rule "polySimp_elimSub" (formula "13") (term "0,2,1,0,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,2,1,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "13") (term "0,2,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,2,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,2,0,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,1,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "13") (term "1"))
(builtin "One Step Simplification" (formula "13"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "13") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "nonNull" (formula "11") (inst "i=i"))
(rule "greater_literals" (formula "11") (term "0,1"))
(builtin "One Step Simplification" (formula "11"))
(rule "sub_literals" (formula "11") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "2"))
(rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "elementOfArrayRange" (formula "14") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "14") (term "0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "14") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "commute_or_2" (formula "11") (term "0"))
(rule "commute_or" (formula "11") (term "0,0"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_shiftRight,savedHeapBefore_shiftRight,_byteArraysBefore_shiftRight,_fromIndexBefore_shiftRight,_keyBefore_shiftRight,_sortedBefore_shiftRight"))
(builtin "One Step Simplification" (formula "14"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "i"))
(rule "for_to_while" (formula "14") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "assignmentSubtractionInt" (formula "14") (term "1"))
(builtin "One Step Simplification" (formula "14"))
(rule "translateJavaSubInt" (formula "14") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "14") (term "0,1,0"))
(rule "mul_literals" (formula "14") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
(rule "arrayLengthIsAShort" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "arrayLengthNotNegative" (formula "6") (term "0"))
(builtin "Loop Invariant" (formula "15") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
   (rule "andRight" (formula "15") (userinteraction))
   (branch "Case 1"
      (rule "translateJavaSubInt" (formula "15") (term "1,0,0"))
      (rule "translateJavaAddInt" (formula "15") (term "0,0,0,0,1"))
      (rule "translateJavaSubInt" (formula "15") (term "0,2,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "15") (term "1,1,0"))
      (rule "eqSymm" (formula "15") (term "1,0,1"))
      (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "15") (term "1,1,0"))
      (rule "mul_literals" (formula "15") (term "1,1,1,0"))
      (rule "polySimp_elimSub" (formula "15") (term "0,2,0,1,0,1"))
      (rule "mul_literals" (formula "15") (term "1,0,2,0,1,0,1"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,1"))
      (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "15") (term "0,2,0,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
      (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,0"))
      (rule "add_literals" (formula "15") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "15") (term "0,0,0"))
      (rule "qeq_literals" (formula "15") (term "0,0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "0,0"))
      (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "allRight" (formula "15") (inst "sk=j_33"))
      (rule "impRight" (formula "15"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
      (rule "andLeft" (formula "2"))
      (rule "inEqSimp_homoInEq1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,1,0"))
      (rule "times_zero_1" (formula "2") (term "1,0"))
      (rule "add_literals" (formula "2") (term "0"))
      (rule "leq_literals" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
   (branch "Case 2"
      (rule "allRight" (formula "15") (inst "sk=j_34") (userinteraction))
      (rule "impRight" (formula "15") (userinteraction))
      (rule "translateJavaAddInt" (formula "1") (term "0,0") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "cut" (inst "cutFormula=sorted = j_34") (userinteraction))
      (branch "CUT: sorted = j_34 TRUE"
         (rule "applyEqReverse" (formula "18") (term "0,2,2,0") (ifseqformula "1") (userinteraction))
         (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "14") (userinteraction))
         (builtin "Evaluate Query" (formula "18") (term "0") (newnames "a1,a2,callee,queryResult,res_compare"))
         (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,key,key)_010_0" (formula "19") (term "0"))
         (rule "notLeft" (formula "1"))
         (rule "eqSymm" (formula "16") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "add_zero_left" (formula "2") (term "0"))
         (rule "inEqSimp_leqRight" (formula "19"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "4"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "queryResult"))
         (rule "applyEq" (formula "15") (term "0,2,0") (ifseqformula "2"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq0" (formula "3"))
         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,0"))
         (rule "times_zero_1" (formula "3") (term "0"))
         (rule "qeq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
         (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "2"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,0"))
         (rule "times_zero_1" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_compare_0,result_1,exc_2") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
         (branch "Post (compare)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,1,0,0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,1,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,1,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,1,0,0,0"))
            (rule "leq_literals" (formula "16") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
            (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,0,0"))
            (rule "times_zero_1" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "assignment" (formula "17") (term "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "emptyModality" (formula "17") (term "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "notRight" (formula "17"))
            (rule "eqSymm" (formula "1"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
            (rule "qeq_literals" (formula "17") (term "0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "closeFalse" (formula "17"))
         )
         (branch "Exceptional Post (compare)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "15"))
            (rule "close" (formula "18") (ifseqformula "17"))
         )
         (branch "Pre (compare)"
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "3")) (ifInst ""  (formula "17")) (ifInst ""  (formula "5")) (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
            (rule "closeTrue" (formula "15"))
         )
      )
      (branch "CUT: sorted = j_34 FALSE"
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "18"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "3"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "16"))
         (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "qeq_literals" (formula "16") (term "0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "false_right" (formula "16"))
         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
         (rule "andLeft" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
   )
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "17"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "translateJavaSubInt" (formula "17") (term "1,0,0,0,0,0,0,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "17") (term "0,1,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "17") (term "0,1,1,1,0,1"))
   (rule "translateJavaAddInt" (formula "17") (term "0,0,0,0,1,0,0,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0,0,0,0,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "17") (term "0,2,1,1,0,1,0,0,0,0,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "17") (term "1,1,0,0,1,0,0,0,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "14") (term "1,0,0,0,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "14") (term "0,2,1,1,0,1,0,0"))
   (rule "translateJavaAddInt" (formula "14") (term "1,1,0,0,1,0"))
   (rule "impRight" (formula "17"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1,1,1,0,1"))
   (rule "eqSymm" (formula "22") (term "1,0,1,0,0,0,1,1,1,0,1"))
   (rule "eqSymm" (formula "22") (term "1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "eqSymm" (formula "17") (term "1,0"))
   (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "1,1,1,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "22") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "16") (term "1"))
   (rule "mul_literals" (formula "16") (term "1,1"))
   (rule "polySimp_elimSub" (formula "15") (term "1"))
   (rule "mul_literals" (formula "15") (term "1,1"))
   (rule "polySimp_elimSub" (formula "22") (term "0,2,0,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "1,0,2,0,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "17") (term "0,2,0,1,0"))
   (rule "mul_literals" (formula "17") (term "1,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "16") (term "1"))
   (rule "polySimp_addComm0" (formula "15") (term "1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,2,0,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "17") (term "0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "15"))
   (rule "polySimp_addComm1" (formula "15") (term "0"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "break_0"))
   (rule "assignment" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "brk"))
   (rule "assignment" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "thrownExc"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
   (rule "polySimp_mulComm0" (formula "15") (term "1"))
   (rule "polySimp_rightDist" (formula "15") (term "1"))
   (rule "mul_literals" (formula "15") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1"))
   (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,1,0,1,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "17") (term "0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,0,0,1,1,1,0,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,0,0,0,1,1,1,0,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,0,0,0,0,1,1,1,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0,0,0,1,1,1,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "commute_or_2" (formula "17") (term "0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "greater_equal_than_comparison_simple" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "commute_or" (formula "17") (term "0,0"))
   (rule "commute_or" (formula "16") (term "0,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "1"))
   (rule "methodCallEmpty" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "emptyModality" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "notRight" (formula "20"))
   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
   (rule "add_literals" (formula "17") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "17") (term "1,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0"))
   (rule "qeq_literals" (formula "17") (term "0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_1"))
   (rule "greater_equal_than_comparison_simple" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "ifSplit" (formula "22"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_2"))
      (rule "compound_less_equal_than_comparison_1" (formula "22") (term "1") (inst "#v0=x_3"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_3"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "22") (term "1"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "var"))
      (rule "assignment_array2" (formula "22") (term "1"))
      (branch "Normal Execution (_byteArrays != null)"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
         (rule "orRight" (formula "22"))
         (rule "inEqSimp_leqRight" (formula "22"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltRight" (formula "23"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "6")))
         (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_1"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0"))
         (rule "qeq_literals" (formula "1") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "24") (term "0,1,0,0"))
         (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_compare,result_0,exc_0") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
         (branch
            (rule "assignment" (formula "25") (term "1") (userinteraction))
            (builtin "One Step Simplification" (formula "25"))
            (rule "blockEmpty" (formula "25") (term "1") (userinteraction))
            (rule "less_equal_than_comparison_simple" (formula "25") (term "1") (userinteraction))
            (builtin "One Step Simplification" (formula "25"))
            (rule "ifSplit" (formula "25"))
            (branch "if x_2 true"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "blockBreakNoLabel" (formula "26") (term "1"))
               (rule "tryBreakLabel" (formula "26") (term "1"))
               (rule "blockBreakNoLabel" (formula "26") (term "1"))
               (rule "blockBreakLabel" (formula "26") (term "1"))
               (rule "blockEmpty" (formula "26") (term "1"))
               (rule "tryEmpty" (formula "26") (term "1"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "ifSplit" (formula "26"))
               (branch "if break_0 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "1"))
                  (rule "break" (formula "26") (term "1"))
                  (rule "blockEmpty" (formula "26") (term "1"))
                  (rule "returnUnfold" (formula "26") (term "1") (inst "#v0=x"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_42"))
                  (rule "assignmentAdditionInt" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                  (rule "methodCallReturn" (formula "26") (term "1"))
                  (rule "assignment" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "methodCallEmpty" (formula "26") (term "1"))
                  (rule "tryEmpty" (formula "26") (term "1"))
                  (rule "emptyModality" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "19")))
                  (rule "andRight" (formula "26") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "26") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                        (rule "andLeft" (formula "23"))
                        (rule "andLeft" (formula "24"))
                        (rule "allRight" (formula "27") (inst "sk=i_4"))
                        (rule "orRight" (formula "27"))
                        (rule "orRight" (formula "27"))
                        (rule "eqSymm" (formula "29"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1"))
                        (rule "add_literals" (formula "28") (term "0,1"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "28"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0,0"))
                        (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "18"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0"))
                        (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_316"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                        (rule "eqSymm" (formula "29"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "nnf_imp2or" (formula "26") (term "0,0,1"))
                        (rule "nnf_imp2or" (formula "26") (term "0,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,1"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,1"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,1,0,0"))
                        (rule "orLeft" (formula "26"))
                        (branch "∃ int i; ( i ≥ 0 ∧ i ≤ -1 + verif.selectvoting.system.core.Utils.min(byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction».length, key.length) @heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ∧ ( (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»)[i]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ≤ -1 + key[i]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ∧ ∀ int j; ( j ≤ -1 ∨ j ≥ i ∨ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»)[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] = key[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))])))"
                           (rule "exLeft" (formula "26") (inst "sk=i_5"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "28"))
                           (rule "inEqSimp_homoInEq0" (formula "27"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_317"))
                           (rule "simplifySelectOfAnon" (formula "28"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0,0,0"))
                           (rule "replace_known_right" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_homoInEq0" (formula "29"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1"))
                           (rule "mul_literals" (formula "29") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                           (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_318"))
                           (rule "simplifySelectOfAnon" (formula "29"))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "10")))
                           (rule "elementOfArrayRangeConcrete" (formula "29") (term "0,0"))
                           (rule "sortsDisjointModuloNull" (formula "29") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "29") (term "0,0,0,0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
                           (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                           (rule "hideAuxiliaryEq" (formula "29"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "sorted ≥ i_4 TRUE"
                              (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "eqSymm" (formula "33"))
                              (rule "ifthenelse_split" (formula "28") (term "0"))
                              (branch " ¬ byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "28"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "28"))
                                 (rule "hideAuxiliaryEq" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                 (rule "allLeft" (formula "23") (inst "t=i_4"))
                                 (rule "replaceKnownSelect_taclet00000001_2" (formula "23") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_6" (formula "23") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "2"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0"))
                                 (rule "leq_literals" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                              (branch " ¬ byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "28"))
                                 (rule "hideAuxiliaryEq" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1"))
                                 (rule "mul_literals" (formula "28") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                 (rule "allLeft" (formula "23") (inst "t=i_4"))
                                 (rule "replaceKnownSelect_taclet00000001_2" (formula "23") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_6" (formula "23") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                 (rule "leq_literals" (formula "23") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "23"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_literals" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch "sorted ≥ i_4 FALSE"
                              (rule "close" (formula "34") (ifseqformula "1"))
                           )
                        )
                        (branch " ∀ int j; ( j ≤ -1 ∨ j ≥ verif.selectvoting.system.core.Utils.min(byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction».length, key.length) @heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ∨ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»)[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] = key[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))]) ∧ byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction».length ≤ key.length"
                           (rule "andLeft" (formula "26"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "sorted ≥ i_4 TRUE"
                              (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "eqSymm" (formula "30"))
                              (rule "allLeft" (formula "19") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "leq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "allLeft" (formula "19") (inst "t=sorted"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                              (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "allLeft" (formula "23") (inst "t=i_4"))
                              (rule "replaceKnownSelect_taclet00000001_2" (formula "23") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0100000001_3" (formula "23") (term "0,0,0"))
                              (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "2"))
                              (rule "andLeft" (formula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "1,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0"))
                              (rule "add_zero_right" (formula "23") (term "0"))
                              (rule "leq_literals" (formula "23"))
                              (rule "closeFalse" (formula "23"))
                           )
                           (branch "sorted ≥ i_4 FALSE"
                              (rule "close" (formula "31") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "26") (userinteraction))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "24"))
                           (rule "allRight" (formula "27") (inst "sk=i_6"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "eqSymm" (formula "29"))
                           (rule "inEqSimp_geqRight" (formula "28"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "28"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1"))
                           (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                           (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_319"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                           (rule "eqSymm" (formula "29"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                           (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                           (rule "nnf_imp2or" (formula "26") (term "0,0,1"))
                           (rule "nnf_imp2or" (formula "26") (term "0,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,1"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,1,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,1,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,1,0,0"))
                           (rule "orLeft" (formula "26"))
                           (branch "∃ int i; ( i ≥ 0 ∧ i ≤ -1 + verif.selectvoting.system.core.Utils.min(byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction».length, key.length) @heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ∧ ( (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»)[i]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ≤ -1 + key[i]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ∧ ∀ int j; ( j ≤ -1 ∨ j ≥ i ∨ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»)[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] = key[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))])))"
                              (rule "exLeft" (formula "26") (inst "sk=i_7"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "27"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1"))
                              (rule "mul_literals" (formula "27") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                              (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_320"))
                              (rule "simplifySelectOfAnon" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0,0,0"))
                              (rule "replace_known_right" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_homoInEq0" (formula "29"))
                              (rule "polySimp_addComm1" (formula "29") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1"))
                              (rule "mul_literals" (formula "29") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_321"))
                              (rule "simplifySelectOfAnon" (formula "29"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "10")))
                              (rule "elementOfArrayRangeConcrete" (formula "29") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "29") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "29") (term "0,0,0,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
                              (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                              (rule "hideAuxiliaryEq" (formula "29"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "i_6 ≥ fromIndex TRUE"
                                 (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "ifthenelse_split" (formula "28") (term "0"))
                                 (branch " ¬ byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                    (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), i_6)"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "24") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "pullOutSelect" (formula "24") (term "2,0") (inst "selectSK=arr_323"))
                                    (rule "simplifySelectOfAnon" (formula "24"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "34")) (ifInst ""  (formula "9")))
                                    (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (term "1,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "allLeft" (formula "26") (inst "t=i_6"))
                                    (rule "replaceKnownSelect_taclet010000001_2" (formula "26") (term "2,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00010000001_6" (formula "26") (term "2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "22") (inst "t=i_6"))
                                    (rule "replaceKnownSelect_taclet010000001_2" (formula "22") (term "1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00010000001_6" (formula "22") (term "1,0,0"))
                                    (rule "eqSymm" (formula "22") (term "0,0"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0"))
                                    (rule "leq_literals" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                                 (branch " ¬ byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1"))
                                    (rule "mul_literals" (formula "28") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                    (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), i_6)"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "pullOutSelect" (formula "24") (term "2,0") (inst "selectSK=arr_322"))
                                    (rule "simplifySelectOfAnon" (formula "24"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")) (ifInst ""  (formula "9")))
                                    (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (term "1,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "allLeft" (formula "26") (inst "t=i_6"))
                                    (rule "replaceKnownSelect_taclet010000001_2" (formula "26") (term "2,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00010000001_6" (formula "26") (term "2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "22") (inst "t=i_6"))
                                    (rule "replaceKnownSelect_taclet010000001_2" (formula "22") (term "1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00010000001_6" (formula "22") (term "1,0,0"))
                                    (rule "eqSymm" (formula "22") (term "0,0"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0"))
                                    (rule "add_literals" (formula "22") (term "0"))
                                    (rule "leq_literals" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                              )
                              (branch "i_6 ≥ fromIndex FALSE"
                                 (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "2"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0"))
                                 (rule "leq_literals" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                           )
                           (branch " ∀ int j; ( j ≤ -1 ∨ j ≥ verif.selectvoting.system.core.Utils.min(byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction».length, key.length) @heap[anon(arrayRange(byteArrays, fromIndex, sorted))] ∨ (byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction»)[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))] = key[j]@heap[anon(arrayRange(byteArrays, fromIndex, sorted))]) ∧ byteArrays[i_0]@anon_heap_LOOP«anonHeapFunction».length ≤ key.length"
                              (rule "andLeft" (formula "26"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "i_6 ≥ fromIndex TRUE"
                                 (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "allLeft" (formula "22") (inst "t=i_6"))
                                 (rule "replaceKnownSelect_taclet010000001_2" (formula "22") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01010000001_3" (formula "22") (term "1,0,0"))
                                 (rule "eqSymm" (formula "22") (term "0,0"))
                                 (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                 (rule "leq_literals" (formula "22") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "i_6 ≥ fromIndex FALSE"
                                 (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "2"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0"))
                                 (rule "add_literals" (formula "8") (term "0"))
                                 (rule "leq_literals" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "26") (userinteraction))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "24"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                              (rule "applyEq" (formula "16") (term "1,0,1") (ifseqformula "17"))
                              (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "26") (userinteraction))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                                 (rule "andLeft" (formula "23") (userinteraction))
                                 (rule "andLeft" (formula "24") (userinteraction))
                                 (rule "impRight" (formula "27") (userinteraction))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,2,1,0") (userinteraction))
                                 (rule "add_literals" (formula "28") (term "0,0,2,1,0") (userinteraction))
                                 (rule "add_zero_left" (formula "28") (term "0,2,1,0") (userinteraction))
                                 (opengoal " ")
                              )
                              (branch "Case 2"
                                 (rule "impRight" (formula "26") (userinteraction))
                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")))
                                 (rule "andLeft" (formula "24") (userinteraction))
                                 (rule "andLeft" (formula "25") (userinteraction))
                                 (opengoal " ")
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "24"))
                     (rule "allRight" (formula "27") (inst "sk=f_6"))
                     (rule "allRight" (formula "27") (inst "sk=o_6"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "27"))
                     (rule "eqSymm" (formula "29"))
                     (rule "eqSymm" (formula "27") (term "0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1,0,0"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=f_6_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                     (rule "eqSymm" (formula "29"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if break_0 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_2 false"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_leqRight" (formula "23"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "eval_order_array_access2" (formula "26") (term "1") (inst "#v0=x") (inst "#ar1=x_arr_arr"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr_arr_12"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_33"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "assignmentAdditionInt" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
               (rule "eval_order_array_access3" (formula "26") (term "1") (inst "#v1=x_arr") (inst "#v2=x_34") (inst "#v0=x_arr_arr_13"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr_arr_13"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_34"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x_35"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_35"))
               (rule "compound_assignment_5_nonsimple" (formula "26") (term "1"))
               (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x_36"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_36"))
               (rule "compound_less_equal_than_comparison_1" (formula "26") (term "1") (inst "#v0=x_37"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_37"))
               (rule "eval_order_access2" (formula "26") (term "1") (inst "#v0=x_arr_arr_14"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr_arr_14"))
               (rule "remove_parentheses_right" (formula "26") (term "1"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "assignment_read_length" (formula "26") (term "1"))
               (branch "Normal Execution (x_arr_arr_14 != null)"
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "false_right" (formula "26"))
                  (rule "less_equal_than_comparison_simple" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "ifElseSplit" (formula "26"))
                  (branch "if x_36 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "ifEnterThen" (formula "27") (term "1"))
                     (rule "assignment" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "blockThrow" (formula "27") (term "1"))
                     (rule "throwLabelBlock" (formula "27") (term "1,0,0,1"))
                     (rule "methodCallParamThrow" (formula "27") (term "1,0,0,1"))
                     (rule "tryCatchThrow" (formula "27") (term "1,0,0,1"))
                     (rule "ifElseUnfold" (formula "27") (term "1,0,0,1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "27") (term "1,0,0,1") (newnames "x_39"))
                     (rule "equality_comparison_simple" (formula "27") (term "1,0,0,1"))
                     (rule "throwUnfold" (formula "27") (term "1") (inst "#v0=a"))
                     (rule "variableDeclarationAssign" (formula "27") (term "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "a_8"))
                     (rule "instanceCreationAssignment" (formula "27") (term "1") (inst "#v0=a_9"))
                     (rule "variableDeclarationAssign" (formula "27") (term "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "a_9"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "27") (term "1") (inst "#v0=a_10"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "a_10"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<createObject>_1,savedHeapBefore_<createObject>_1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "__NEW___2"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "27") (term "1") (inst "#v0=a_11"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "a_11"))
                     (rule "allocateInstance" (formula "27"))
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "26"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallWithinClass" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_6,savedHeapBefore_<prepare>_6"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_7,savedHeapBefore_<prepare>_7"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_8,savedHeapBefore_<prepare>_8"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "castDel" (formula "31") (term "1,0,1,0"))
                     (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "castDel" (formula "31") (term "1,0,1,0"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "methodCallReturnIgnoreResult" (formula "31") (term "1"))
                     (rule "methodCallReturn" (formula "31") (term "1"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_8,savedHeapBefore_<init>_8"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_9,savedHeapBefore_<init>_9"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallSuper" (formula "31") (term "1"))
                     (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_10,savedHeapBefore_<init>_10"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "castDel" (formula "31") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "castDel" (formula "31") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "assignment_write_attribute" (formula "31") (term "1"))
                     (branch "Normal Execution (a_9 != null)"
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "28")))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "false_right" (formula "31"))
                        (rule "assignment" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "tryCatchThrow" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "ifElseUnfold" (formula "31") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_40"))
                        (rule "equality_comparison_simple" (formula "31") (term "1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "ifElseSplit" (formula "31"))
                        (branch "if x_40 true"
                           (builtin "One Step Simplification" (formula "32"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_40 false"
                           (builtin "One Step Simplification" (formula "32"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "31"))
                           (branch "if a_8 instanceof Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "31") (term "1") (newnames "thr_1"))
                              (rule "reference_type_cast" (formula "31") (term "1"))
                              (branch "Normal Execution (a_8 instanceof Throwable)"
                                 (builtin "One Step Simplification" (formula "32"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "blockEmpty" (formula "31") (term "1"))
                                 (rule "predecrement" (formula "31") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "31") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                 (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_41"))
                                 (rule "remove_parentheses_right" (formula "31") (term "1"))
                                 (rule "assignmentSubtractionInt" (formula "31") (term "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "translateJavaSubInt" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,1,0"))
                                 (rule "unusedLabel" (formula "31") (term "1"))
                                 (rule "widening_identity_cast_5" (formula "31") (term "1"))
                                 (rule "assignment" (formula "31") (term "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "tryEmpty" (formula "31") (term "1"))
                                 (rule "methodCallEmpty" (formula "31") (term "1"))
                                 (rule "emptyModality" (formula "31") (term "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "eqSymm" (formula "32") (term "1,0,1,0,0,0"))
                                 (rule "eqSymm" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                 (rule "add_literals" (formula "32") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "32") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,1,0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,1,1,0,0,1,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "2,0,1,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,0,0"))
                                 (rule "precOfInt" (formula "32") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "2,0,1,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "2,0,1,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor2" (formula "32") (term "0,1,1"))
                                 (rule "add_literals" (formula "32") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "32") (term "0,1,1"))
                                 (rule "leq_literals" (formula "32") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1"))
                                 (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "18"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "31") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "25") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "notLeft" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "inEqSimp_subsumption1" (formula "32") (term "0,0,0,0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "32") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,0"))
                                 (rule "times_zero_1" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0"))
                                 (rule "qeq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "14"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_literals" (formula "19") (term "0"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch "ClassCastException (!(a_8 instanceof Throwable))"
                                 (builtin "One Step Simplification" (formula "32"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "closeTrue" (formula "31"))
                              )
                           )
                           (branch "if a_8 instanceof Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (a_9 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_36 false"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_leqRight" (formula "24"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "less_than_comparison_simple" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,1,0"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,1,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "27") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "ifSplit" (formula "27"))
                     (branch "if x_35 true"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_35 false"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "27") (term "1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_arr_3"))
                        (rule "assignment_array2" (formula "27") (term "1"))
                        (branch "Normal Execution (_byteArrays != null)"
                           (builtin "One Step Simplification" (formula "28"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")))
                           (rule "replaceKnownSelect_taclet001_0" (formula "28") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "28") (term "0,1,0"))
                           (rule "orRight" (formula "27"))
                           (rule "inEqSimp_ltRight" (formula "28"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "assignment_to_reference_array_component" (formula "28") (term "1"))
                           (branch "Normal Execution (x_arr_arr_13 != null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "array_self_reference" (formula "3") (ifseqformula "23") (ifseqformula "29"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "tryEmpty" (formula "27") (term "1"))
                              (rule "blockEmpty" (formula "27") (term "1"))
                              (rule "unusedLabel" (formula "27") (term "1"))
                              (rule "predecrement" (formula "27") (term "1"))
                              (rule "compound_int_cast_expression" (formula "27") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "27") (term "1"))
                              (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_38"))
                              (rule "remove_parentheses_right" (formula "27") (term "1"))
                              (rule "assignmentSubtractionInt" (formula "27") (term "1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "translateJavaSubInt" (formula "27") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "27") (term "0,1,0"))
                              (rule "mul_literals" (formula "27") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "27") (term "1"))
                              (rule "assignment" (formula "27") (term "1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "tryEmpty" (formula "27") (term "1"))
                              (rule "methodCallEmpty" (formula "27") (term "1"))
                              (rule "emptyModality" (formula "27") (term "1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "andRight" (formula "27") (userinteraction))
                              (branch "Case 1"
                                 (rule "andRight" (formula "27") (userinteraction))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "27") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "27") (userinteraction))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "27") (userinteraction))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "28") (term "0,0,1"))
                                             (rule "applyEq" (formula "16") (term "1,0,1") (ifseqformula "17"))
                                             (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0,1"))
                                             (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "allRight" (formula "28") (inst "sk=j_52"))
                                             (rule "orRight" (formula "28"))
                                             (rule "orRight" (formula "28"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                             (rule "add_literals" (formula "28") (term "0,1"))
                                             (rule "add_zero_left" (formula "28") (term "1"))
                                             (rule "inEqSimp_geqRight" (formula "29"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0"))
                                             (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                             (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "29"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "19"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_205"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_206"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "10")))
                                             (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                             (rule "nnf_ex2all" (formula "27"))
                                             (rule "nnf_imp2or" (formula "28") (term "0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                             (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                             (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                             (rule "ex_pull_out3" (formula "1") (term "0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                             (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                             (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                             (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "j_52 ≥ fromIndex TRUE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "allLeft" (formula "26") (inst "t=sorted"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,1,0"))
                                                (rule "leq_literals" (formula "26") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                (rule "leq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "pullOutSelect" (formula "26") (term "2,0") (inst "selectSK=arr_207"))
                                                (rule "simplifySelectOfAnon" (formula "26"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")) (ifInst ""  (formula "11")))
                                                (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "26"))
                                                (rule "hideAuxiliaryEq" (formula "26"))
                                                (rule "allLeft" (formula "27") (inst "t=j_52"))
                                                (rule "replaceKnownSelect_taclet100000011010001_3" (formula "27") (term "2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100000011010001_4" (formula "27") (term "2,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "allLeft" (formula "21") (inst "t=sorted"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "20"))
                                                (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "allLeft" (formula "21") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                (rule "leq_literals" (formula "21") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "21") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet001_0" (formula "25") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,1"))
                                                (rule "leq_literals" (formula "25") (term "1"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                (rule "leq_literals" (formula "25") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "32") (term "1,0,1,0,0") (ifseqformula "25"))
                                                (rule "arrayLengthNotNegative" (formula "32") (term "1,1"))
                                                (rule "arrayLengthIsAShort" (formula "33") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "commute_and" (formula "2") (term "0,0,0"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "j_52 = 1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "29") (term "0,2,2,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "4"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,2,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,2,0"))
                                                   (rule "add_zero_left" (formula "34") (term "0,2,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeTrue" (formula "34"))
                                                )
                                                (branch "j_52 = 1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "36"))
                                                   (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "31"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0"))
                                                   (rule "leq_literals" (formula "31") (term "0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "false_right" (formula "31"))
                                                   (rule "allLeft" (formula "24") (inst "t=j_52"))
                                                   (rule "replaceKnownSelect_taclet100000011010001_3" (formula "24") (term "1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0100000011010001_4" (formula "24") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "24") (term "0,0"))
                                                   (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "24"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                             (branch "j_52 ≥ fromIndex FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "10"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0"))
                                                (rule "add_zero_right" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "allRight" (formula "28") (inst "sk=j_53"))
                                          (rule "orRight" (formula "28"))
                                          (rule "orRight" (formula "28"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "1"))
                                          (rule "add_literals" (formula "29") (term "0,1"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "29"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0"))
                                          (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "19"))
                                          (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_208"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "9")))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1"))
                                          (rule "nnf_ex2all" (formula "26"))
                                          (rule "nnf_imp2or" (formula "27") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,0"))
                                          (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                          (rule "ex_pull_out3" (formula "1") (term "0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "sorted ≥ j_53 TRUE"
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "commute_and_2" (formula "1") (term "0,0"))
                                             (rule "allLeft" (formula "24") (inst "t=j_53"))
                                             (rule "replaceKnownSelect_taclet10000011010001_3" (formula "24") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000011010001_4" (formula "24") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "4"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "sorted ≥ j_53 FALSE"
                                             (rule "close" (formula "31") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "cut" (inst "cutFormula=leq(result_0, Z(0(#)))") (userinteraction))
                                       (branch "CUT: result_0 ≤ 0 TRUE"
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")))
                                          (rule "andLeft" (formula "25"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "allRight" (formula "29") (inst "sk=j_85"))
                                          (rule "orRight" (formula "29"))
                                          (rule "orRight" (formula "29"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "31"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "21"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")))
                                          (rule "andLeft" (formula "24") (userinteraction))
                                          (rule "andLeft" (formula "25") (userinteraction))
                                          (opengoal " ")
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "allRight" (formula "28") (inst "sk=f_5"))
                                    (rule "allRight" (formula "28") (inst "sk=o_5"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "28") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "17"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "orRight" (formula "23"))
                                    (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_5_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_ex2all" (formula "24"))
                                    (rule "nnf_imp2or" (formula "25") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                    (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                    (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "1") (term "0"))
                                    (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                    (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                    (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                    (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                    (rule "cut_direct" (formula "29") (term "0,0"))
                                    (branch "CUT: o_5 = null TRUE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "3") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: o_5 = null FALSE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "notRight" (formula "30"))
                                       (rule "cut_direct" (formula "29") (term "0"))
                                       (branch "CUT: o_5 = byteArrays TRUE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "1"))
                                          (rule "nnf_ex2all" (formula "29"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                          (rule "commute_and_2" (formula "3") (term "0,0"))
                                          (rule "allLeft" (formula "25") (inst "t=sorted"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                          (rule "leq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "pullOutSelect" (formula "25") (term "2,0") (inst "selectSK=arr_275"))
                                          (rule "simplifySelectOfAnon" (formula "25"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "10")))
                                          (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "25"))
                                          (rule "hideAuxiliaryEq" (formula "25"))
                                          (rule "allLeft" (formula "20") (inst "t=i_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                          (rule "leq_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                          (rule "leq_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "allLeft" (formula "20") (inst "t=sorted"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "19"))
                                          (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "pullOutSelect" (formula "26") (term "2,0") (inst "selectSK=arr_276"))
                                          (rule "simplifySelectOfAnon" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")) (ifInst ""  (formula "10")))
                                          (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0"))
                                          (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (term "0,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "26"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "allLeft" (formula "24") (inst "t=i_0"))
                                          (rule "replaceKnownSelect_taclet001_0" (formula "24") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,1"))
                                          (rule "leq_literals" (formula "24") (term "1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEq" (formula "3") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "1,0,0,1,1,0,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "32") (term "1,0,1,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "24"))
                                          (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                          (rule "replaceKnownSelect_taclet01100011010001_7" (formula "25") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01100011010001_8" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,1"))
                                          (rule "leq_literals" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "25"))
                                          (rule "arrayLengthNotNegative" (formula "33") (term "1,1"))
                                          (rule "arrayLengthIsAShort" (formula "34") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "allLeft" (formula "24") (inst "t=sorted"))
                                          (rule "replaceKnownSelect_taclet01100011010001_5" (formula "24") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01100011010001_6" (formula "24") (term "1,0,0"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,1"))
                                          (rule "leq_literals" (formula "24") (term "1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "28") (inst "t=sorted"))
                                          (rule "replaceKnownSelect_taclet01100011010001_5" (formula "28") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01100011010001_6" (formula "28") (term "0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "commute_and" (formula "4") (term "0,0,0"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_5 = arr(1 + i_0) TRUE"
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "5"))
                                             (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "10") (ifseqformula "37"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "commute_or_2" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "0,0"))
                                             (rule "castDel" (formula "2") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "2"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "f_5 = arr(1 + i_0) FALSE"
                                             (rule "close" (formula "40") (ifseqformula "5"))
                                          )
                                       )
                                       (branch "CUT: o_5 = byteArrays FALSE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "false_right" (formula "30"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0"))
                                 (rule "precOfInt" (formula "28"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1"))
                                 (rule "add_literals" (formula "28") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "0,1"))
                                 (rule "leq_literals" (formula "28") (term "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_leqRight" (formula "28"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "17") (term "1,0,1") (ifseqformula "18"))
                                 (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Null Reference (x_arr_arr_13 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_arr_13 != null, but x_34 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_13 and x_arr_3)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "array_self_reference" (formula "28") (ifseqformula "22") (ifseqformula "29"))
                              (rule "closeTrue" (formula "28"))
                           )
                        )
                        (branch "Null Reference (_byteArrays = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_byteArrays != null, but i Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr_arr_14 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (compare)"
            (builtin "One Step Simplification" (formula "22"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "22"))
            (rule "close" (formula "25") (ifseqformula "24"))
         )
         (branch "Pre (compare)"
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "6")))
            (rule "wellFormedAnon" (formula "24") (term "0,1"))
            (rule "replace_known_left" (formula "24") (term "1,0,1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "4")))
            (rule "applyEq" (formula "14") (term "1,0,1") (ifseqformula "15"))
            (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "shift_paren_or" (formula "23") (term "1"))
            (rule "allLeft" (formula "15") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "15") (term "0,0,1"))
            (rule "leq_literals" (formula "15") (term "0,1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
            (rule "qeq_literals" (formula "15") (term "0,1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "notLeft" (formula "15"))
            (rule "allLeft" (formula "20") (inst "t=sorted"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "0,1,0"))
            (rule "leq_literals" (formula "20") (term "1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "17"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0"))
            (rule "leq_literals" (formula "20") (term "0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_124"))
            (rule "simplifySelectOfAnon" (formula "20"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
            (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
            (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
            (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0"))
            (rule "add_literals" (formula "20") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "20") (term "0,0,0"))
            (rule "qeq_literals" (formula "20") (term "0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
            (rule "hideAuxiliaryEq" (formula "20"))
            (rule "allLeft" (formula "15") (inst "t=sorted"))
            (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
            (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "allLeft" (formula "19") (inst "t=i_0"))
            (rule "replaceKnownSelect_taclet001_0" (formula "19") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
            (rule "add_literals" (formula "19") (term "1,1,0,1"))
            (rule "times_zero_1" (formula "19") (term "1,0,1"))
            (rule "add_zero_right" (formula "19") (term "0,1"))
            (rule "leq_literals" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "19") (term "0,0,1"))
            (rule "leq_literals" (formula "19") (term "0,1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "19"))
            (rule "replace_known_right" (formula "26") (term "0,0,1") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "applyEq" (formula "26") (term "1,0,1,1") (ifseqformula "19"))
            (rule "applyEq" (formula "26") (term "1,0,0,1") (ifseqformula "19"))
            (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "referencedObjectIsCreatedRightEQ" (formula "27") (ifseqformula "19") (ifseqformula "23"))
            (rule "close" (formula "27") (ifseqformula "16"))
         )
      )
      (branch "Null Reference (_byteArrays = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_byteArrays != null, but i Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "blockThrow" (formula "23") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "commute_or" (formula "1"))
         (rule "unusedLabel" (formula "23") (term "1,0,0,1"))
         (rule "blockThrow" (formula "23") (term "1,0,0,1"))
         (rule "methodCallParamThrow" (formula "23") (term "1,0,0,1"))
         (rule "tryCatchThrow" (formula "23") (term "1,0,0,1"))
         (rule "ifElseUnfold" (formula "23") (term "1,0,0,1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "23") (term "1,0,0,1") (newnames "x_4"))
         (rule "equality_comparison_simple" (formula "23") (term "1,0,0,1"))
         (rule "throwUnfold" (formula "23") (term "1") (inst "#v0=a"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "a"))
         (rule "instanceCreationAssignment" (formula "23") (term "1") (inst "#v0=a_1"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "1") (inst "#v0=a_2"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_2"))
         (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "1") (inst "#v0=a_3"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_3"))
         (rule "allocateInstance" (formula "23"))
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "notLeft" (formula "1"))
         (rule "orRight" (formula "22"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "assignment" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "assignment_write_attribute_this" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallWithinClass" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "assignment_write_attribute_this" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "castDel" (formula "27") (term "1,0,1,0"))
         (rule "assignment_write_attribute_this" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "castDel" (formula "27") (term "1,0,1,0"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "27") (term "1"))
         (rule "methodCallReturn" (formula "27") (term "1"))
         (rule "assignment" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "assignment" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallSuper" (formula "27") (term "1"))
         (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "assignment_write_attribute_this" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "castDel" (formula "27") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "assignment_write_attribute_this" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "castDel" (formula "27") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "assignment_write_attribute" (formula "27") (term "1"))
         (branch "Normal Execution (a_1 != null)"
            (builtin "One Step Simplification" (formula "28"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "24")))
            (rule "false_right" (formula "27"))
            (rule "assignment" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "tryCatchThrow" (formula "27") (term "1"))
            (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_5"))
            (rule "equality_comparison_simple" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "replace_known_right" (formula "27") (term "0,0,1,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "ifElseSplit" (formula "27"))
            (branch "if x_5 true"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_5 false"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "27"))
               (branch "if a instanceof Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "27") (term "1") (newnames "thr"))
                  (rule "reference_type_cast" (formula "27") (term "1"))
                  (branch "Normal Execution (a instanceof Throwable)"
                     (builtin "One Step Simplification" (formula "28"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "predecrement" (formula "27") (term "1"))
                     (rule "unusedLabel" (formula "27") (term "1"))
                     (rule "compound_int_cast_expression" (formula "27") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "27") (term "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_6"))
                     (rule "remove_parentheses_right" (formula "27") (term "1"))
                     (rule "assignmentSubtractionInt" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "translateJavaSubInt" (formula "27") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "0,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "27") (term "1"))
                     (rule "assignment" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "tryEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "emptyModality" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "27") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "27") (term "1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,1,0,0,0,1,0,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                     (rule "add_literals" (formula "27") (term "0,0,1"))
                     (rule "add_zero_left" (formula "27") (term "0,1"))
                     (rule "dismissNonSelectedField" (formula "27") (term "1,1,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "2,0,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,1,0,1,0,0,0"))
                     (rule "precOfInt" (formula "27") (term "1"))
                     (rule "dismissNonSelectedField" (formula "27") (term "1,1,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "2,0,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,1,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "1,1,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "2,0,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "27") (term "0,1,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor2" (formula "27") (term "0,1,1"))
                     (rule "add_literals" (formula "27") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "27") (term "0,1,1"))
                     (rule "leq_literals" (formula "27") (term "1,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
                     (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,0,0,0"))
                     (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "15"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "replace_known_left" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "26") (term "0,0,0,0,0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "ex_pull_out1" (formula "26") (term "0,0,0,0,1,0"))
                     (rule "allLeft" (formula "20") (inst "t=sorted"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "20") (term "0,1,0"))
                     (rule "leq_literals" (formula "20") (term "1,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_125"))
                     (rule "simplifySelectOfAnon" (formula "20"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
                     (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "0,0,0"))
                     (rule "qeq_literals" (formula "20") (term "0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                     (rule "hideAuxiliaryEq" (formula "20"))
                     (rule "allLeft" (formula "15") (inst "t=sorted"))
                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                     (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "cut_direct" (formula "2") (term "1"))
                     (branch "CUT: byteArrays.length ≤ i_0 TRUE"
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                        (rule "mul_literals" (formula "9") (term "0,0"))
                        (rule "add_zero_left" (formula "9") (term "0"))
                        (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "13"))
                        (rule "andLeft" (formula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                        (rule "add_literals" (formula "19") (term "1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0"))
                        (rule "add_zero_right" (formula "19") (term "0"))
                        (rule "leq_literals" (formula "19"))
                        (rule "closeFalse" (formula "19"))
                     )
                     (branch "CUT: byteArrays.length ≤ i_0 FALSE"
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "false_right" (formula "28"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
                  (branch "ClassCastException (!(a instanceof Throwable))"
                     (builtin "One Step Simplification" (formula "28"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "closeTrue" (formula "27"))
                  )
               )
               (branch "if a instanceof Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (a_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "14"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0,0"))
   (rule "translateJavaSubInt" (formula "14") (term "1,0,0,0,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "14") (term "0,2,1,1,0,1,0,0"))
   (rule "translateJavaAddInt" (formula "14") (term "1,1,0,0,1,0"))
   (rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,1"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "eqSymm" (formula "16") (term "1,0"))
   (rule "polySimp_elimSub" (formula "15") (term "1"))
   (rule "mul_literals" (formula "15") (term "1,1"))
   (rule "polySimp_elimSub" (formula "14") (term "1"))
   (rule "mul_literals" (formula "14") (term "1,1"))
   (rule "polySimp_elimSub" (formula "16") (term "0,2,0,1,0"))
   (rule "mul_literals" (formula "16") (term "1,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "15") (term "1"))
   (rule "polySimp_addComm0" (formula "14") (term "1"))
   (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "14"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "b_1"))
   (rule "emptyStatement" (formula "21") (term "1,0,1"))
   (rule "blockEmptyLabel" (formula "21") (term "1,0,1"))
   (rule "blockEmpty" (formula "21") (term "1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1"))
   (rule "polySimp_rightDist" (formula "14") (term "1"))
   (rule "mul_literals" (formula "14") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1"))
   (rule "nnf_imp2or" (formula "17") (term "0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "commute_or_2" (formula "17") (term "0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "commute_or" (formula "17") (term "0,0"))
   (rule "commute_or" (formula "16") (term "0,0"))
   (rule "greater_equal_than_comparison_simple" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "methodCallEmpty" (formula "21") (term "1"))
   (rule "emptyModality" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "impRight" (formula "21"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_geqRight" (formula "19"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
   (rule "returnUnfold" (formula "23") (term "1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
   (rule "assignmentAdditionInt" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
   (rule "methodCallReturn" (formula "23") (term "1"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "methodCallEmpty" (formula "23") (term "1"))
   (rule "tryEmpty" (formula "23") (term "1"))
   (rule "emptyModality" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "15")))
   (rule "eqSymm" (formula "23") (term "1,0,0,1"))
   (rule "eqSymm" (formula "23") (term "1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,1,1,1,0"))
   (rule "add_literals" (formula "23") (term "0,1,0,1,1,1,1,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,0"))
   (rule "add_literals" (formula "23") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,0,1,0,1,1,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,2,1,0,1,0,1,1,1,0"))
   (rule "add_zero_left" (formula "23") (term "0,2,1,0,1,0,1,1,1,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,2,2,0,1,1,1,1,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,2,2,0,1,1,1,1,1,0"))
   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,1,0"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,1,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,1,0"))
   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,1,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,1,0"))
   (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,1,1,0"))
   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1,0"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,1,0"))
   (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,1,1,0") (ifseqformula "16"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,1,0"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,1,0"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,1,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,1,1,1,0"))
   (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
   (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,1,0"))
   (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,1,0"))
   (rule "leq_literals" (formula "23") (term "0,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "16"))
   (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "16"))
   (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
   (rule "inEqSimp_homoInEq1" (formula "17"))
   (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
   (rule "add_literals" (formula "17") (term "1,0"))
   (rule "times_zero_1" (formula "17") (term "0"))
   (rule "leq_literals" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
   (rule "inEqSimp_homoInEq0" (formula "1"))
   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,0"))
   (rule "times_zero_1" (formula "1") (term "0"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "15"))
   (rule "polySimp_addAssoc" (formula "14") (term "1"))
   (rule "add_literals" (formula "14") (term "0,1"))
   (rule "add_zero_left" (formula "14") (term "1"))
   (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
   (rule "add_literals" (formula "16") (term "0,1,1,0"))
   (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0") (ifseqformula "14"))
   (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,0,0"))
   (rule "add_literals" (formula "20") (term "0,1,1,0,0,0,0"))
   (rule "applyEq" (formula "20") (term "1,1,0,1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addAssoc" (formula "20") (term "1,0,1,1,1,0"))
   (rule "add_literals" (formula "20") (term "0,1,0,1,1,1,0"))
   (rule "applyEq" (formula "20") (term "0,1,0,0,1,1,0") (ifseqformula "14"))
   (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,1,1,0"))
   (rule "add_literals" (formula "20") (term "1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "20") (term "0,0,1,1,0"))
   (rule "leq_literals" (formula "20") (term "0,1,1,0"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "applyEq" (formula "20") (term "1,0,2,2,0,1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addAssoc" (formula "20") (term "0,2,2,0,1,1,1,0"))
   (rule "add_literals" (formula "20") (term "0,0,2,2,0,1,1,1,0"))
   (rule "applyEq" (formula "20") (term "1,1,0,0,0,0,1,0") (ifseqformula "14"))
   (rule "polySimp_addAssoc" (formula "20") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "20") (term "1,0,0,0,0,1,0"))
   (rule "pullOutSelect" (formula "20") (term "2,0,1,1,1,0") (inst "selectSK=arr_126"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
   (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
   (rule "qeq_literals" (formula "1") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_or_antiSymm1" (formula "17") (term "0"))
   (rule "polySimp_homoEq" (formula "17") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,1,0"))
   (rule "add_literals" (formula "17") (term "0,1,0,1,1,0"))
   (rule "add_zero_left" (formula "17") (term "1,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "1,0,0,1,0"))
   (rule "add_literals" (formula "17") (term "0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
   (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0,1,0"))
   (rule "add_literals" (formula "17") (term "1,0,0,1,0"))
   (rule "times_zero_1" (formula "17") (term "0,0,1,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "castDel" (formula "17") (term "0,2,0"))
   (rule "castDel" (formula "17") (term "0,2,1"))
   (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_127"))
   (rule "simplifySelectOfAnon" (formula "17"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
   (rule "eqSymm" (formula "18"))
   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "hideAuxiliaryEq" (formula "18"))
   (rule "elementOfArrayRangeConcrete" (formula "17") (term "0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0"))
   (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
   (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0,0"))
   (rule "add_literals" (formula "17") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "17") (term "0,0,0"))
   (rule "qeq_literals" (formula "17") (term "0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_or_antiSymm0" (formula "21") (term "0,0,0,0"))
   (rule "polySimp_homoEq" (formula "21") (term "0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "21") (term "1,0,1,0,0,0,0"))
   (rule "add_literals" (formula "21") (term "0,1,0,1,0,0,0,0"))
   (rule "add_zero_left" (formula "21") (term "1,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "21") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "21") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0"))
   (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "21") (term "1,0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "21") (term "0,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "andRight" (formula "21"))
   (branch "Case 1"
      (rule "andRight" (formula "21"))
      (branch "Case 1"
         (rule "allRight" (formula "21") (inst "sk=i_2"))
         (rule "orRight" (formula "21"))
         (rule "notRight" (formula "21"))
         (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "22") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "22") (term "0"))
         (rule "eqSymm" (formula "22"))
         (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "closeTrue" (formula "22"))
      )
      (branch "Case 2"
         (rule "andRight" (formula "21"))
         (branch "Case 1"
            (rule "allRight" (formula "21") (inst "sk=i_1"))
            (rule "orRight" (formula "21"))
            (rule "orRight" (formula "21"))
            (rule "eqSymm" (formula "23"))
            (rule "inEqSimp_leqRight" (formula "21"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_geqRight" (formula "22"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_129"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "6")))
            (rule "eqSymm" (formula "24"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
            (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "23"))
            (rule "ifthenelse_split" (formula "3") (term "0"))
            (branch "sorted ≥ 1 + fromIndex TRUE"
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "qeq_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "allLeft" (formula "14") (inst "t=sorted"))
               (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
               (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "allLeft" (formula "19") (inst "t=i_1"))
               (rule "replaceKnownSelect_taclet0102_3" (formula "19") (term "2,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0102_4" (formula "19") (term "2,0,1"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "allLeft" (formula "17") (inst "t=i_1"))
               (rule "replaceKnownSelect_taclet0102_3" (formula "17") (term "1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0102_4" (formula "17") (term "1,0,0"))
               (rule "eqSymm" (formula "17") (term "0,0"))
               (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
               (rule "polySimp_addComm1" (formula "17") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
               (rule "mul_literals" (formula "17") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "17") (term "0,0,1"))
               (rule "leq_literals" (formula "17") (term "0,1"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
               (rule "andLeft" (formula "17"))
               (rule "inEqSimp_homoInEq1" (formula "17"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "times_zero_1" (formula "17") (term "1,0"))
               (rule "add_literals" (formula "17") (term "0"))
               (rule "leq_literals" (formula "17"))
               (rule "closeFalse" (formula "17"))
            )
            (branch "sorted ≥ 1 + fromIndex FALSE"
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "inEqSimp_geqRight" (formula "20"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,0"))
               (rule "times_zero_1" (formula "14") (term "0"))
               (rule "leq_literals" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "13"))
               (rule "applyEq" (formula "20") (term "2,1,0,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "12"))
               (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
               (rule "applyEq" (formula "18") (term "2,1,0,2,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
               (rule "inEqSimp_commuteGeq" (formula "1"))
               (rule "applyEq" (formula "17") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "16") (term "2,1,0,1,0,0,0") (ifseqformula "11"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_literals" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
         (branch "Case 2"
            (rule "impRight" (formula "21"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "inEqSimp_leqRight" (formula "21"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "qeq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "allLeft" (formula "13") (inst "t=sorted"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "allLeft" (formula "16") (inst "t=sorted"))
            (rule "eqSymm" (formula "16") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
            (rule "add_literals" (formula "16") (term "1,1,0,1"))
            (rule "times_zero_1" (formula "16") (term "1,0,1"))
            (rule "add_zero_right" (formula "16") (term "0,1"))
            (rule "leq_literals" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
            (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "16") (term "0,0,1"))
            (rule "leq_literals" (formula "16") (term "0,1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_128"))
            (rule "simplifySelectOfAnon" (formula "16"))
            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")) (ifInst ""  (formula "4")))
            (rule "eqSymm" (formula "17"))
            (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
            (rule "hideAuxiliaryEq" (formula "17"))
            (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,0,0"))
            (rule "add_literals" (formula "16") (term "1,0,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "0,1,0,0"))
            (rule "qeq_literals" (formula "16") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "12"))
            (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "16") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "allLeft" (formula "19") (inst "t=fromIndex"))
            (rule "replaceKnownSelect_taclet2_1" (formula "19") (term "2,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "19") (term "2,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0"))
            (rule "qeq_literals" (formula "19") (term "0,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0"))
            (rule "leq_literals" (formula "19") (term "0,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "allLeft" (formula "20") (inst "t=sorted"))
            (rule "replaceKnownSelect_taclet1102_4" (formula "20") (term "2,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1102_5" (formula "20") (term "2,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "0,1,0"))
            (rule "leq_literals" (formula "20") (term "1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0"))
            (rule "leq_literals" (formula "20") (term "0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), fromIndex)"))
            (rule "replaceKnownSelect_taclet2_0" (formula "21") (term "2,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1102_3" (formula "21") (term "2,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0"))
            (rule "qeq_literals" (formula "21") (term "0,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,0"))
            (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0"))
            (rule "leq_literals" (formula "21") (term "0,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "1"))
            (rule "qeq_literals" (formula "21") (term "0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "closeFalse" (formula "21"))
         )
      )
   )
   (branch "Case 2"
      (rule "allRight" (formula "21") (inst "sk=f_1"))
      (rule "allRight" (formula "21") (inst "sk=o_1"))
      (rule "orRight" (formula "21"))
      (rule "orRight" (formula "21"))
      (rule "eqSymm" (formula "21") (term "0,0,0,1"))
      (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_1_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "eqSymm" (formula "24"))
      (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
      (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
