\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jul 05 17:44:29 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jul 05 17:44:29 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptBallotsAndRemoveElectionId([[B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptBallotsAndRemoveElectionId([[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "134344")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "msg,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "Definition_axiom_for_ghostFieldsPre_in_verif_selectvoting_system_core_MixServer" (formula "6") (term "0") (inst "i=i") (userinteraction))
(builtin "One Step Simplification" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "assignment" (formula "17") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "17") (term "1,1") (newnames "heapBefore_decryptBallotsAndRemoveElectionId,savedHeapBefore_decryptBallotsAndRemoveElectionId,_msgBefore_decryptBallotsAndRemoveElectionId") (userinteraction))
(builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationAssign" (formula "17") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "res") (userinteraction))
(rule "arrayCreation" (formula "17") (term "1") (inst "#v0=x_arr_arr") (userinteraction))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr_arr") (userinteraction))
(rule "variableDeclarationAssign" (formula "17") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "dim0") (userinteraction))
(rule "assignment_read_length" (formula "17") (term "1") (userinteraction))
(branch "Normal Execution (_msg != null)"
   (builtin "One Step Simplification" (formula "17"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x") (userinteraction))
   (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_1") (userinteraction))
   (rule "less_than_comparison_simple" (formula "18") (term "1") (userinteraction))
   (rule "if" (formula "18") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "18"))
   (rule "ifthenelse_split_for" (formula "18") (userinteraction))
   (branch "msg.length < 0 TRUE"
      (rule "eqSymm" (formula "14"))
      (rule "eqSymm" (formula "19") (term "1,0,0,1,0,1"))
      (rule "eqSymm" (formula "13"))
      (rule "eqSymm" (formula "12"))
      (rule "eqSymm" (formula "11"))
      (rule "eqSymm" (formula "10"))
      (rule "eqSymm" (formula "8") (term "1,0"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "blockThrow" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "13"))
      (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "14"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "14"))
      (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "12"))
      (rule "applyEq" (formula "13") (term "1") (ifseqformula "12"))
      (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "16") (inst "i=i"))
      (rule "greater_literals" (formula "16") (term "0,1"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")))
      (rule "sub_literals" (formula "16") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "18"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "11") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "11"))
      (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "10"))
      (rule "applyEq" (formula "11") (term "1,1,1") (ifseqformula "10"))
      (rule "array2seqDef" (formula "8") (term "0,0,0,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "8") (term "1,0,0,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "8") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "8") (term "1,0"))
      (rule "nonNull" (formula "19") (term "1,1,1,1,0,0,0,1") (inst "i=i"))
      (rule "greater_literals" (formula "19") (term "0,1,1,1,1,1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "2,1,0,1,1,1,1,1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "array2seqDef" (formula "11") (term "0,1,1") (inst "u=u"))
      (rule "array2seqDef" (formula "11") (term "0,1") (inst "u=u"))
      (rule "eqSymm" (formula "11"))
      (rule "eqSeqDef" (formula "11") (inst "iv=iv"))
      (rule "andLeft" (formula "11"))
      (rule "lenOfSeqDef" (formula "11") (term "1"))
      (rule "polySimp_elimSub" (formula "11") (term "1,1"))
      (rule "times_zero_2" (formula "11") (term "1,1,1"))
      (rule "add_zero_right" (formula "11") (term "1,1"))
      (rule "getOfSeqDef" (formula "12") (term "1,1,0"))
      (rule "castDel" (formula "12") (term "2,1,1,0"))
      (rule "castDel" (formula "12") (term "1,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,2,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1"))
      (rule "add_zero_right" (formula "11") (term "0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0"))
      (rule "applyEq" (formula "12") (term "0,1,0,1,0,0") (ifseqformula "11"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,1,0,0"))
      (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,1,1,1,1,1,0,0,0,1"))
      (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "7") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "18")) (ifInst ""  (formula "2")))
      (rule "eqSymm" (formula "7"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0,0"))
      (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "7"))
      (rule "notLeft" (formula "7"))
      (rule "narrowSelectArrayType" (formula "14") (term "1,1,1,0") (ifseqformula "2") (ifseqformula "24"))
      (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
      (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "7") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
      (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "add_literals" (formula "29") (term "0,0,0,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "29") (term "1,0,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "commute_or_2" (formula "18") (term "0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "4"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "19"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "narrowSelectArrayType" (formula "10") (term "2,0,0,1,1,0") (ifseqformula "2") (ifseqformula "27"))
      (rule "narrowSelectArrayType" (formula "13") (term "2,0,1,0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
      (rule "narrowSelectArrayType" (formula "12") (term "2,0,1,0,0") (ifseqformula "2") (ifseqformula "27"))
      (rule "nonNull" (formula "22") (inst "i=i"))
      (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "greater_literals" (formula "22") (term "0,1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "21") (inst "i=i"))
      (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "greater_literals" (formula "21") (term "0,1"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "21"))
      (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "20") (inst "i=i"))
      (rule "greater_literals" (formula "20") (term "0,1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "sub_literals" (formula "20") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "20"))
      (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "19") (inst "i=i"))
      (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")))
      (rule "greater_literals" (formula "19") (term "0"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "18") (inst "i=i"))
      (rule "greater_literals" (formula "18") (term "0,1"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "31")))
      (rule "sub_literals" (formula "18") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "31"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "17") (inst "i=i"))
      (rule "greater_literals" (formula "17") (term "0,1"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "33")))
      (rule "sub_literals" (formula "17") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "33"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "22") (term "0"))
      (rule "nnf_imp2or" (formula "21") (term "0"))
      (rule "nnf_imp2or" (formula "20") (term "0"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "7") (term "0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "8") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
      (rule "andLeft" (formula "16"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "arrayLengthNotNegative" (formula "15") (term "0"))
      (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
      (rule "arrayLengthIsAShort" (formula "16") (term "0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "arrayLengthIsAShort" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "arrayLengthNotNegative" (formula "14") (term "0"))
      (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
      (rule "arrayLengthIsAShort" (formula "14") (term "0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "arrayLengthNotNegative" (formula "14") (term "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
   (branch "msg.length < 0 FALSE"
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "19") (term "1") (inst "#v0=x_arr_arr_1") (userinteraction))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_arr_1") (userinteraction))
      (rule "variableDeclarationAssign" (formula "19") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "length_1") (userinteraction))
      (rule "assignment" (formula "19") (term "1") (userinteraction))
      (rule "methodBodyExpand" (formula "19") (term "1,1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>") (userinteraction))
      (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "newObject") (userinteraction))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "19") (term "1,1,1") (inst "#v0=x_arr_arr_2") (userinteraction))
      (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "x_arr_arr_2") (userinteraction))
      (rule "variableDeclarationAssign" (formula "19") (term "1,1,1") (userinteraction))
      (rule "variableDeclaration" (formula "19") (term "1,1,1") (newnames "length_2") (userinteraction))
      (rule "assignment" (formula "19") (term "1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "19"))
      (rule "allocateInstanceWithLength" (formula "19") (userinteraction))
      (rule "blockEmpty" (formula "20") (term "1,1") (userinteraction))
      (rule "assignment" (formula "20") (term "1,1") (userinteraction))
      (rule "methodCall" (formula "20") (term "1,1,1") (userinteraction))
      (branch "Normal Execution (newObject != null )"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>") (userinteraction))
         (rule "assignment_write_attribute_this" (formula "21") (term "1,1") (userinteraction))
         (rule "methodCallWithinClass" (formula "21") (term "1,1,1") (userinteraction))
         (rule "methodBodyExpand" (formula "21") (term "1,1,1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>") (userinteraction))
         (rule "arrayInitialisation" (formula "21") (term "1,1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "21") (term "1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "21") (term "1,1,1,1,1") (userinteraction))
         (rule "assignment_write_attribute_this" (formula "21") (term "1,1,1,1,1") (userinteraction))
         (rule "methodCallReturnIgnoreResult" (formula "21") (term "1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "21") (term "1,1,1,1,1,1") (userinteraction))
         (rule "methodCallReturn" (formula "21") (term "1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "21") (term "1,1,1,1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "21") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "21") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "21") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "21") (term "1,1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "21") (term "1,1,1,1,1,1,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "21"))
         (rule "for_to_while" (formula "21") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "21") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "i") (userinteraction))
         (rule "assignment" (formula "21") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "21"))
         (rule "elim_double_block_3" (formula "21") (term "1") (userinteraction))
         (builtin "Loop Invariant" (formula "21") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_24,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "21"))
            (rule "andRight" (formula "21") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "21") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "21") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "21") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                        (rule "leq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "eqSymm" (formula "9") (term "1,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "eqSymm" (formula "12"))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "14"))
                        (rule "eqSymm" (formula "15"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_ltRight" (formula "21"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "23"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "pullOut" (formula "21") (term "0,0") (inst "sk=store_0") (userinteraction))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "3")))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "Definition_axiom_for_ghostFieldsPre_in_verif_selectvoting_system_core_MixServer" (formula "24") (term "0") (inst "i=i_1") (userinteraction))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "andRight" (formula "24") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "24") (userinteraction))
                           (branch "Case 1"
                              (rule "andRight" (formula "24") (userinteraction))
                              (branch "Case 1"
                                 (rule "andRight" (formula "24") (userinteraction))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "24") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "24") (userinteraction))
                                       (branch "Case 1"
                                          (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "24") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2") (userinteraction))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "10") (term "1,0"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,2,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "22"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,0,1,0,1") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1,1,0,0,1") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,1,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,0,1,0,1,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1,1,0,0,1,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1,1,0,0,1,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,0,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,0,1,0,1,0,0") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,1") (ifseqformula "2"))
                                          (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,0,1,0,1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,1,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,1,0,1,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "2") (term "1,2,1,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,1,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,1,0,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,1,0,0,1,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0,0,1,0,0,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                          (rule "nonNull" (formula "19") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")))
                                          (rule "greater_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                                          (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                          (rule "array2seqDef" (formula "11") (term "1,0,0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                                          (rule "eqSymm" (formula "11") (term "1,0"))
                                          (rule "eqSeqDef" (formula "14") (inst "iv=iv"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "lenOfSeqDef" (formula "14") (term "1"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                          (rule "times_zero_2" (formula "14") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "1,1"))
                                          (rule "getOfSeqDef" (formula "15") (term "1,1,0"))
                                          (rule "castDel" (formula "15") (term "1,1,1,0"))
                                          (rule "castDel" (formula "15") (term "2,1,1,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,2,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1,1,0"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,1,0,0") (ifseqformula "14"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "11") (term "0,0,1,1,0") (inst "u=u"))
                                          (rule "eqSeqDef2" (formula "13") (inst "iv=iv") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_4"))
                                          (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_5"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "26") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
                                          (rule "applyEq" (formula "27") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "27") (term "0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "27") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_4"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "28") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_4"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "elementOfArrayRange" (formula "5") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "simplifySelectOfCreate" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "28")))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfCreate" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "27")))
                                          (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "28") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "27") (term "1,1,1,0,0,1,0") (ifseqformula "18"))
                                          (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                          (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0,1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0,1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "27") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "26") (term "1,1,1,0,0,1") (ifseqformula "18"))
                                          (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                          (rule "applyEqReverse" (formula "26") (term "0,0,1,0,0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "19") (term "0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
                                          (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "notLeft" (formula "10"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0,0,0,0,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                                          (rule "narrowSelectArrayType" (formula "16") (term "1,1,1,0") (ifseqformula "5") (ifseqformula "26"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                          (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "7"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "narrowSelectArrayType" (formula "13") (term "2,0,0,1,1,0") (ifseqformula "5") (ifseqformula "30"))
                                          (rule "narrowSelectArrayType" (formula "16") (term "2,0,1,0,0,1,0") (ifseqformula "5") (ifseqformula "30"))
                                          (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "5") (ifseqformula "30"))
                                          (rule "nonNull" (formula "25") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "27"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "24") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "greater_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "27"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "23") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "23"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "27"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "22") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "34")))
                                          (rule "sub_literals" (formula "22") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "34"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "21") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "35")))
                                          (rule "greater_literals" (formula "21") (term "0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "35"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                          (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "20") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "36")))
                                          (rule "sub_literals" (formula "20") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "36"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                          (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_imp2or" (formula "22") (term "0"))
                                          (rule "nnf_imp2or" (formula "21") (term "0"))
                                          (rule "nnf_imp2or" (formula "20") (term "0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "3") (term "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "arrayLengthNotNegative" (formula "3") (term "1"))
                                          (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                          (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                          (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "arrayLengthNotNegative" (formula "17") (term "1"))
                                          (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "arrayLengthIsAShort" (formula "17") (term "1"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "commute_or_2" (formula "10") (term "0"))
                                          (rule "ifthenelse_split" (formula "15") (term "1"))
                                          (branch "self.unsigned.length ≥ 1 TRUE"
                                             (rule "replace_known_left" (formula "17") (term "0,1,1,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "17") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "18") (term "1,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "andRight" (formula "44"))
                                             (branch "Case 1"
                                                (rule "commute_or_2" (formula "26") (term "0"))
                                                (rule "commute_or_2" (formula "25") (term "0"))
                                                (rule "commute_or_2" (formula "24") (term "0"))
                                                (rule "commute_or" (formula "27") (term "0,0"))
                                                (rule "commute_or_2" (formula "19") (term "0"))
                                                (rule "commute_or" (formula "10") (term "0,0"))
                                                (rule "commute_or" (formula "12") (term "0,0"))
                                                (rule "commute_or" (formula "11") (term "0,0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "commute_or" (formula "26") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "andRight" (formula "44"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "44") (inst "sk=i_1_3"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "notRight" (formula "46"))
                                                   (rule "inEqSimp_leqRight" (formula "45"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_48"))
                                                   (rule "simplifySelectOfMemset" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_49"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                   (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "lenNonNegative" (formula "22") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "22") (term "0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "ifthenelse_to_or_right" (formula "24") (term "0,0,0"))
                                                   (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "24") (term "0,0"))
                                                   (rule "commute_or_2" (formula "24") (term "0"))
                                                   (rule "commute_or" (formula "24") (term "1,1,0"))
                                                   (rule "commute_or_2" (formula "24") (term "0,1,0"))
                                                   (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "24") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "24") (term "0"))
                                                   (rule "distr_forallAnd" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "commute_or" (formula "25") (term "0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0"))
                                                   (rule "commute_or_2" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or" (formula "25") (term "1,1,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                   (rule "commute_or" (formula "24") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "25") (term "0"))
                                                   (rule "distr_forallAnd" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "commute_or_2" (formula "25") (term "0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "26") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "26") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                   (rule "commute_or" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,1") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0,1") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "arrayLengthIsAShort" (formula "24") (term "1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,2,0,0,0") (ifseqformula "10"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1,0,1,0,0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "arrayLengthNotNegative" (formula "38") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "39") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "arrayLengthNotNegative" (formula "37") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "38") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "arrayLengthNotNegative" (formula "36") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "37") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "20") (inst "t=i_1_3"))
                                                   (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "20") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "18") (inst "t=i_1_3"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "allLeft" (formula "19") (inst "t=i_1_3"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "19") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "19") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "notLeft" (formula "19"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_1_3"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "58") (ifseqformula "5") (ifseqformula "61"))
                                                   (rule "close" (formula "58") (ifseqformula "12"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "44") (inst "sk=i_0_1"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "notRight" (formula "46"))
                                                   (rule "inEqSimp_leqRight" (formula "45"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_46"))
                                                   (rule "simplifySelectOfMemset" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_47"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                   (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "lenNonNegative" (formula "22") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "22") (term "0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "ifthenelse_to_or_right" (formula "24") (term "0,0,0"))
                                                   (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "24") (term "0,0"))
                                                   (rule "commute_or_2" (formula "24") (term "0"))
                                                   (rule "commute_or" (formula "24") (term "1,1,0"))
                                                   (rule "commute_or_2" (formula "24") (term "0,1,0"))
                                                   (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "24") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "24") (term "0"))
                                                   (rule "distr_forallAnd" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "commute_or" (formula "25") (term "0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0"))
                                                   (rule "commute_or_2" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or" (formula "25") (term "1,1,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                   (rule "commute_or" (formula "24") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "25") (term "0"))
                                                   (rule "distr_forallAnd" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "commute_or_2" (formula "25") (term "0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "26") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "26") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                   (rule "commute_or" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,1") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0,1") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "arrayLengthIsAShort" (formula "24") (term "1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,2,0,0,0") (ifseqformula "10"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1,0,1,0,0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "arrayLengthNotNegative" (formula "38") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "39") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "arrayLengthNotNegative" (formula "37") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "38") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "arrayLengthNotNegative" (formula "36") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "37") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "20") (inst "t=i_0_1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "20") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "18") (inst "t=i_0_1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "56") (ifseqformula "5") (ifseqformula "59"))
                                                   (rule "close" (formula "56") (ifseqformula "12"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "44") (inst "sk=i_2_1"))
                                                (rule "orRight" (formula "44"))
                                                (rule "notRight" (formula "45"))
                                                (rule "orRight" (formula "45"))
                                                (rule "inEqSimp_leqRight" (formula "45"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_44"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_45"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or_2" (formula "30") (term "0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "commute_or_2" (formula "28") (term "0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "commute_or_2" (formula "23") (term "0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or" (formula "3"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or" (formula "29") (term "0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0"))
                                                (rule "commute_or" (formula "23") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "commute_or" (formula "3"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "lenNonNegative" (formula "23") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "ifthenelse_to_or_right" (formula "24") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "commute_or_2" (formula "24") (term "0"))
                                                (rule "commute_or" (formula "24") (term "1,1,0"))
                                                (rule "commute_or_2" (formula "24") (term "0,1,0"))
                                                (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "24") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or" (formula "25") (term "0"))
                                                (rule "shift_paren_or" (formula "24") (term "0"))
                                                (rule "commute_or_2" (formula "24") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "commute_or" (formula "25") (term "1,1,0"))
                                                (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                (rule "commute_or" (formula "24") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "cnf_rightDist" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0"))
                                                (rule "shift_paren_or" (formula "26") (term "0"))
                                                (rule "commute_or_2" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "0,1,0"))
                                                (rule "leq_literals" (formula "26") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0,0"))
                                                (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,1") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0,1") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "arrayLengthNotNegative" (formula "24") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "21"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,1,0,1,0,0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,2,0,0,0") (ifseqformula "10"))
                                                (rule "allLeft" (formula "18") (inst "t=i_2_1"))
                                                (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                (rule "leq_literals" (formula "18") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "18") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "allLeft" (formula "16") (inst "t=i_2_1"))
                                                (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                (rule "leq_literals" (formula "16") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "allLeft" (formula "17") (inst "t=i_2_1"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "52") (ifseqformula "3") (ifseqformula "55"))
                                                (rule "close" (formula "52") (ifseqformula "10"))
                                             )
                                          )
                                          (branch "self.unsigned.length ≥ 1 FALSE"
                                             (rule "replace_known_right" (formula "16") (term "0,1,1,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_geqRight" (formula "25"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                                             (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
                                             (rule "qeq_literals" (formula "17") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "16") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "18") (term "1,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "andRight" (formula "43"))
                                             (branch "Case 1"
                                                (rule "commute_or_2" (formula "25") (term "0"))
                                                (rule "commute_or_2" (formula "24") (term "0"))
                                                (rule "commute_or_2" (formula "23") (term "0"))
                                                (rule "commute_or" (formula "26") (term "0,0"))
                                                (rule "commute_or" (formula "11") (term "0,0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "commute_or" (formula "12") (term "0,0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "commute_or" (formula "23") (term "0,0"))
                                                (rule "andRight" (formula "43"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "43") (inst "sk=i_1_2"))
                                                   (rule "orRight" (formula "43"))
                                                   (rule "notRight" (formula "44"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "inEqSimp_geqRight" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "45"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_42"))
                                                   (rule "simplifySelectOfMemset" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_43"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                                   (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "lenNonNegative" (formula "22") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "41"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "19") (inst "t=i_1_2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "19") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_1_2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "allLeft" (formula "18") (inst "t=i_1_2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_1_2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "3") (ifseqformula "53"))
                                                   (rule "close" (formula "50") (ifseqformula "11"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "43") (inst "sk=i_0_0"))
                                                   (rule "orRight" (formula "43"))
                                                   (rule "notRight" (formula "44"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "inEqSimp_geqRight" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "45"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_40"))
                                                   (rule "simplifySelectOfMemset" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_41"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                                   (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "lenNonNegative" (formula "22") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "41"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "19") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "19") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "48") (ifseqformula "3") (ifseqformula "51"))
                                                   (rule "close" (formula "48") (ifseqformula "11"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "43") (inst "sk=i_2_0"))
                                                (rule "orRight" (formula "43"))
                                                (rule "orRight" (formula "43"))
                                                (rule "notRight" (formula "45"))
                                                (rule "inEqSimp_leqRight" (formula "44"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_38"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                                (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_39"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                                (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "commute_or_2" (formula "28") (term "0"))
                                                (rule "commute_or_2" (formula "27") (term "0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "18") (term "0,0"))
                                                (rule "commute_or" (formula "3"))
                                                (rule "commute_or" (formula "29") (term "0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0"))
                                                (rule "commute_or" (formula "27") (term "0,0"))
                                                (rule "lenNonNegative" (formula "22") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "cnf_rightDist" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "commute_or" (formula "3"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "17") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                                (rule "narrowSelectArrayType" (formula "19") (term "2,0,0,0") (ifseqformula "11") (ifseqformula "36"))
                                                (rule "eqSymm" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,1"))
                                                (rule "leq_literals" (formula "19") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                                                (rule "castDel" (formula "20") (term "1,1,1,0"))
                                                (rule "castDel" (formula "20") (term "2,1,1,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                                (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                                (rule "times_zero_2" (formula "19") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "19") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                                                (rule "applyEq" (formula "20") (term "0,1,0,1,0,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "20") (term "0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "ifthenelse_to_or_right" (formula "20") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "commute_or" (formula "20") (term "1,1,0"))
                                                (rule "commute_or_2" (formula "20") (term "0,1,0"))
                                                (rule "commute_or" (formula "20") (term "0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "20") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "commute_or" (formula "21") (term "0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0"))
                                                (rule "commute_or" (formula "21") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "commute_or_2" (formula "21") (term "0"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0"))
                                                (rule "commute_or" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "21") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "allLeft" (formula "18") (inst "t=i_2_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                (rule "leq_literals" (formula "18") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "18") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "notLeft" (formula "18"))
                                                (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "52") (ifseqformula "3") (ifseqformula "55"))
                                                (rule "close" (formula "52") (ifseqformula "11"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "24") (inst "sk=i_1_4") (userinteraction))
                                          (rule "impRight" (formula "24") (userinteraction))
                                          (rule "allLeftHide" (formula "11") (inst "t=i_1_4") (userinteraction))
                                          (rule "impLeft" (formula "11") (userinteraction))
                                          (branch "Case 1"
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,2,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "24"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "1,1,1,0,0") (ifseqformula "4"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "1,1") (ifseqformula "4"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "1,0,0,0") (ifseqformula "4"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "3") (term "0,1") (ifseqformula "4"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "1,1,0,0") (ifseqformula "5"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "1,1,1") (ifseqformula "5"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "applyEq" (formula "26") (term "1,2,1,0,1,0,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "5") (term "1,2,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,1,0,0") (ifseqformula "6"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
                                             (rule "applyEq" (formula "26") (term "1,2,1,0,1,1,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "26") (term "1,2,1,0,1,0") (ifseqformula "6"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "nonNull" (formula "21") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "21") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                                             (rule "sub_literals" (formula "21") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "24"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "array2seqDef" (formula "26") (term "1,0,0") (inst "u=u"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "2,1,0,0") (ifseqformula "5"))
                                             (rule "array2seqDef" (formula "26") (term "0,0,0") (inst "u=u"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "2,0,0,0") (ifseqformula "5"))
                                             (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                                             (rule "dismissNonSelectedFieldEQ" (formula "26") (term "2,1") (ifseqformula "5"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "array2seqDef" (formula "16") (term "0,1") (inst "u=u"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv"))
                                             (rule "lenOfSeqDef" (formula "26") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "1,1,1,1,0,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,1,0,0,1"))
                                             (rule "lenOfSeqDef" (formula "26") (term "0,0"))
                                             (rule "eqSymm" (formula "26") (term "0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,0"))
                                             (rule "getOfSeqDef" (formula "26") (term "0,1,0,1"))
                                             (rule "castDel" (formula "26") (term "2,0,1,0,1"))
                                             (rule "castDel" (formula "26") (term "1,0,1,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,2,1,0,1,0,1"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,1,0,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1,1,0,0,1"))
                                             (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                             (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                             (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "eqSeqDef" (formula "15") (inst "iv=iv"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "getOfSeqDef" (formula "16") (term "1,1,0"))
                                             (rule "castDel" (formula "16") (term "2,1,1,0"))
                                             (rule "castDel" (formula "16") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,2,1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0"))
                                             (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0"))
                                             (rule "lenOfSeqDef" (formula "15") (term "1"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                                             (rule "times_zero_2" (formula "15") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "15") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,1,0"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,1,0,0") (ifseqformula "15"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_6"))
                                             (rule "applyEq" (formula "27") (term "1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "27") (term "1,0,1,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "27") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "27") (term "1,1,1,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "27") (term "1,0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "27") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "4"))
                                             (rule "simplifySelectOfMemset" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfCreate" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "1,1,1,1,1,0,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_literals" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch "Case 2"
                                             (rule "cut" (inst "cutFormula=  array2seq(heap,
            byte[]::select(heap,
                           byte[][]::select(heap,
                                            self,
                                            verif.selectvoting.system.core.MixServer::$encrypted),
                           arr(i_1_4)))
= array2seq(store_0,
            byte[]::select(store_0,
                           byte[][]::select(store_0,
                                            self,
                                            verif.selectvoting.system.core.MixServer::$encrypted),
                           arr(i_1_4)))") (userinteraction))
                                             (branch "CUT: array2seq(heap, self.encrypted[i_1_4]) = array2seq(store_0, self.encrypted[i_1_4]@store_0) TRUE"
                                                (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1") (userinteraction))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "12") (userinteraction))
                                                (rule "cut" (inst "cutFormula=  array2seq(heap,
            byte[]::select(heap,
                           self,
                           verif.selectvoting.system.core.MixServer::$electionID))
= array2seq(store_0,
            byte[]::select(store_0,
                           self,
                           verif.selectvoting.system.core.MixServer::$electionID))") (userinteraction))
                                                (branch "CUT: array2seq(heap, self.electionID) = array2seq(store_0, self.electionID@store_0) TRUE"
                                                   (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "1") (userinteraction))
                                                   (rule "cut" (inst "cutFormula=  array2seq(heap,
            byte[]::select(heap,
                           byte[][]::select(heap,
                                            self,
                                            verif.selectvoting.system.core.MixServer::$chosen),
                           arr(i_1_4)))
= array2seq(store_0,
            byte[]::select(store_0,
                           byte[][]::select(store_0,
                                            self,
                                            verif.selectvoting.system.core.MixServer::$chosen),
                           arr(i_1_4)))") (userinteraction))
                                                   (branch "CUT: array2seq(heap, self.chosen[i_1_4]) = array2seq(store_0, self.chosen[i_1_4]@store_0) TRUE"
                                                      (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "1") (userinteraction))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeTrue" (formula "28") (userinteraction))
                                                   )
                                                   (branch "CUT: array2seq(heap, self.chosen[i_1_4]) = array2seq(store_0, self.chosen[i_1_4]@store_0) FALSE"
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "22") (inst "iv=iv") (userinteraction))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "eqSymm" (formula "19"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "20"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "eqSymm" (formula "23") (term "0"))
                                                      (rule "eqSymm" (formula "18"))
                                                      (rule "eqSymm" (formula "14"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "eqSymm" (formula "16"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "polySimp_elimSub" (formula "5") (term "2,1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "1,2,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "2,1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "27"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "5") (term "0,1") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,0,1,0,1") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "1,1,1,0,0") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "1,0,0,1") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "3") (term "1,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "2") (term "1,0") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,1,0,0,1,0,1") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "1,1,0,0") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "3") (term "1,1,0") (ifseqformula "6"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "4"))
                                                      (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "5") (term "1,2,1,0,0,0,1,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "29") (term "1,2,1,0,1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "3") (term "1,2,1,0,1,1,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "2") (term "1,2,1,0,1,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,1,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "6") (term "1,2,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "29") (term "1,2,1,0,1,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "24") (term "1,2,1,0,1,1,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "24") (term "1,2,1,0,1,0,0,1,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "3") (term "1,2,1,0,1,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "29") (term "1,2,1,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "applyEq" (formula "20") (term "1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "29") (term "1,2,1,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "nonNull" (formula "23") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                                      (rule "sub_literals" (formula "23") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "27"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                      (rule "array2seqDef" (formula "18") (term "0,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "18") (term "0,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                      (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                      (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                      (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "24") (term "0"))
                                                      (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                      (rule "array2seqDef" (formula "15") (term "1,0,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "15"))
                                                      (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "15") (term "1") (ifseqformula "3"))
                                                      (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "17"))
                                                      (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "array2seqDef" (formula "29") (term "1,0,0") (inst "u=u"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "2,1,0,0") (ifseqformula "6"))
                                                      (rule "array2seqDef" (formula "29") (term "0,0,0") (inst "u=u"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "2,0,0,0") (ifseqformula "6"))
                                                      (rule "array2seqDef" (formula "29") (term "1,0,1") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "29") (term "0,0,1") (inst "u=u"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "29") (term "2,0,0,1") (ifseqformula "6"))
                                                      (rule "array2seqDef" (formula "24") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                      (rule "lenOfSeqDef" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "1,1,1,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,1,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                      (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                      (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                      (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,1,0,1") (ifseqformula "6"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "24") (term "0"))
                                                      (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                      (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "3") (term "2,0") (ifseqformula "6"))
                                                      (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "15"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "15") (term "2,0") (ifseqformula "6"))
                                                      (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "2") (term "2,0") (ifseqformula "6"))
                                                      (rule "array2seqDef" (formula "18") (term "0,1,0") (inst "u=u"))
                                                      (rule "dismissNonSelectedFieldEQ" (formula "18") (term "2,0,1,0") (ifseqformula "6"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "29") (inst "iv=iv"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "5") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_9"))
                                                      (rule "applyEq" (formula "3") (term "1,1,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "5"))
                                                      (rule "simplifySelectOfMemset" (formula "5"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                      (rule "array2seqDef" (formula "3") (term "0,0,1") (inst "u=u"))
                                                      (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "eqSeqDef" (formula "2") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "lenOfSeqDef" (formula "2") (term "0"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                                      (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "2") (term "1,1"))
                                                      (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                                                      (rule "castDel" (formula "3") (term "1,0,1,0"))
                                                      (rule "castDel" (formula "3") (term "2,0,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "lenOfSeqDef" (formula "2") (term "0"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "2") (term "1,1"))
                                                      (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                                                      (rule "castDel" (formula "3") (term "1,0,1,0"))
                                                      (rule "castDel" (formula "3") (term "2,0,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                      (rule "apply_eq_monomials" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "lenOfSeqDef" (formula "19") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                                      (rule "times_zero_2" (formula "19") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "19") (term "1,1"))
                                                      (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                                                      (rule "castDel" (formula "20") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "20") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                                                      (rule "apply_eq_monomials" (formula "20") (term "1,0,1,0,0") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0"))
                                                      (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqDef" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                                                      (rule "lenOfSeqDef" (formula "17") (term "0"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                      (rule "times_zero_2" (formula "17") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "17") (term "1,1"))
                                                      (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,0,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "18") (term "1,1,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "lenOfSeqDef" (formula "17") (term "0"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                      (rule "times_zero_2" (formula "17") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "17") (term "1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,1,0,0"))
                                                      (rule "elementOfArrayRange" (formula "6") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "simplifySelectOfCreate" (formula "6"))
                                                      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "31")))
                                                      (rule "applyEqReverse" (formula "18") (term "1,0,1,1,1,0,0,1,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "17") (term "1,0,1,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "17") (term "1,0,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "18") (term "1,1,1,0,1,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,1,2,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,1,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "21"))
                                                      (rule "pullOutSelect" (formula "26") (term "1,1,0,1,0,1") (inst "selectSK=arr_59"))
                                                      (rule "applyEq" (formula "32") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "27") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "1,2,1,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "0,1,1,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "27") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "27") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "27") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "27") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "32") (term "1,2,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                                                      (rule "applyEq" (formula "21") (term "1,2,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1,2,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1,2,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "0,1,0,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1,2,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "5") (term "1,1,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1,2,0,0,0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,0,0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "5") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "1,2,0,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "5") (term "1,0"))
                                                      (rule "eqSymm" (formula "4"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "applyEq" (formula "5") (term "1,1,1,0,0") (ifseqformula "4"))
                                                      (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                      (rule "applyEqReverse" (formula "5") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,2,0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "22") (term "1,2,0,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,2,0,0,0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "5") (term "1,1,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "32") (term "1,2,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "32") (term "0,1,0,0,0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "20") (term "1,2,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "32") (term "1,2,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "21") (term "0,1,0,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "32") (term "1,2,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "3") (term "1,0"))
                                                      (rule "eqSeqDef2" (formula "4") (inst "iv=iv") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "pullOutSelect" (formula "16") (term "0,1,1,1,0,0,1,0") (inst "selectSK=arr_60"))
                                                      (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "17") (term "1,1,0,1,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "16"))
                                                      (rule "simplifySelectOfMemset" (formula "16"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "eqSymm" (formula "17") (term "1,0"))
                                                      (rule "eqSymm" (formula "15"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0"))
                                                      (rule "replace_known_left" (formula "16") (term "1,0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "15"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_7"))
                                                      (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "16") (term "2,0") (inst "selectSK=arr_61"))
                                                      (rule "simplifySelectOfCreate" (formula "16"))
                                                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")))
                                                      (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                                      (rule "hideAuxiliaryEq" (formula "16"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_62"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "nnf_imp2or" (formula "25") (term "0"))
                                                      (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "14") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "narrowSelectArrayType" (formula "22") (term "1,1,1,0") (ifseqformula "9") (ifseqformula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "33") (term "0,1"))
                                                      (rule "nnf_imp2or" (formula "3") (term "0"))
                                                      (rule "nnf_imp2or" (formula "38") (term "0,1"))
                                                      (rule "nnf_imp2or" (formula "19") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "arrayLengthIsAShort" (formula "7") (term "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "arrayLengthNotNegative" (formula "7") (term "1"))
                                                      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                                      (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                      (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "arrayLengthIsAShort" (formula "23") (term "1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                      (rule "arrayLengthNotNegative" (formula "23") (term "1"))
                                                      (rule "nnf_imp2or" (formula "22") (term "0"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_imp2or" (formula "16") (term "0"))
                                                      (rule "nnf_imp2or" (formula "15") (term "0"))
                                                      (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "34") (term "0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1"))
                                                      (rule "nnf_notAnd" (formula "39") (term "0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1"))
                                                      (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                      (rule "arrayLengthNotNegative" (formula "39") (term "1,1,0,0,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "40") (term "1,1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "28") (ifseqformula "12"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "notLeft" (formula "30"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "notLeft" (formula "28"))
                                                      (rule "narrowSelectArrayType" (formula "4") (term "1,1,1,0") (ifseqformula "10") (ifseqformula "38"))
                                                      (rule "nonNull" (formula "33") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "greater_literals" (formula "33") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "notLeft" (formula "33"))
                                                      (rule "narrowSelectArrayType" (formula "33") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "32") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "32") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "sub_literals" (formula "32") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "notLeft" (formula "32"))
                                                      (rule "narrowSelectArrayType" (formula "32") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "31") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "31") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "andLeft" (formula "31"))
                                                      (rule "notLeft" (formula "31"))
                                                      (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "30") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "30") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "42")))
                                                      (rule "sub_literals" (formula "30") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "42"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "29") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                                      (rule "sub_literals" (formula "29") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "43"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "44")))
                                                      (rule "sub_literals" (formula "28") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "44"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "26"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "33") (term "0"))
                                                      (rule "ifthenelse_split" (formula "22") (term "1"))
                                                      (branch "self.unsigned.length ≥ 1 TRUE"
                                                         (rule "replace_known_left" (formula "24") (term "0,1,1,0,0") (ifseqformula "22"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "nnf_imp2or" (formula "33") (term "0"))
                                                         (rule "nnf_imp2or" (formula "32") (term "0"))
                                                         (rule "arrayLengthNotNegative" (formula "23") (term "1,0,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "24") (term "1,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "nnf_imp2or" (formula "32") (term "0"))
                                                         (rule "nnf_imp2or" (formula "31") (term "0"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0"))
                                                         (rule "commute_or_2" (formula "36") (term "0"))
                                                         (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "46") (term "0,0"))
                                                         (branch "self.chosen[i_1_4].length ≥ 1 TRUE"
                                                            (rule "eqSymm" (formula "47") (term "0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "commute_or_2" (formula "20") (term "0"))
                                                            (rule "commute_or_2" (formula "15") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "51") (term "1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "arrayLengthNotNegative" (formula "51") (term "1,1,0,0,0,0"))
                                                            (rule "ifthenelse_split" (formula "19") (term "0"))
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 TRUE"
                                                               (rule "eqSymm" (formula "20"))
                                                               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "20"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "17") (term "0"))
                                                               (rule "commute_or_2" (formula "5") (term "0"))
                                                               (rule "ifthenelse_split" (formula "21") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "21"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "51") (ifseqformula "21") (ifseqformula "54"))
                                                                  (rule "close" (formula "51") (ifseqformula "11"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "20") (term "0,0,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "hideAuxiliaryEq" (formula "20"))
                                                                  (rule "eqSymm" (formula "20") (term "1,0,0"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "3") (ifseqformula "53"))
                                                                     (rule "close" (formula "50") (ifseqformula "13"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "53") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "48") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "48") (term "0,1,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,2,1,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "48") (term "1,1,1,1,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "48") (term "0,0,0,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "47") (term "1,0"))
                                                                     (rule "eqSymm" (formula "47") (term "1,0,1"))
                                                                     (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "allRight" (formula "47") (inst "sk=iv_18"))
                                                                     (rule "orRight" (formula "47"))
                                                                     (rule "orRight" (formula "47"))
                                                                     (rule "inEqSimp_geqRight" (formula "48"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "48"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "replace_known_left" (formula "49") (term "0,0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "1")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "49") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1"))
                                                                     (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                                     (rule "leq_literals" (formula "3") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "true_left" (formula "3"))
                                                                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_66"))
                                                                     (rule "simplifySelectOfMemset" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "49"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "53"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfCreate" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "49")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "19"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_geqRight" (formula "35"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_notGeq" (formula "20") (term "0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0,0"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "6") (term "0"))
                                                               (rule "ifthenelse_split" (formula "21") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "21"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "51") (ifseqformula "21") (ifseqformula "54"))
                                                                  (rule "close" (formula "51") (ifseqformula "12"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,0,0,1,1,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "20") (term "0,0,1") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "eqSymm" (formula "21") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "20") (term "0,1,1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "20") (term "0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "4") (ifseqformula "53"))
                                                                     (rule "close" (formula "50") (ifseqformula "14"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "48") (term "0,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "48") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "48") (term "0,1,0,0") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "3")))
                                                                     (rule "allRight" (formula "48") (inst "sk=iv_17"))
                                                                     (rule "orRight" (formula "48"))
                                                                     (rule "orRight" (formula "48"))
                                                                     (rule "applyEqReverse" (formula "50") (term "1,1,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "eqSymm" (formula "49"))
                                                                     (rule "inEqSimp_geqRight" (formula "48"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "48"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "replace_known_left" (formula "49") (term "0,0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "1")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                                     (rule "eqSymm" (formula "49"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "49"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,1"))
                                                                     (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                                                     (rule "leq_literals" (formula "4") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_65"))
                                                                     (rule "simplifySelectOfMemset" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "49"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "53"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfCreate" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "49")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "self.chosen[i_1_4].length ≥ 1 FALSE"
                                                            (rule "eqSymm" (formula "47") (term "0"))
                                                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "46")))
                                                            (rule "inEqSimp_geqRight" (formula "46"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "46") (term "1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "add_zero_right" (formula "46") (term "1,1,0,0,1,0,1"))
                                                            (rule "eqSymm" (formula "46") (term "1,0,1"))
                                                            (rule "applyEq" (formula "51") (term "1,1,0,0,1,1,0,1") (ifseqformula "1"))
                                                            (rule "seqDef_lower_equals_upper" (formula "51") (term "1,0,0,1,1,0,1"))
                                                            (rule "applyEq" (formula "51") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                            (rule "seqDef_lower_equals_upper" (formula "51") (term "1,0,0,1,0"))
                                                            (rule "inEqSimp_or_tautInEq0" (formula "46") (term "0,0,1"))
                                                            (rule "add_zero_right" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "qeq_literals" (formula "46") (term "1,0,0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "orRight" (formula "46"))
                                                            (rule "notRight" (formula "46"))
                                                            (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0"))
                                                            (rule "leq_literals" (formula "47") (term "0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "commute_or_2" (formula "21") (term "0"))
                                                            (rule "commute_or_2" (formula "16") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "51") (term "1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "arrayLengthNotNegative" (formula "51") (term "1,1,0,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "ifthenelse_split" (formula "19") (term "0"))
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 TRUE"
                                                               (rule "eqSymm" (formula "20"))
                                                               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "20"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "17") (term "0"))
                                                               (rule "commute_or_2" (formula "5") (term "0"))
                                                               (rule "ifthenelse_split" (formula "21") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "21"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "21") (ifseqformula "53"))
                                                                  (rule "close" (formula "50") (ifseqformula "11"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "eqSymm" (formula "20") (term "1"))
                                                                  (rule "eqSymm" (formula "21") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "3") (ifseqformula "52"))
                                                                     (rule "close" (formula "49") (ifseqformula "13"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "applyEq" (formula "51") (term "1,1,0,0,0,1,0,0,1") (ifseqformula "2"))
                                                                     (rule "seqDef_lower_equals_upper" (formula "51") (term "1,0,0,0,1,0,0,1"))
                                                                     (rule "applyEq" (formula "51") (term "1,1,0,0,0,0") (ifseqformula "2"))
                                                                     (rule "seqDef_lower_equals_upper" (formula "51") (term "1,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "allRight" (formula "51") (inst "sk=iv_16"))
                                                                     (rule "orRight" (formula "51"))
                                                                     (rule "orRight" (formula "51"))
                                                                     (rule "inEqSimp_leqRight" (formula "52"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_leqRight" (formula "52"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "3"))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "19"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_geqRight" (formula "35"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_notGeq" (formula "20") (term "0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0,0"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "6") (term "0"))
                                                               (rule "ifthenelse_split" (formula "21") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "21"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "21") (ifseqformula "53"))
                                                                  (rule "close" (formula "50") (ifseqformula "12"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "20") (term "0,0,1") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,0,0,1,1,0") (ifseqformula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "eqSymm" (formula "21") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "20") (term "0,1,1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "20") (term "0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "4") (ifseqformula "52"))
                                                                     (rule "close" (formula "49") (ifseqformula "14"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEq" (formula "51") (term "1,1,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "seqDef_lower_equals_upper" (formula "51") (term "1,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "allRight" (formula "51") (inst "sk=iv_15"))
                                                                     (rule "orRight" (formula "51"))
                                                                     (rule "orRight" (formula "51"))
                                                                     (rule "inEqSimp_leqRight" (formula "52"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_leqRight" (formula "52"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "4"))
                                                                     (rule "closeFalse" (formula "4"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "self.unsigned.length ≥ 1 FALSE"
                                                         (rule "replace_known_right" (formula "23") (term "0,1,1,0,0") (ifseqformula "35"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_geqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "24") (term "0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "nnf_imp2or" (formula "32") (term "0"))
                                                         (rule "nnf_imp2or" (formula "31") (term "0"))
                                                         (rule "arrayLengthNotNegative" (formula "23") (term "1,0,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "24") (term "1,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "nnf_imp2or" (formula "31") (term "0"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0"))
                                                         (rule "nnf_imp2or" (formula "29") (term "0"))
                                                         (rule "commute_or_2" (formula "35") (term "0"))
                                                         (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "45") (term "0,0"))
                                                         (branch "self.chosen[i_1_4].length ≥ 1 TRUE"
                                                            (rule "eqSymm" (formula "46") (term "0"))
                                                            (rule "replace_known_left" (formula "46") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "commute_or_2" (formula "21") (term "0"))
                                                            (rule "commute_or_2" (formula "16") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "50") (term "1,1,0,0,0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "51") (term "1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "ifthenelse_split" (formula "20") (term "0"))
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 TRUE"
                                                               (rule "eqSymm" (formula "21"))
                                                               (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "21"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "6") (term "0"))
                                                               (rule "ifthenelse_split" (formula "22") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "22") (ifseqformula "53"))
                                                                  (rule "close" (formula "50") (ifseqformula "12"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,0") (ifseqformula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "eqSymm" (formula "21") (term "1,0,0"))
                                                                  (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "4") (ifseqformula "52"))
                                                                     (rule "close" (formula "49") (ifseqformula "14"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,1,0,0") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "47") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "eqSymm" (formula "46") (term "1,0"))
                                                                     (rule "eqSymm" (formula "46") (term "1,0,1"))
                                                                     (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "allRight" (formula "46") (inst "sk=iv_14"))
                                                                     (rule "orRight" (formula "46"))
                                                                     (rule "orRight" (formula "46"))
                                                                     (rule "inEqSimp_geqRight" (formula "47"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "47"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "replace_known_left" (formula "48") (term "0,0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "1")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1"))
                                                                     (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                                     (rule "leq_literals" (formula "3") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "true_left" (formula "3"))
                                                                     (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_64"))
                                                                     (rule "simplifySelectOfMemset" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "48"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "52"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfCreate" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "48")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "20"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_geqRight" (formula "34"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_notGeq" (formula "21") (term "0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,0"))
                                                               (rule "commute_or_2" (formula "20") (term "0"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "7") (term "0"))
                                                               (rule "ifthenelse_split" (formula "22") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "22") (ifseqformula "53"))
                                                                  (rule "close" (formula "50") (ifseqformula "13"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "23") (term "1,1,1,1,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "21") (term "0,0,1") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,0,0,1,1,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "22"))
                                                                  (rule "hideAuxiliaryEq" (formula "22"))
                                                                  (rule "eqSymm" (formula "22") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "21") (term "0,1,1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "5"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "5") (ifseqformula "52"))
                                                                     (rule "close" (formula "49") (ifseqformula "15"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "47") (term "1,1,1,1,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "52") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,1,0,0") (ifseqformula "5"))
                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "3")))
                                                                     (rule "allRight" (formula "47") (inst "sk=iv_13"))
                                                                     (rule "orRight" (formula "47"))
                                                                     (rule "orRight" (formula "47"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "eqSymm" (formula "48"))
                                                                     (rule "inEqSimp_leqRight" (formula "46"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "1")))
                                                                     (rule "inEqSimp_geqRight" (formula "47"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                                     (rule "eqSymm" (formula "48"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "48"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1"))
                                                                     (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                                                     (rule "leq_literals" (formula "4") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_63"))
                                                                     (rule "simplifySelectOfMemset" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "48"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "52"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfCreate" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "48")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "self.chosen[i_1_4].length ≥ 1 FALSE"
                                                            (rule "eqSymm" (formula "46") (term "0"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "45")))
                                                            (rule "inEqSimp_geqRight" (formula "45"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "45") (term "1,1,1,0,0,1,0,1") (ifseqformula "2"))
                                                            (rule "add_zero_right" (formula "45") (term "1,1,0,0,1,0,1"))
                                                            (rule "eqSymm" (formula "45") (term "1,0,1"))
                                                            (rule "applyEq" (formula "50") (term "1,1,0,0,1,0") (ifseqformula "2"))
                                                            (rule "seqDef_lower_equals_upper" (formula "50") (term "1,0,0,1,0"))
                                                            (rule "applyEq" (formula "50") (term "1,1,0,0,1,1,0,1") (ifseqformula "2"))
                                                            (rule "seqDef_lower_equals_upper" (formula "50") (term "1,0,0,1,1,0,1"))
                                                            (rule "inEqSimp_or_tautInEq0" (formula "45") (term "0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                            (rule "qeq_literals" (formula "45") (term "1,0,0,1"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "orRight" (formula "45"))
                                                            (rule "notRight" (formula "45"))
                                                            (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0"))
                                                            (rule "leq_literals" (formula "46") (term "0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "false_right" (formula "46"))
                                                            (rule "commute_or_2" (formula "22") (term "0"))
                                                            (rule "commute_or_2" (formula "17") (term "0"))
                                                            (rule "arrayLengthNotNegative" (formula "50") (term "1,1,0,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "arrayLengthIsAShort" (formula "50") (term "1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "ifthenelse_split" (formula "20") (term "0"))
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 TRUE"
                                                               (rule "eqSymm" (formula "21"))
                                                               (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "21"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "6") (term "0"))
                                                               (rule "ifthenelse_split" (formula "22") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "22") (ifseqformula "52"))
                                                                  (rule "close" (formula "49") (ifseqformula "12"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "1,1,1,1,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "eqSymm" (formula "21") (term "1,0,0"))
                                                                  (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "48") (ifseqformula "4") (ifseqformula "51"))
                                                                     (rule "close" (formula "48") (ifseqformula "14"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,2,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEq" (formula "50") (term "1,1,0,0,0,1,0,1") (ifseqformula "3"))
                                                                     (rule "seqDef_lower_equals_upper" (formula "50") (term "1,0,0,0,1,0,1"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.encrypted[i_1_4].length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "20"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_geqRight" (formula "34"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_notGeq" (formula "21") (term "0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,0"))
                                                               (rule "commute_or_2" (formula "20") (term "0"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "7") (term "0"))
                                                               (rule "ifthenelse_split" (formula "22") (term "0"))
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                  (rule "andLeft" (formula "22"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "22") (ifseqformula "52"))
                                                                  (rule "close" (formula "49") (ifseqformula "13"))
                                                               )
                                                               (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                  (rule "applyEqReverse" (formula "23") (term "1,1,1,1,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,0,0,1,1,0") (ifseqformula "22"))
                                                                  (rule "applyEqReverse" (formula "21") (term "0,0,1") (ifseqformula "22"))
                                                                  (rule "hideAuxiliaryEq" (formula "22"))
                                                                  (rule "eqSymm" (formula "22") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "21") (term "0,1,1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                                     (rule "andLeft" (formula "5"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "48") (ifseqformula "5") (ifseqformula "51"))
                                                                     (rule "close" (formula "48") (ifseqformula "15"))
                                                                  )
                                                                  (branch "self.chosen = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                                     (rule "applyEqReverse" (formula "51") (term "1,2,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "51") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "applyEq" (formula "50") (term "1,1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "seqDef_lower_equals_upper" (formula "50") (term "1,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "allRight" (formula "50") (inst "sk=iv_12"))
                                                                     (rule "orRight" (formula "50"))
                                                                     (rule "orRight" (formula "50"))
                                                                     (rule "inEqSimp_leqRight" (formula "50"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "51"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "4"))
                                                                     (rule "closeFalse" (formula "4"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: array2seq(heap, self.electionID) = array2seq(store_0, self.electionID@store_0) FALSE"
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "21") (inst "iv=iv") (userinteraction))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "eqSymm" (formula "19"))
                                                   (rule "eqSymm" (formula "22") (term "0"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "polySimp_elimSub" (formula "4") (term "2,1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "1,2,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "2,1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "26"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "23") (term "1,0,0,1,0,1") (ifseqformula "5"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "4") (term "0,1") (ifseqformula "5"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "2") (term "1,1,0") (ifseqformula "5"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "28") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "28") (term "1,1,1,0,0") (ifseqformula "5"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "23") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "28") (term "1,1,0,0") (ifseqformula "5"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "2") (term "1,2,1,0,1,1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "28") (term "1,2,1,0,1,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "2") (term "1,2,1,0,1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "28") (term "1") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "5") (term "1,2,1,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "28") (term "1,2,1,0,1,1,1,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "23") (term "1,2,1,0,1,0,0,1,0,1") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "28") (term "1,2,1,0,1,1,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "18"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "nonNull" (formula "22") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "22") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")))
                                                   (rule "sub_literals" (formula "22") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "26"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "array2seqDef" (formula "17") (term "0,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                                                   (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "16"))
                                                   (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "17") (term "0,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "14") (term "0,0,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "14") (term "1,0,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "array2seqDef" (formula "23") (term "0,1,1,0,1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,1"))
                                                   (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                                                   (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                                                   (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                                                   (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "14") (term "1") (ifseqformula "2"))
                                                   (rule "array2seqDef" (formula "23") (term "0,1,0") (inst "u=u"))
                                                   (rule "eqSymm" (formula "23") (term "0"))
                                                   (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                                   (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                                   (rule "times_zero_2" (formula "23") (term "1,1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                                   (rule "array2seqDef" (formula "28") (term "0,0,0") (inst "u=u"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "28") (term "2,0,0,0") (ifseqformula "5"))
                                                   (rule "array2seqDef" (formula "28") (term "1") (inst "u=u"))
                                                   (rule "applyEq" (formula "28") (term "1") (ifseqformula "14"))
                                                   (rule "array2seqDef" (formula "28") (term "1,0,0") (inst "u=u"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "28") (term "2,1,0,0") (ifseqformula "5"))
                                                   (rule "array2seqDef" (formula "23") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                   (rule "lenOfSeqDef" (formula "23") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "23") (term "1,1,1,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "23") (term "1,1,1,1,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "1,1,1,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,1,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                   (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "getOfSeqDef" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                                                   (rule "lenOfSeqDef" (formula "17") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                   (rule "times_zero_2" (formula "17") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "17") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0,1,0,0") (ifseqformula "17"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                   (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                   (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                   (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                   (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "24") (term "1,0,1,0,1") (ifseqformula "5"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "2") (term "2,0") (ifseqformula "5"))
                                                   (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "14") (term "2,0") (ifseqformula "5"))
                                                   (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                                                   (rule "eqSymm" (formula "24") (term "0"))
                                                   (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                   (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                                                   (rule "dismissNonSelectedFieldEQ" (formula "29") (term "2,1") (ifseqformula "5"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_8"))
                                                   (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "29") (term "1,1,2,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,1,2,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "1,1,2,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "4"))
                                                   (rule "simplifySelectOfMemset" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                   (rule "eqSeqDef" (formula "15") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "lenOfSeqDef" (formula "15") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                                                   (rule "times_zero_2" (formula "15") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "15") (term "1,1"))
                                                   (rule "lenOfSeqDef" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "getOfSeqDef" (formula "16") (term "1,1,0"))
                                                   (rule "castDel" (formula "16") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "16") (term "2,1,1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,2,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0"))
                                                   (rule "lenOfSeqDef" (formula "15") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                                                   (rule "times_zero_2" (formula "15") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "15") (term "1,0"))
                                                   (rule "getOfSeqDef" (formula "16") (term "0,1,0"))
                                                   (rule "castDel" (formula "16") (term "2,0,1,0"))
                                                   (rule "castDel" (formula "16") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,2,1,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                   (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "15"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "simplifySelectOfCreate" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "29")))
                                                   (rule "applyEqReverse" (formula "16") (term "1,1,1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1,2,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "30") (term "1,0,1,1") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "30") (term "1,1,2,1") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "16") (term "1,0,1,1,1,0,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "15") (term "1,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "15") (term "1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                                                   (rule "pullOutSelect" (formula "24") (term "1,1,0,1,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_5"))
                                                   (rule "applyEq" (formula "25") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "30") (term "0,1,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "30") (term "1,2,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "25") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "25") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "30") (term "0,1,1,0,0") (inst "selectSK=arr_56"))
                                                   (rule "applyEq" (formula "31") (term "1,2,1,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "31"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfCreate" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
                                                   (rule "applyEqReverse" (formula "31") (term "1,2,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "31") (term "0,1,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "26") (term "0,0,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allRight" (formula "26") (inst "sk=iv_11"))
                                                   (rule "impRight" (formula "26"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                   (rule "eqSeqDef2" (formula "5") (inst "iv=iv") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv"))
                                                   (rule "lenOfSeqDef" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "1,1,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "31") (term "1,1,1,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "1,1,1,0,0,1"))
                                                   (rule "lenOfSeqDef" (formula "31") (term "0,0"))
                                                   (rule "eqSymm" (formula "31") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "31") (term "1,1,0"))
                                                   (rule "getOfSeqDef" (formula "31") (term "0,1,0,1"))
                                                   (rule "castDel" (formula "31") (term "2,0,1,0,1"))
                                                   (rule "castDel" (formula "31") (term "1,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,2,1,0,1,0,1"))
                                                   (rule "eqSymm" (formula "31") (term "1,0,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,1,0,1"))
                                                   (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,1,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "1,1,0,1,1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,1,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,1,0,1"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,1,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,1,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,1,0,0,1"))
                                                   (rule "apply_eq_monomials" (formula "31") (term "1,0,0,1,0,0,1") (ifseqformula "16"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "1,0,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,1,0,0,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1"))
                                                   (rule "pullOutSelect" (formula "17") (term "1,1,0,1,0") (inst "selectSK=arr_57"))
                                                   (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,1,0,1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,1,0,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "simplifySelectOfMemset" (formula "17"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "eqSymm" (formula "18") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "17") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "17") (term "1,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0,0,1") (ifseqformula "16"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_6"))
                                                   (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                                   (rule "simplifySelectOfMemset" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "28") (term "1,0") (inst "selectSK=arr_58"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                   (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "closeTrue" (formula "29"))
                                                )
                                             )
                                             (branch "CUT: array2seq(heap, self.encrypted[i_1_4]) = array2seq(store_0, self.encrypted[i_1_4]@store_0) FALSE"
                                                (rule "equalityToSeqGetAndSeqLenRight" (formula "20") (inst "iv=iv") (userinteraction))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "eqSymm" (formula "21") (term "0"))
                                                (rule "eqSymm" (formula "14"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "17"))
                                                (rule "eqSymm" (formula "21") (term "1,0,1"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,2,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "25"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "1,1") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "22") (term "1,0,0,1,0,1") (ifseqformula "4"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "22") (term "1,1,0,0,0") (ifseqformula "4"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "3") (term "0,1") (ifseqformula "4"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "1,1,1,0,1") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "22") (term "1,1,0,0,1,0,1") (ifseqformula "4"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "22") (term "1,0,0,0") (ifseqformula "4"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "1,1,0,0") (ifseqformula "4"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "1,0,0,0") (ifseqformula "4"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "1,1,1") (ifseqformula "4"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,1,0,1") (ifseqformula "5"))
                                                (rule "applyEq" (formula "27") (term "1,2,1,0,1,0,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "22") (term "1,2,1,0,1,1,0,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "22") (term "1,2,1,0,1,0,0,1,0,1") (ifseqformula "5"))
                                                (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,1,0,0") (ifseqformula "5"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
                                                (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "27") (term "1,2,1,0,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "27") (term "1,2,1,0,1,1,0") (ifseqformula "5"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "nonNull" (formula "21") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "21") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
                                                (rule "sub_literals" (formula "21") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "25"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                                                (rule "eqSymm" (formula "22") (term "0"))
                                                (rule "lenOfSeqDef" (formula "22") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
                                                (rule "times_zero_2" (formula "22") (term "1,1,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                                (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "array2seqDef" (formula "22") (term "0,1,1,0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "22") (term "1,0,1"))
                                                (rule "getOfSeqDef" (formula "22") (term "0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "1,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                (rule "array2seqDef" (formula "27") (term "0,0,0") (inst "u=u"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "2,0,0,0") (ifseqformula "4"))
                                                (rule "array2seqDef" (formula "27") (term "1") (inst "u=u"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "2,1") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "array2seqDef" (formula "22") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                (rule "lenOfSeqDef" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,1,1,0,0,1"))
                                                (rule "times_zero_2" (formula "22") (term "1,1,1,1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,1,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,1,1,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,1,0,0,1"))
                                                (rule "array2seqDef" (formula "16") (term "0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                                                (rule "eqSymm" (formula "22") (term "0"))
                                                (rule "lenOfSeqDef" (formula "22") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
                                                (rule "times_zero_2" (formula "22") (term "1,1,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                                (rule "array2seqDef" (formula "13") (term "1,0,1") (inst "u=u"))
                                                (rule "array2seqDef" (formula "13") (term "0,0,1") (inst "u=u"))
                                                (rule "array2seqDef" (formula "22") (term "0,1,1,0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "22") (term "1,0,1"))
                                                (rule "getOfSeqDef" (formula "22") (term "0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "22") (term "1,0,1,0,1") (ifseqformula "4"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                (rule "array2seqDef" (formula "27") (term "1,0,1") (inst "u=u"))
                                                (rule "dismissNonSelectedFieldEQ" (formula "27") (term "2,1,0,1") (ifseqformula "4"))
                                                (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                                (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                                (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_7"))
                                                (rule "applyEq" (formula "22") (term "1,0,1,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "27") (term "1,1,2,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "22") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "22") (term "1,1,1,0,1,0,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "27") (term "1,0,1,0") (ifseqformula "3"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "eqSeqDef" (formula "16") (inst "iv=iv"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "getOfSeqDef" (formula "17") (term "1,1,0"))
                                                (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                                                (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0"))
                                                (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                                                (rule "lenOfSeqDef" (formula "16") (term "1"))
                                                (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                                (rule "times_zero_2" (formula "16") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "16") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,1,0,0") (ifseqformula "16"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,1,0,0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "27") (term "1,1,2,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "22") (term "1,1,1,0,1,0,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "27") (term "1,0,1,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                                (rule "eqSeqDef" (formula "26") (inst "iv=iv"))
                                                (rule "lenOfSeqDef" (formula "26") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_2" (formula "26") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "26") (term "1,1,0"))
                                                (rule "getOfSeqDef" (formula "26") (term "1,1,0,1"))
                                                (rule "castDel" (formula "26") (term "1,1,1,0,1"))
                                                (rule "castDel" (formula "26") (term "2,1,1,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "0,2,1,1,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0,1"))
                                                (rule "pullOutSelect" (formula "21") (term "0,1,0,0") (inst "selectSK=arr_50"))
                                                (rule "applyEq" (formula "22") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "0,0,0,1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "22") (term "0"))
                                                (rule "eqSymm" (formula "22") (term "1,0,1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "27") (term "0,1,1,0,0,0,0") (inst "selectSK=arr_51"))
                                                (rule "applyEq" (formula "28") (term "0,1,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "28") (term "0,1,0,0,0,0,1,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
                                                (rule "applyEq" (formula "29") (term "1,2,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "1,2,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "1,2,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_52"))
                                                (rule "simplifySelectOfCreate" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_5"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_53"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "nnf_imp2or" (formula "22") (term "0"))
                                                (rule "nnf_imp2or" (formula "17") (term "0"))
                                                (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "14") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "narrowSelectArrayType" (formula "19") (term "1,1,1,0") (ifseqformula "9") (ifseqformula "29"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "30") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "35") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0"))
                                                (rule "nnf_imp2or" (formula "16") (term "0"))
                                                (rule "nnf_notAnd" (formula "30") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "35") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "35") (term "1,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "arrayLengthIsAShort" (formula "7") (term "1"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                                (rule "arrayLengthNotNegative" (formula "7") (term "1"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "arrayLengthIsAShort" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                (rule "arrayLengthNotNegative" (formula "21") (term "1"))
                                                (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "11"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "narrowSelectArrayType" (formula "19") (term "2,0,1,0,0,1,0") (ifseqformula "9") (ifseqformula "34"))
                                                (rule "narrowSelectArrayType" (formula "18") (term "2,0,1,0,0") (ifseqformula "9") (ifseqformula "34"))
                                                (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "greater_literals" (formula "28") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "27") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "39")))
                                                (rule "greater_literals" (formula "26") (term "0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "39"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "38")))
                                                (rule "greater_literals" (formula "25") (term "0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "38"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "24") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "40")))
                                                (rule "greater_literals" (formula "24") (term "0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "40"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0"))
                                                (rule "nnf_imp2or" (formula "28") (term "0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0"))
                                                (rule "nnf_imp2or" (formula "26") (term "0"))
                                                (rule "nnf_imp2or" (formula "25") (term "0"))
                                                (rule "nnf_imp2or" (formula "24") (term "0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0"))
                                                (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "18") (term "1"))
                                                (branch "self.unsigned.length ≥ 1 TRUE"
                                                   (rule "replace_known_left" (formula "20") (term "0,1,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "14") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "19") (term "1,0,1,0,0"))
                                                   (rule "arrayLengthNotNegative" (formula "20") (term "1,0,0,0"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "ifthenelse_split" (formula "43") (term "0,0"))
                                                   (branch "self.encrypted[i_1_4].length ≥ 1 TRUE"
                                                      (rule "eqSymm" (formula "44") (term "0"))
                                                      (rule "replace_known_left" (formula "44") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "3") (ifseqformula "50"))
                                                         (rule "close" (formula "47") (ifseqformula "12"))
                                                      )
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                         (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "45") (term "0,1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "50") (term "1,1,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "45") (term "1,1,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "45") (term "0,0,0,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0,1"))
                                                         (rule "replace_known_left" (formula "49") (term "0,1,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "allRight" (formula "44") (inst "sk=iv_10"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "inEqSimp_geqRight" (formula "45"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "45"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "replace_known_left" (formula "46") (term "0,0,1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1"))
                                                         (rule "replace_known_left" (formula "46") (term "0,1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                                         (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_55"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "47"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "47")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "self.encrypted[i_1_4].length ≥ 1 FALSE"
                                                      (rule "eqSymm" (formula "44") (term "0"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "43")))
                                                      (rule "inEqSimp_geqRight" (formula "43"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_notGeq" (formula "44") (term "0,0"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "44") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "44") (term "0,0,1"))
                                                      (rule "add_zero_right" (formula "44") (term "1,1,0,0,1"))
                                                      (rule "qeq_literals" (formula "44") (term "1,0,0,1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "orRight" (formula "44"))
                                                      (rule "inEqSimp_leqRight" (formula "44"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "replace_known_left" (formula "50") (term "0,1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradEq7" (formula "45") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0"))
                                                      (rule "leq_literals" (formula "45") (term "0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "4") (ifseqformula "50"))
                                                         (rule "close" (formula "47") (ifseqformula "13"))
                                                      )
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                         (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "50") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                )
                                                (branch "self.unsigned.length ≥ 1 FALSE"
                                                   (rule "replace_known_right" (formula "19") (term "0,1,1,0,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_geqRight" (formula "28"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "20") (term "0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "19") (term "1,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "arrayLengthNotNegative" (formula "19") (term "1,0,0,0"))
                                                   (rule "arrayLengthNotNegative" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "commute_or_2" (formula "17") (term "0"))
                                                   (rule "ifthenelse_split" (formula "42") (term "0,0"))
                                                   (branch "self.encrypted[i_1_4].length ≥ 1 TRUE"
                                                      (rule "eqSymm" (formula "43") (term "0"))
                                                      (rule "replace_known_left" (formula "43") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "4") (ifseqformula "49"))
                                                         (rule "close" (formula "46") (ifseqformula "13"))
                                                      )
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                         (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "44") (term "0,1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")))
                                                         (rule "allRight" (formula "44") (inst "sk=iv_9"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "applyEqReverse" (formula "51") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "46") (term "1,1,1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "45"))
                                                         (rule "replace_known_left" (formula "50") (term "0,1,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "inEqSimp_geqRight" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "44"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,0,1"))
                                                         (rule "replace_known_left" (formula "45") (term "0,1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                                                         (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_54"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "46"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "46")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "self.encrypted[i_1_4].length ≥ 1 FALSE"
                                                      (rule "eqSymm" (formula "43") (term "0"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                      (rule "inEqSimp_geqRight" (formula "42"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_notGeq" (formula "43") (term "0,0"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "43") (term "0,0,1"))
                                                      (rule "add_zero_right" (formula "43") (term "1,1,0,0,1"))
                                                      (rule "qeq_literals" (formula "43") (term "1,0,0,1"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "orRight" (formula "43"))
                                                      (rule "inEqSimp_leqRight" (formula "43"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "replace_known_left" (formula "49") (term "0,1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0"))
                                                      (rule "leq_literals" (formula "44") (term "0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "5") (ifseqformula "49"))
                                                         (rule "close" (formula "46") (ifseqformula "14"))
                                                      )
                                                      (branch "self.encrypted = x_arr_arr_2 ∧ msg.length ≥ 1 + i_1_4 FALSE"
                                                         (rule "applyEqReverse" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "49") (term "1,1,1,1,0,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (opengoal " ")
                                    )
                                 )
                                 (branch "Case 2"
                                    (opengoal " ")
                                 )
                              )
                              (branch "Case 2"
                                 (opengoal " ")
                              )
                           )
                           (branch "Case 2"
                              (rule "eqSymm" (formula "14"))
                              (rule "eqSymm" (formula "16"))
                              (rule "eqSymm" (formula "15"))
                              (rule "eqSymm" (formula "13"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "10") (term "1,0"))
                              (rule "eqSymm" (formula "24"))
                              (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,2,1,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0"))
                              (rule "inEqSimp_ltRight" (formula "22"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1") (ifseqformula "2"))
                              (rule "eqSymm" (formula "24"))
                              (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1") (ifseqformula "2"))
                              (rule "eqSymm" (formula "24"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "applyEq" (formula "2") (term "1,2,1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                              (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "19") (inst "i=i_1"))
                              (rule "greater_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")))
                              (rule "sub_literals" (formula "19") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "22"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "14"))
                              (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "13"))
                              (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "11") (term "1,0"))
                              (rule "array2seqDef" (formula "14") (term "0,1,1") (inst "u=u"))
                              (rule "array2seqDef" (formula "14") (term "1,1,1") (inst "u=u"))
                              (rule "applyEq" (formula "14") (term "1,1,1") (ifseqformula "13"))
                              (rule "array2seqDef" (formula "14") (term "0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "14"))
                              (rule "array2seqDef" (formula "11") (term "1,0,1,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "11") (term "0,0,1,1,0") (inst "u=u"))
                              (rule "eqSeqDef2" (formula "13") (inst "iv=iv") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "eqSeqDef" (formula "13") (inst "iv=iv"))
                              (rule "andLeft" (formula "13"))
                              (rule "lenOfSeqDef" (formula "13") (term "1"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1"))
                              (rule "add_zero_right" (formula "13") (term "1,1"))
                              (rule "getOfSeqDef" (formula "14") (term "1,1,0"))
                              (rule "castDel" (formula "14") (term "1,1,1,0"))
                              (rule "castDel" (formula "14") (term "2,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0"))
                              (rule "applyEq" (formula "14") (term "0,1,0,1,0,0") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_3"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_3"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "25"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "24"))
                              (rule "close" (formula "24") (ifseqformula "15"))
                           )
                        )
                        (branch "Case 2"
                           (rule "eqSymm" (formula "14"))
                           (rule "eqSymm" (formula "16"))
                           (rule "eqSymm" (formula "15"))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "12"))
                           (rule "eqSymm" (formula "10") (term "1,0"))
                           (rule "eqSymm" (formula "24"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,2,1,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "22"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1") (ifseqformula "2"))
                           (rule "eqSymm" (formula "24"))
                           (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1") (ifseqformula "2"))
                           (rule "eqSymm" (formula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "applyEq" (formula "2") (term "1,2,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "19") (inst "i=i_1"))
                           (rule "greater_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")))
                           (rule "sub_literals" (formula "19") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "22"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "14"))
                           (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "13"))
                           (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                           (rule "eqSymm" (formula "11") (term "1,0"))
                           (rule "array2seqDef" (formula "14") (term "0,1,1") (inst "u=u"))
                           (rule "array2seqDef" (formula "14") (term "1,1,1") (inst "u=u"))
                           (rule "applyEq" (formula "14") (term "1,1,1") (ifseqformula "13"))
                           (rule "array2seqDef" (formula "14") (term "0,1") (inst "u=u"))
                           (rule "eqSymm" (formula "14"))
                           (rule "array2seqDef" (formula "11") (term "1,0,1,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "11") (term "0,0,1,1,0") (inst "u=u"))
                           (rule "eqSeqDef2" (formula "13") (inst "iv=iv") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "eqSeqDef" (formula "13") (inst "iv=iv"))
                           (rule "andLeft" (formula "13"))
                           (rule "lenOfSeqDef" (formula "13") (term "1"))
                           (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                           (rule "times_zero_2" (formula "13") (term "1,1,1"))
                           (rule "add_zero_right" (formula "13") (term "1,1"))
                           (rule "getOfSeqDef" (formula "14") (term "1,1,0"))
                           (rule "castDel" (formula "14") (term "1,1,1,0"))
                           (rule "castDel" (formula "14") (term "2,1,1,0"))
                           (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0"))
                           (rule "applyEq" (formula "14") (term "0,1,0,1,0,0") (ifseqformula "13"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_4"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "24") (term "1") (ifseqformula "15"))
                           (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "25"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "24"))
                           (rule "close" (formula "24") (ifseqformula "16"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "allRight" (formula "23") (inst "sk=j_1"))
                     (rule "impRight" (formula "23"))
                     (rule "andLeft" (formula "1"))
                     (rule "notRight" (formula "25"))
                     (rule "eqSymm" (formula "12") (term "1,0"))
                     (rule "eqSymm" (formula "14"))
                     (rule "eqSymm" (formula "15"))
                     (rule "eqSymm" (formula "16"))
                     (rule "eqSymm" (formula "17"))
                     (rule "eqSymm" (formula "18"))
                     (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "polySimp_elimSub" (formula "1") (term "2,1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,2,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0,0"))
                     (rule "inEqSimp_ltRight" (formula "24"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "applyEq" (formula "2") (term "1,2,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "19"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "allRight" (formula "23") (inst "sk=j_0"))
                  (rule "impRight" (formula "23"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "11") (term "1,0"))
                  (rule "eqSymm" (formula "13"))
                  (rule "eqSymm" (formula "14"))
                  (rule "eqSymm" (formula "15"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSymm" (formula "17"))
                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0"))
                  (rule "eqSymm" (formula "25"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,0,0,0,0"))
                  (rule "eqSymm" (formula "25"))
                  (rule "polySimp_elimSub" (formula "25") (term "2,1,0,0,1,0"))
                  (rule "mul_literals" (formula "25") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "2,1,0,0,1,0"))
                  (rule "inEqSimp_ltRight" (formula "23"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "25") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "applyEq" (formula "25") (term "1,2,1,0,0,0") (ifseqformula "4"))
                  (rule "eqSymm" (formula "25"))
                  (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "18"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "18"))
                  (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0,0") (ifseqformula "4"))
                  (rule "eqSymm" (formula "25"))
                  (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                  (rule "applyEq" (formula "25") (term "1,2,1,0,1,0") (ifseqformula "4"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "Case 2"
               (rule "wellFormedStorePrimitive" (formula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "9") (term "1,0"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "12"))
               (rule "eqSymm" (formula "13"))
               (rule "eqSymm" (formula "14"))
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_elimSub" (formula "23") (term "2,1,0"))
               (rule "mul_literals" (formula "23") (term "1,2,1,0"))
               (rule "polySimp_addComm0" (formula "23") (term "2,1,0"))
               (rule "inEqSimp_ltRight" (formula "21"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "applyEq" (formula "23") (term "1,2,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
               (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
               (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
               (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "18") (inst "i=i_1"))
               (rule "greater_literals" (formula "18") (term "0,1"))
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")))
               (rule "sub_literals" (formula "18") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "21"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "10") (term "0,0,0,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "10") (term "1,0"))
               (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "12"))
               (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
               (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
               (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "12"))
               (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
               (rule "wellFormedMemsetArrayObject" (formula "23"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "wellFormedStorePrimitive" (formula "23") (term "0"))
               (rule "wellFormedStorePrimitive" (formula "23") (term "0"))
               (rule "wellFormedStorePrimitive" (formula "23") (term "0"))
               (rule "wellFormedCreate" (formula "23") (term "0"))
               (rule "orRight" (formula "23"))
               (rule "close" (formula "23") (ifseqformula "4"))
            )
         )
         (branch "Body Preserves Invariant"
            (opengoal " ")
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "23"))
            (rule "variableDeclarationAssign" (formula "23") (term "1") (userinteraction))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "b_1") (userinteraction))
            (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v0=x") (inst "#v1=x_1") (userinteraction))
            (rule "variableDeclarationAssign" (formula "23") (term "1") (userinteraction))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_2") (userinteraction))
            (rule "assignment" (formula "23") (term "1") (userinteraction))
            (rule "variableDeclarationAssign" (formula "23") (term "1,1") (userinteraction))
            (rule "variableDeclaration" (formula "23") (term "1,1") (newnames "x_3") (userinteraction))
            (rule "assignment_read_length" (formula "23") (term "1,1") (userinteraction))
            (branch "Normal Execution (_msg != null)"
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
               (builtin "One Step Simplification" (formula "18"))
               (rule "false_right" (formula "23"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "20"))
               (rule "notLeft" (formula "1"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "20"))
               (rule "pullOut" (formula "22") (term "0,0") (inst "sk=anon_0") (userinteraction))
               (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "22") (userinteraction))
               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "22") (userinteraction))
               (rule "applyEq" (formula "25") (term "0,1,0,1,0") (ifseqformula "22") (userinteraction))
               (rule "applyEq" (formula "25") (term "0,0,0,1,1,0") (ifseqformula "22") (userinteraction))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "19")))
               (builtin "One Step Simplification" (formula "2"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")))
               (rule "false_right" (formula "26") (userinteraction))
               (rule "applyEq" (formula "30") (term "0,1,1,0") (ifseqformula "22") (userinteraction))
               (builtin "One Step Simplification" (formula "30"))
               (rule "less_than_comparison_simple" (formula "30") (term "1") (userinteraction))
               (rule "methodCallEmpty" (formula "30") (term "1,1") (userinteraction))
               (rule "emptyModality" (formula "30") (term "1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30") (userinteraction))
               (rule "methodCallReturn" (formula "31") (term "1") (userinteraction))
               (rule "assignment" (formula "31") (term "1") (userinteraction))
               (rule "methodCallEmpty" (formula "31") (term "1,1") (userinteraction))
               (rule "tryEmpty" (formula "31") (term "1,1") (userinteraction))
               (rule "emptyModality" (formula "31") (term "1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "2")) (ifInst ""  (formula "30")))
               (rule "andRight" (formula "31") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "31") (userinteraction))
                  (branch "Case 1"
                     (rule "seqPermDef" (formula "31") (inst "iv=iv") (inst "s=s") (userinteraction))
                     (rule "andRight" (formula "31") (userinteraction))
                     (branch "Case 1"
                        (rule "array2seq2dDef" (formula "31") (term "0,0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "31") (term "0,1") (inst "u=u") (userinteraction))
                        (rule "lenOfSeqDef" (formula "31") (term "0") (userinteraction))
                        (rule "lenOfSeqDef" (formula "31") (term "1") (userinteraction))
                        (rule "array2seq2dDef" (formula "16") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "16") (term "1") (inst "u=u") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv") (userinteraction))
                        (rule "andLeft" (formula "16"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "eqSymm" (formula "12"))
                        (rule "eqSymm" (formula "16"))
                        (rule "eqSymm" (formula "8") (term "1,0"))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "33"))
                        (rule "eqSymm" (formula "10"))
                        (rule "eqSymm" (formula "14"))
                        (rule "eqSymm" (formula "15") (term "1,0"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0"))
                        (rule "polySimp_elimSub" (formula "33") (term "1,1"))
                        (rule "mul_literals" (formula "33") (term "1,1,1"))
                        (rule "add_zero_right" (formula "33") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "33") (term "1,0"))
                        (rule "mul_literals" (formula "33") (term "1,1,0"))
                        (rule "add_zero_right" (formula "33") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0"))
                        (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "31"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "lenOfSeqDef" (formula "15") (term "0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                        (rule "mul_literals" (formula "15") (term "1,1,1"))
                        (rule "add_zero_right" (formula "15") (term "1,1"))
                        (rule "inEqSimp_ltRight" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "getOfSeqDef" (formula "17") (term "0,1,0"))
                        (rule "castDel" (formula "17") (term "2,0,1,0"))
                        (rule "castDel" (formula "17") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,1,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1"))
                        (rule "add_zero_right" (formula "33") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                        (rule "lenOfSeqDef" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                        (rule "mul_literals" (formula "16") (term "1,1,1"))
                        (rule "add_zero_right" (formula "16") (term "1,1"))
                        (rule "getOfSeqDef" (formula "17") (term "0,1,0"))
                        (rule "castDel" (formula "17") (term "1,0,1,0"))
                        (rule "castDel" (formula "17") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,1,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                        (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "25") (term "1,2,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "33") (term "0,1,0,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                        (rule "eqSymm" (formula "33"))
                        (rule "polySimp_elimOne" (formula "33") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                        (rule "eqSymm" (formula "33"))
                        (rule "polySimp_elimOne" (formula "33") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "28") (term "0,0,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "28") (term "1,0"))
                        (rule "nonNull" (formula "20") (inst "i=i_1"))
                        (rule "greater_literals" (formula "20") (term "0,1"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "31")))
                        (rule "sub_literals" (formula "20") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "31"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                        (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "18") (term "2,0") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "18") (term "2,1") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "10") (term "0,0,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "10") (term "1,0,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "10") (term "1,0"))
                        (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "12"))
                        (rule "array2seqDef" (formula "17") (term "1,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "17") (term "1,1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "28") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "28") (term "1,0"))
                        (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                        (rule "andLeft" (formula "18"))
                        (rule "lenOfSeqDef" (formula "18") (term "1"))
                        (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                        (rule "mul_literals" (formula "18") (term "1,1,1"))
                        (rule "add_zero_right" (formula "18") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "18") (term "0"))
                        (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                        (rule "times_zero_2" (formula "18") (term "1,1,0"))
                        (rule "add_zero_right" (formula "18") (term "1,0"))
                        (rule "getOfSeqDef" (formula "19") (term "0,1,0"))
                        (rule "castDel" (formula "19") (term "1,0,1,0"))
                        (rule "castDel" (formula "19") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,2,0,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,2,1,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "1,1,0,0,1,0"))
                        (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                        (rule "castDel" (formula "19") (term "2,1,1,0"))
                        (rule "castDel" (formula "19") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,2,0,1,1,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,2,1,2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0"))
                        (rule "times_zero_2" (formula "19") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "1,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "19") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "19") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "18") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "18") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                        (rule "eqSeqDef" (formula "13") (inst "iv=iv"))
                        (rule "andLeft" (formula "13"))
                        (rule "lenOfSeqDef" (formula "13") (term "1"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                        (rule "times_zero_2" (formula "13") (term "1,1,1"))
                        (rule "add_zero_right" (formula "13") (term "1,1"))
                        (rule "getOfSeqDef" (formula "14") (term "1,1,0"))
                        (rule "castDel" (formula "14") (term "2,1,1,0"))
                        (rule "castDel" (formula "14") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0"))
                        (rule "applyEq" (formula "14") (term "0,1,0,1,0,0") (ifseqformula "13"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "33") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_25"))
                        (rule "applyEq" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "1,2,1,0,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                        (rule "applyEq" (formula "18") (term "0,0,1,1,1,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "18") (term "1,1,1,1,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                        (rule "add_literals" (formula "25") (term "1,0"))
                        (rule "times_zero_1" (formula "25") (term "0"))
                        (rule "leq_literals" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "27") (term "1,0,0,1,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "17") (term "1,1,1,0,1,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "23"))
                        (rule "eqSeqDef2" (formula "11") (inst "iv=iv") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_26"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__61"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "31") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "1"))
                        (rule "close" (formula "31") (ifseqformula "15"))
                     )
                     (branch "Case 2"
                        (rule "seqPermDef" (formula "11") (inst "iv=iv") (inst "s=s") (userinteraction))
                        (rule "andLeft" (formula "11") (userinteraction))
                        (rule "exLeft" (formula "12") (inst "sk=s_0") (userinteraction))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "exRightHide" (formula "34") (inst "t=s_0") (userinteraction))
                        (rule "andRight" (formula "34") (userinteraction))
                        (branch "Case 1"
                           (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "11") (userinteraction))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "array2seq2dDef" (formula "34") (term "0,1") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "9") (term "0,0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "9") (term "0,1") (inst "u=u") (userinteraction))
                           (rule "lenOfSeqDef" (formula "9") (term "0") (userinteraction))
                           (rule "lenOfSeqDef" (formula "9") (term "1") (userinteraction))
                           (rule "lenOfSeqDef" (formula "34") (term "1") (userinteraction))
                           (rule "array2seq2dDef" (formula "10") (term "0,1") (inst "u=u") (userinteraction))
                           (rule "lenOfSeqDef" (formula "10") (term "1") (userinteraction))
                           (rule "array2seq2dDef" (formula "17") (term "0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "17") (term "1") (inst "u=u") (userinteraction))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv") (userinteraction))
                           (rule "andLeft" (formula "17") (userinteraction))
                           (rule "lenOfSeqDef" (formula "17") (term "0") (userinteraction))
                           (rule "lenOfSeqDef" (formula "17") (term "1") (userinteraction))
                           (rule "eqSymm" (formula "19"))
                           (rule "eqSymm" (formula "15"))
                           (rule "eqSymm" (formula "18") (term "1,0"))
                           (rule "eqSymm" (formula "8") (term "1,0"))
                           (rule "eqSymm" (formula "36"))
                           (rule "eqSymm" (formula "17"))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "10"))
                           (rule "eqSymm" (formula "14"))
                           (rule "eqSymm" (formula "16"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                           (rule "times_zero_2" (formula "9") (term "1,1,1"))
                           (rule "add_zero_right" (formula "9") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "9") (term "1,0"))
                           (rule "times_zero_2" (formula "9") (term "1,1,0"))
                           (rule "add_zero_right" (formula "9") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "26") (term "2,1,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,2,1,0,0,0"))
                           (rule "polySimp_elimSub" (formula "36") (term "1,0"))
                           (rule "times_zero_2" (formula "36") (term "1,1,0"))
                           (rule "add_zero_right" (formula "36") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                           (rule "mul_literals" (formula "17") (term "1,1,1"))
                           (rule "add_zero_right" (formula "17") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                           (rule "times_zero_2" (formula "17") (term "1,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                           (rule "times_zero_2" (formula "10") (term "1,1,0"))
                           (rule "add_zero_right" (formula "10") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "2,1,0,0,0"))
                           (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                           (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                           (rule "castDel" (formula "18") (term "2,0,1,0"))
                           (rule "castDel" (formula "18") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "18") (term "0,2,1,1,0,1,0"))
                           (rule "eqSymm" (formula "18") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_ltRight" (formula "34"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1"))
                           (rule "add_zero_right" (formula "11") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "getOfSeqDef" (formula "20") (term "0,1,0"))
                           (rule "castDel" (formula "20") (term "1,0,1,0"))
                           (rule "castDel" (formula "20") (term "2,0,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,2,1,1,0,1,0"))
                           (rule "eqSymm" (formula "20") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27"))
                           (rule "inEqSimp_commuteLeq" (formula "26"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "20") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "20") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "36") (term "0,1,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "28") (term "1,2,1,0,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                           (rule "eqSymm" (formula "18"))
                           (rule "close" (formula "35") (ifseqformula "18"))
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "34") (inst "sk=iv_19") (userinteraction))
                           (rule "impRight" (formula "34") (userinteraction))
                           (rule "andLeft" (formula "1") (userinteraction))
                           (rule "seqNPermRange" (formula "13") (inst "iv=iv") (userinteraction))
                           (rule "seqNPermDefLeft" (formula "14") (inst "jv=jv") (inst "iv=iv") (userinteraction))
                           (rule "array2seq2dDef" (formula "21") (term "0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "21") (term "1") (inst "u=u") (userinteraction))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "21") (inst "iv=iv") (userinteraction))
                           (rule "andLeft" (formula "21") (userinteraction))
                           (rule "lenOfSeqDef" (formula "21") (term "0") (userinteraction))
                           (rule "lenOfSeqDef" (formula "21") (term "1") (userinteraction))
                           (rule "sub_zero_2" (formula "21") (term "1,0") (userinteraction))
                           (rule "sub_zero_2" (formula "21") (term "1,1") (userinteraction))
                           (opengoal " ")
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "Definition_axiom_for_ghostFieldsPre_in_verif_selectvoting_system_core_MixServer" (formula "24") (term "0") (inst "i=i_1") (userinteraction))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "notLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "andRight" (formula "37") (userinteraction))
                     (branch "Case 1"
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "37") (ifseqformula "4") (userinteraction))
                        (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "22") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2") (userinteraction))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "24"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "24"))
                        (rule "notLeft" (formula "23"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "23"))
                        (rule "notLeft" (formula "22"))
                        (rule "andRight" (formula "44") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "44") (userinteraction))
                           (branch "Case 1"
                              (rule "andRight" (formula "44") (userinteraction))
                              (branch "Case 1"
                                 (rule "andRight" (formula "44") (userinteraction))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "44") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "44") (userinteraction))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "44") (userinteraction))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "44") (userinteraction))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "44") (userinteraction))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "44") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "eqSymm" (formula "25") (term "1,0"))
                                                      (rule "eqSymm" (formula "8") (term "1,0"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "eqSymm" (formula "30"))
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "eqSymm" (formula "14"))
                                                      (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "36")))
                                                      (rule "closeTrue" (formula "44"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "eqSymm" (formula "25") (term "1,0"))
                                                      (rule "eqSymm" (formula "8") (term "1,0"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "eqSymm" (formula "30"))
                                                      (rule "eqSymm" (formula "14"))
                                                      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "42"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                      (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                                      (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                                      (rule "nonNull" (formula "44") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "37")))
                                                      (rule "greater_literals" (formula "44") (term "0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "allRight" (formula "44") (inst "sk=i_1_34"))
                                                      (rule "impRight" (formula "44"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notRight" (formula "46"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2"))
                                                      (rule "apply_eq_monomials" (formula "3") (term "1,0") (ifseqformula "35"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "apply_eq_monomials" (formula "3") (term "1,0") (ifseqformula "34"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "nonNull" (formula "21") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "21") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "45")))
                                                      (rule "sub_literals" (formula "21") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "45"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                      (rule "array2seqDef" (formula "37") (term "0,0,1,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "30") (term "1,0,0,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "30") (term "1,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "30") (term "1,0"))
                                                      (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "13") (term "1,0"))
                                                      (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "15"))
                                                      (rule "array2seqDef" (formula "32") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "array2seqDef" (formula "33") (term "0,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "33") (term "0,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "33") (term "1,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "33") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "33"))
                                                      (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                                      (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                                      (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                                      (rule "pullOutSelect" (formula "31") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_24"))
                                                      (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0,1,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "30") (term "1,1,2,0,1,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "30") (term "1,0,1,0,1,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "31"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                                                      (rule "eqSymm" (formula "35"))
                                                      (rule "eqSymm" (formula "30") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "31") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "47")))
                                                      (rule "ifthenelse_negated" (formula "31") (term "0"))
                                                      (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_22"))
                                                      (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "1,0,1,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "1,1,2,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "eqSymm" (formula "31") (term "1,0"))
                                                      (rule "eqSymm" (formula "36"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                                      (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_19"))
                                                      (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "1,1,1,1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "43") (term "0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "30") (term "1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "35") (term "0,0,0,1") (ifseqformula "33"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")))
                                                      (rule "sortsDisjointModuloNull" (formula "33") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "33") (term "1,0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")))
                                                      (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                      (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,0,1") (ifseqformula "38"))
                                                      (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_18"))
                                                      (rule "applyEq" (formula "37") (term "1,2,1,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "0,1,1,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "applyEqRigid" (formula "37") (term "1,1,1") (ifseqformula "36"))
                                                      (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_20"))
                                                      (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "38") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                      (rule "eqSymm" (formula "38"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "array2seqDef" (formula "16") (term "1,0,1,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "16") (term "0,0,1,1,0") (inst "u=u"))
                                                      (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                                                      (rule "castDel" (formula "20") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "20") (term "2,1,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "lenOfSeqDef" (formula "19") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "19") (term "1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                                                      (rule "applyEq" (formula "20") (term "0,1,0,1,0,0") (ifseqformula "19"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "array2seqDef" (formula "34") (term "0,0,1,1,0") (inst "u=u"))
                                                      (rule "eqSeqDef" (formula "39") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "getOfSeqDef" (formula "40") (term "1,1,0"))
                                                      (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,2,1,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "40") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "40") (term "1,1,0,1,1,0"))
                                                      (rule "lenOfSeqDef" (formula "39") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,1"))
                                                      (rule "times_zero_2" (formula "39") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "39") (term "1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "apply_eq_monomials" (formula "40") (term "1,0,1,0,0") (ifseqformula "39"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "1,0,1,0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                                      (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__57"))
                                                      (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "simplifySelectOfMemset" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "simplifySelectOfStore" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "simplifySelectOfStore" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "simplifySelectOfStore" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "simplifySelectOfCreate" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                      (rule "castDel" (formula "34") (term "1,0"))
                                                      (rule "eqSymm" (formula "34") (term "0,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                      (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                      (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "34"))
                                                      (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "simplifySelectOfMemset" (formula "34"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "simplifySelectOfMemset" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "simplifySelectOfMemset" (formula "35"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfMemset" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                      (rule "eqSeqDef2" (formula "37") (inst "iv=iv") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_193"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")))
                                                      (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                      (rule "narrowSelectArrayType" (formula "4") (term "1,0") (ifseqformula "26") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                      (rule "ifEqualsNull" (formula "4"))
                                                      (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "37") (term "1,2,2,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "30") (term "1,2,1,0,0,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (rule "leq_literals" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "0"))
                                                      (rule "qeq_literals" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "applyEq" (formula "33") (term "1,2,2,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "41") (term "1,0,0,1,1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                      (rule "pullOutSelect" (formula "32") (term "1,2,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_23"))
                                                      (rule "applyEq" (formula "38") (term "1,2,0,1,0,0,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "38") (term "0,1,0,1,0,0,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "37") (term "0,1,0,1,0,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,0,1,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "37") (term "1,2,0,1,0,0") (ifseqformula "32"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "49")))
                                                      (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "32") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "51")))
                                                      (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                      (rule "pullOutSelect" (formula "37") (term "1,2,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_13"))
                                                      (rule "applyEq" (formula "39") (term "1,2,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "39") (term "0,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "38") (term "0,1,0,0,0") (ifseqformula "37"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "eqSymm" (formula "37") (term "0,0"))
                                                      (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "simplifySelectOfStore" (formula "37"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "52")))
                                                      (rule "simplifySelectOfMemset" (formula "37"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "dismissNonSelectedField" (formula "37") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "37") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "37") (term "2,0"))
                                                      (rule "elementOfArrayRange" (formula "35") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "simplifySelectOfCreate" (formula "35"))
                                                      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "52")))
                                                      (rule "applyEqReverse" (formula "38") (term "1,1,1,1,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "39") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,1,1") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,0,1,0,0,1") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1") (ifseqformula "35"))
                                                      (rule "hideAuxiliaryEq" (formula "35"))
                                                      (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                      (rule "eqSymm" (formula "4") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,1,0,0,1,0") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "17") (term "0,0,1,1,0,0") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "20") (term "1") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "19") (term "1") (ifseqformula "40"))
                                                      (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                      (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,1,2,1,0,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,0,1,1,0,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "38") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "37") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "18") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "17") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "eqSymm" (formula "38"))
                                                      (rule "eqSymm" (formula "32") (term "1,0"))
                                                      (rule "applyEq" (formula "32") (term "1,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "16") (term "0,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "17") (term "0,0,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "18") (term "1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "19") (term "1") (ifseqformula "38"))
                                                      (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "simplifySelectOfCreate" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                                      (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                      (rule "applyEqReverse" (formula "36") (term "1,1,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "35") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "36") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "36") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "35") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "15") (term "1,1,1,0") (ifseqformula "6") (ifseqformula "43"))
                                                      (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "simplifySelectOfCreate" (formula "31"))
                                                      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "47")))
                                                      (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "29") (term "1,0,1,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "29") (term "1,1,2,1,1,0") (ifseqformula "30"))
                                                      (rule "hideAuxiliaryEq" (formula "30"))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "eqSymm" (formula "29") (term "1,0"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "16") (term "1") (ifseqformula "34"))
                                                      (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "simplifySelectOfCreate" (formula "31"))
                                                      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                                      (rule "applyEqReverse" (formula "32") (term "1,2,0,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,0,0,0,1,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "32") (term "0,1,0,0,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,2,0,0,0,1,0") (ifseqformula "31"))
                                                      (rule "hideAuxiliaryEq" (formula "31"))
                                                      (rule "pullOutSelect" (formula "28") (term "0,0,0") (inst "selectSK=java_lang_Object_created__58"))
                                                      (rule "simplifySelectOfMemset" (formula "28"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replaceKnownSelect_taclet100000000001002010_6" (formula "28") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100000000001002010_10" (formula "28") (term "0"))
                                                      (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "7"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "simplifySelectOfMemset" (formula "28"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_194"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__59"))
                                                      (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                                                      (rule "simplifySelectOfMemset" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "simplifySelectOfStore" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "simplifySelectOfStore" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "simplifySelectOfStore" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "simplifySelectOfCreate" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "eqSymm" (formula "2") (term "0,0"))
                                                      (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "simplifySelectOfCreate" (formula "30"))
                                                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                                      (rule "applyEqReverse" (formula "34") (term "1,2,0,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,2,0,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "31") (term "1,2,0,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "33") (term "0,1,0,1,0,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,1,0,0,1,1,0") (ifseqformula "30"))
                                                      (rule "applyEqReverse" (formula "34") (term "0,1,0,1,0,0,1,0") (ifseqformula "30"))
                                                      (rule "hideAuxiliaryEq" (formula "30"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_195"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "8") (ifseqformula "39"))
                                                      (rule "nnf_imp2or" (formula "35") (term "0"))
                                                      (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "13") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "44")) (ifInst ""  (formula "8")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "16") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "23") (term "0"))
                                                      (rule "nnf_imp2or" (formula "38") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                      (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                      (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                      (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                      (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "nnf_imp2or" (formula "31") (term "0"))
                                                      (rule "nnf_imp2or" (formula "30") (term "0"))
                                                      (rule "nnf_imp2or" (formula "19") (term "0"))
                                                      (rule "nnf_imp2or" (formula "16") (term "0"))
                                                      (rule "nnf_imp2or" (formula "32") (term "0"))
                                                      (rule "nnf_imp2or" (formula "33") (term "0"))
                                                      (rule "nnf_imp2or" (formula "36") (term "0"))
                                                      (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "13") (term "0"))
                                                      (rule "nnf_imp2or" (formula "15") (term "0"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                      (rule "ifthenelse_split" (formula "18") (term "1"))
                                                      (branch "self.unsigned.length ≥ 1 TRUE"
                                                         (rule "replace_known_left" (formula "37") (term "0,1,1,0,0") (ifseqformula "18"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "replace_known_left" (formula "20") (term "0,1,1,0,0") (ifseqformula "18"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "18"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,0,0,0"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1,0,1,0,0"))
                                                         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "26") (ifseqformula "10"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "notLeft" (formula "27"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "narrowSelectArrayType" (formula "22") (term "2,0,1,0,0,1,0") (ifseqformula "8") (ifseqformula "51"))
                                                         (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "8") (ifseqformula "51"))
                                                         (rule "narrowSelectArrayType" (formula "16") (term "2,0,0,1,1,0") (ifseqformula "8") (ifseqformula "51"))
                                                         (rule "nonNull" (formula "31") (inst "i=i_1"))
                                                         (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "greater_literals" (formula "31") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "30") (inst "i=i_1"))
                                                         (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "greater_literals" (formula "30") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "29") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                         (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")))
                                                         (rule "greater_literals" (formula "28") (term "0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "55"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "27") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "56")))
                                                         (rule "sub_literals" (formula "27") (term "2,1,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "56"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "45"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                         (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "57")))
                                                         (rule "greater_literals" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "57"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                         (rule "commute_or" (formula "3") (term "0,0"))
                                                         (rule "commute_or" (formula "3") (term "0,0,1"))
                                                         (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                         (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "nnf_imp2or" (formula "31") (term "0"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0"))
                                                         (rule "commute_or_2" (formula "46") (term "0"))
                                                         (rule "nnf_imp2or" (formula "29") (term "0"))
                                                         (rule "commute_or_2" (formula "32") (term "0"))
                                                         (rule "nnf_imp2or" (formula "28") (term "0"))
                                                         (rule "commute_or_2" (formula "47") (term "0"))
                                                         (rule "nnf_imp2or" (formula "27") (term "0"))
                                                         (rule "commute_or_2" (formula "39") (term "0"))
                                                         (rule "nnf_imp2or" (formula "26") (term "0"))
                                                         (rule "commute_or_2" (formula "38") (term "0"))
                                                         (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "self.sorted = x_arr_arr_2 TRUE"
                                                            (rule "referencedObjectIsCreatedRightEQ" (formula "58") (ifseqformula "2") (ifseqformula "61"))
                                                            (rule "close" (formula "58") (ifseqformula "9"))
                                                         )
                                                         (branch "self.sorted = x_arr_arr_2 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,1") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,1") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "arrayLengthIsAShort" (formula "40") (term "1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                            (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                            (rule "arrayLengthNotNegative" (formula "40") (term "1"))
                                                            (rule "commute_or_2" (formula "11") (term "0"))
                                                            (rule "commute_or_2" (formula "13") (term "0"))
                                                            (rule "commute_or_2" (formula "39") (term "0"))
                                                            (rule "commute_or_2" (formula "12") (term "0"))
                                                            (rule "commute_or_2" (formula "20") (term "0"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1") (ifseqformula "6"))
                                                            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "6"))
                                                            (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                            (rule "commute_or" (formula "43") (term "0,0"))
                                                            (rule "commute_or" (formula "29") (term "0,0"))
                                                            (rule "commute_or_2" (formula "28") (term "0"))
                                                            (rule "commute_or" (formula "44") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "commute_or" (formula "35") (term "0,0"))
                                                            (rule "commute_or_2" (formula "27") (term "0"))
                                                            (rule "commute_or_2" (formula "26") (term "0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "commute_or" (formula "38") (term "0,0"))
                                                            (rule "commute_or" (formula "11") (term "0,0"))
                                                            (rule "commute_or" (formula "13") (term "0,0"))
                                                            (rule "commute_or" (formula "41") (term "0,0"))
                                                            (rule "commute_or" (formula "12") (term "0,0"))
                                                            (rule "commute_or" (formula "21") (term "0,0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "28") (term "0,0"))
                                                            (rule "commute_or" (formula "27") (term "0,0"))
                                                            (rule "commute_or" (formula "26") (term "0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "lenNonNegative" (formula "40") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "40"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,2,0,0,0") (ifseqformula "6"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "6"))
                                                            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "lenNonNegative" (formula "22") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "17"))
                                                            (rule "leq_literals" (formula "22") (term "0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "ifthenelse_to_or_right" (formula "44") (term "0,0,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0"))
                                                            (rule "commute_or_2" (formula "44") (term "0"))
                                                            (rule "commute_or" (formula "44") (term "1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "0,1,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "1,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "0"))
                                                            (rule "distr_forallAnd" (formula "44"))
                                                            (rule "andLeft" (formula "44"))
                                                            (rule "commute_or" (formula "45") (term "0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0"))
                                                            (rule "commute_or_2" (formula "44") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "commute_or" (formula "45") (term "1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "45") (term "0"))
                                                            (rule "distr_forallAnd" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "commute_or_2" (formula "45") (term "0"))
                                                            (rule "shift_paren_or" (formula "46") (term "0"))
                                                            (rule "commute_or_2" (formula "46") (term "0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "46") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "46") (term "0,1,0"))
                                                            (rule "add_literals" (formula "46") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "46") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "46") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "shift_paren_or" (formula "45") (term "0,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0"))
                                                            (rule "add_zero_right" (formula "45") (term "1,1,0,0"))
                                                            (rule "qeq_literals" (formula "45") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0"))
                                                            (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "23") (term "0,0"))
                                                            (rule "commute_or_2" (formula "23") (term "0"))
                                                            (rule "commute_or" (formula "23") (term "1,1,0"))
                                                            (rule "commute_or_2" (formula "23") (term "0,1,0"))
                                                            (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                            (rule "cnf_rightDist" (formula "23") (term "1,1,0"))
                                                            (rule "cnf_rightDist" (formula "23") (term "0"))
                                                            (rule "distr_forallAnd" (formula "23"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "commute_or" (formula "24") (term "0"))
                                                            (rule "shift_paren_or" (formula "23") (term "0"))
                                                            (rule "commute_or_2" (formula "23") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "commute_or" (formula "24") (term "1,1,0"))
                                                            (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                            (rule "commute_or" (formula "23") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "cnf_rightDist" (formula "24") (term "0"))
                                                            (rule "distr_forallAnd" (formula "24"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "commute_or_2" (formula "24") (term "0"))
                                                            (rule "shift_paren_or" (formula "25") (term "0"))
                                                            (rule "commute_or_2" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0"))
                                                            (rule "add_literals" (formula "25") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "25") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "25") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "true_left" (formula "25"))
                                                            (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                            (rule "commute_or" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "24") (term "0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                            (rule "qeq_literals" (formula "24") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "6"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "14") (inst "t=i_1_34"))
                                                            (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "14") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "5"))
                                                            (rule "andLeft" (formula "14"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0"))
                                                            (rule "leq_literals" (formula "14"))
                                                            (rule "closeFalse" (formula "14"))
                                                         )
                                                      )
                                                      (branch "self.unsigned.length ≥ 1 FALSE"
                                                         (rule "replace_known_right" (formula "19") (term "0,1,1,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "replace_known_right" (formula "36") (term "0,1,1,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_geqRight" (formula "40"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "20") (term "0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                                         (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "36") (term "0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                                         (rule "qeq_literals" (formula "36") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,0,1,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "1,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1,0,0,0"))
                                                         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "11"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "26"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "9") (ifseqformula "49"))
                                                         (rule "narrowSelectArrayType" (formula "17") (term "2,0,0,1,1,0") (ifseqformula "9") (ifseqformula "49"))
                                                         (rule "nonNull" (formula "30") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "30") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "sub_literals" (formula "30") (term "2,1,0,1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "46"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "29") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "andLeft" (formula "29"))
                                                         (rule "notLeft" (formula "29"))
                                                         (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "46"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                         (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "greater_literals" (formula "28") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "46"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                         (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")))
                                                         (rule "greater_literals" (formula "27") (term "0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "53"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "26") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "54")))
                                                         (rule "sub_literals" (formula "26") (term "2,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "54"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                         (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "25") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "55")))
                                                         (rule "sub_literals" (formula "25") (term "2,1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "55"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                         (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                         (rule "commute_or" (formula "4") (term "0,0"))
                                                         (rule "commute_or" (formula "4") (term "0,0,1"))
                                                         (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                         (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                         (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0"))
                                                         (rule "commute_or_2" (formula "44") (term "0"))
                                                         (rule "nnf_imp2or" (formula "29") (term "0"))
                                                         (rule "commute_or_2" (formula "31") (term "0"))
                                                         (rule "nnf_imp2or" (formula "28") (term "0"))
                                                         (rule "commute_or_2" (formula "45") (term "0"))
                                                         (rule "nnf_imp2or" (formula "27") (term "0"))
                                                         (rule "commute_or_2" (formula "38") (term "0"))
                                                         (rule "nnf_imp2or" (formula "26") (term "0"))
                                                         (rule "commute_or_2" (formula "37") (term "0"))
                                                         (rule "nnf_imp2or" (formula "25") (term "0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "self.sorted = x_arr_arr_2 TRUE"
                                                            (rule "referencedObjectIsCreatedRightEQ" (formula "59") (ifseqformula "3") (ifseqformula "62"))
                                                            (rule "close" (formula "59") (ifseqformula "10"))
                                                         )
                                                         (branch "self.sorted = x_arr_arr_2 FALSE"
                                                            (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0,1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                                                            (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                            (rule "commute_or_2" (formula "34") (term "0"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "38") (term "1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "true_left" (formula "38"))
                                                            (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "true_left" (formula "38"))
                                                            (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                                            (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                            (rule "arrayLengthNotNegative" (formula "38") (term "1"))
                                                            (rule "commute_or_2" (formula "12") (term "0"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "13") (term "0"))
                                                            (rule "commute_or_2" (formula "15") (term "0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,1") (ifseqformula "7"))
                                                            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,0") (ifseqformula "7"))
                                                            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "22"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                                            (rule "commute_or" (formula "41") (term "0,0"))
                                                            (rule "commute_or" (formula "28") (term "0,0"))
                                                            (rule "commute_or" (formula "42") (term "0,0"))
                                                            (rule "commute_or_2" (formula "27") (term "0"))
                                                            (rule "commute_or" (formula "35") (term "0,0"))
                                                            (rule "commute_or" (formula "34") (term "0,0"))
                                                            (rule "commute_or_2" (formula "26") (term "0"))
                                                            (rule "commute_or_2" (formula "25") (term "0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "commute_or" (formula "12") (term "0,0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "13") (term "0,0"))
                                                            (rule "commute_or" (formula "15") (term "0,0"))
                                                            (rule "commute_or" (formula "27") (term "0,0"))
                                                            (rule "commute_or" (formula "26") (term "0,0"))
                                                            (rule "commute_or" (formula "25") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "39") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "39"))
                                                            (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,1,0,0,0") (ifseqformula "7"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "7"))
                                                            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "lenNonNegative" (formula "22") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                            (rule "qeq_literals" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "7"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "16") (inst "t=i_1_34"))
                                                            (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "16") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "7"))
                                                            (rule "andLeft" (formula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "16"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0"))
                                                            (rule "add_literals" (formula "16") (term "0"))
                                                            (rule "leq_literals" (formula "16"))
                                                            (rule "closeFalse" (formula "16"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "eqSymm" (formula "25") (term "1,0"))
                                                   (rule "eqSymm" (formula "8") (term "1,0"))
                                                   (rule "eqSymm" (formula "10"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "eqSymm" (formula "30"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "42"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "21"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                   (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                                   (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                                   (rule "nonNull" (formula "44") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "36")))
                                                   (rule "greater_literals" (formula "44") (term "0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "allRight" (formula "44") (inst "sk=i_1_33"))
                                                   (rule "impRight" (formula "44"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notRight" (formula "46"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "apply_eq_monomials" (formula "3") (term "1,0") (ifseqformula "34"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "nonNull" (formula "21") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "21") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "45")))
                                                   (rule "sub_literals" (formula "21") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "45"))
                                                   (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                   (rule "array2seqDef" (formula "37") (term "0,0,1,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "30") (term "1,0,0,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "30") (term "0,0,0,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "30") (term "1,1,0") (inst "u=u"))
                                                   (rule "eqSymm" (formula "30") (term "1,0"))
                                                   (rule "array2seqDef" (formula "13") (term "1,0,0,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                                   (rule "eqSymm" (formula "13") (term "1,0"))
                                                   (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "array2seqDef" (formula "32") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "array2seqDef" (formula "33") (term "1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "33"))
                                                   (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                                   (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                                   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_19"))
                                                   (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_18"))
                                                   (rule "applyEq" (formula "34") (term "0,0,0,1") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "30"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                                   (rule "eqSymm" (formula "37"))
                                                   (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "30") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "48")))
                                                   (rule "ifthenelse_negated" (formula "30") (term "0"))
                                                   (rule "pullOutSelect" (formula "33") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_23"))
                                                   (rule "applyEq" (formula "29") (term "1,0,0,1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "32") (term "1,1,2,0,1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "32") (term "1,0,1,0,1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "33"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")))
                                                   (rule "eqSymm" (formula "32") (term "1,0"))
                                                   (rule "eqSymm" (formula "37"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "33") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "38"))
                                                   (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_21"))
                                                   (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "33") (term "1,1,2,1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "33") (term "1,0,1,1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "eqSymm" (formula "33") (term "1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "28") (term "1,0,0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
                                                   (rule "ifthenelse_negated" (formula "28") (term "0"))
                                                   (rule "applyEqRigid" (formula "36") (term "0,0,1") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "39") (term "1") (ifseqformula "38"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_17"))
                                                   (rule "applyEq" (formula "38") (term "1,1,1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "37") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "array2seqDef" (formula "15") (term "0,0,1,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "38") (term "0,1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1"))
                                                   (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,1,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                                                   (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                   (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "array2seqDef" (formula "38") (term "0,1,0") (inst "u=u"))
                                                   (rule "array2seqDef" (formula "38") (term "1,1,0") (inst "u=u"))
                                                   (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                                   (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__54"))
                                                   (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "simplifySelectOfMemset" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfCreate" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "eqSymm" (formula "2") (term "0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                   (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "simplifySelectOfMemset" (formula "32"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "simplifySelectOfMemset" (formula "29"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfMemset" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "simplifySelectOfMemset" (formula "35"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
                                                   (rule "eqSeqDef2" (formula "37") (inst "iv=iv") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "eqSeqDef" (formula "37") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "getOfSeqDef" (formula "38") (term "1,1,0"))
                                                   (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,2,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "1,1,0,1,1,0"))
                                                   (rule "lenOfSeqDef" (formula "37") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1"))
                                                   (rule "times_zero_2" (formula "37") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "37") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0"))
                                                   (rule "apply_eq_monomials" (formula "38") (term "1,0,1,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "1,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_190"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                                   (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "25") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "inEqSimp_antiSymm" (formula "28") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "37") (term "1,2,2,0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "3") (term "1,2,1,0,0,1,1") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "30") (term "1,2,2,0,0") (ifseqformula "27"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "27"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7"))
                                                   (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "0"))
                                                   (rule "qeq_literals" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "applyEq" (formula "32") (term "1,2,2,0,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27"))
                                                   (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                                   (rule "add_literals" (formula "27") (term "1,0"))
                                                   (rule "times_zero_1" (formula "27") (term "0"))
                                                   (rule "leq_literals" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "applyEq" (formula "27") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "41") (term "1,0,0,1,1,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                   (rule "pullOutSelect" (formula "33") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_22"))
                                                   (rule "applyEq" (formula "37") (term "0,1,0,1,0,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "34") (term "1,2,0,0,1,1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "37") (term "1,2,0,1,0,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "38") (term "1,2,0,1,0,0,1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "38") (term "0,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                   (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "33") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                   (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                   (rule "elementOfArrayRange" (formula "35") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "simplifySelectOfCreate" (formula "35"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "51")))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,2,0,1,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0,1") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,1,1") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,0,1,0,1,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,1,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "35"))
                                                   (rule "hideAuxiliaryEq" (formula "35"))
                                                   (rule "eqSymm" (formula "3") (term "0,0,0,1"))
                                                   (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "17") (term "0,0,1,1,0,0,1,0") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "16") (term "0,0,1,1,0,0") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "18") (term "1") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "19") (term "1") (ifseqformula "38"))
                                                   (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "simplifySelectOfCreate" (formula "28"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "50")))
                                                   (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,0,1,1,0,1,1,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,2,1,0,1,1,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "37") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "36") (term "0,0,0,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "17") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "eqSymm" (formula "37"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "36") (term "0,0,1,1,0,0,1,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "16") (term "0,0,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "17") (term "0,0,1,1,0,0,1,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "33") (term "1,1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "18") (term "1") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "19") (term "1") (ifseqformula "37"))
                                                   (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "simplifySelectOfCreate" (formula "30"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "48")))
                                                   (rule "applyEqReverse" (formula "35") (term "0,0,0,1,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,1,1,1,1,0,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1,0,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "17") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "35") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "29"))
                                                   (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "eqSymm" (formula "35"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "35"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,1,0,0,1,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "16") (term "0,0,1,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "17") (term "0,0,1,1,0,0,1,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "35"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                   (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                   (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "32") (term "0,1,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "15") (term "1,1,1,0") (ifseqformula "6") (ifseqformula "40"))
                                                   (rule "pullOutSelect" (formula "31") (term "0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_12"))
                                                   (rule "applyEq" (formula "33") (term "1,2,0,0,0,1,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "32") (term "1,2,0,0,0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "33") (term "0,1,0,0,0,1,0") (ifseqformula "31"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "eqSymm" (formula "31") (term "0,0"))
                                                   (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "simplifySelectOfStore" (formula "31"))
                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                                                   (rule "simplifySelectOfMemset" (formula "31"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "28") (term "0,0,0") (inst "selectSK=java_lang_Object_created__55"))
                                                   (rule "simplifySelectOfMemset" (formula "28"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "replaceKnownSelect_taclet10000000001002010_6" (formula "28") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000000001002010_10" (formula "28") (term "0"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "simplifySelectOfMemset" (formula "28"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__56"))
                                                   (rule "applyEq" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "2") (term "0,1,1") (inst "selectSK=arr_191"))
                                                   (rule "simplifySelectOfMemset" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                   (rule "elementOfArrayRange" (formula "33") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "simplifySelectOfCreate" (formula "33"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                   (rule "applyEqReverse" (formula "34") (term "0,1,0,0,0") (ifseqformula "33"))
                                                   (rule "applyEqReverse" (formula "35") (term "1,2,0,0,0,1,0") (ifseqformula "33"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,2,0,0,0") (ifseqformula "33"))
                                                   (rule "applyEqReverse" (formula "35") (term "0,1,0,0,0,1,0") (ifseqformula "33"))
                                                   (rule "hideAuxiliaryEq" (formula "33"))
                                                   (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "simplifySelectOfCreate" (formula "30"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                                   (rule "applyEqReverse" (formula "31") (term "0,1,0,0,1,1,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "34") (term "1,2,0,1,0,0,1,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "31") (term "1,2,0,0,1,1,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "33") (term "1,2,0,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "33") (term "0,1,0,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "34") (term "0,1,0,1,0,0,1,0") (ifseqformula "30"))
                                                   (rule "hideAuxiliaryEq" (formula "30"))
                                                   (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_192"))
                                                   (rule "simplifySelectOfCreate" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "8") (ifseqformula "38"))
                                                   (rule "nnf_imp2or" (formula "35") (term "0"))
                                                   (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "13") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "36"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "23") (term "0"))
                                                   (rule "nnf_imp2or" (formula "38") (term "0"))
                                                   (rule "nnf_imp2or" (formula "29") (term "0"))
                                                   (rule "nnf_imp2or" (formula "31") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                   (rule "nnf_imp2or" (formula "16") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "nnf_imp2or" (formula "30") (term "0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "21") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                   (rule "applyEq" (formula "22") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "nnf_imp2or" (formula "19") (term "0"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0"))
                                                   (rule "nnf_imp2or" (formula "35") (term "0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "13") (term "0"))
                                                   (rule "nnf_imp2or" (formula "14") (term "0"))
                                                   (rule "nnf_imp2or" (formula "15") (term "0"))
                                                   (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                   (rule "ifthenelse_split" (formula "18") (term "1"))
                                                   (branch "self.unsigned.length ≥ 1 TRUE"
                                                      (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "20") (term "0,1,1,0,0") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "replace_known_left" (formula "36") (term "0,1,1,0,0") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "arrayLengthNotNegative" (formula "19") (term "1,0,0,0"))
                                                      (rule "arrayLengthNotNegative" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "arrayLengthIsAShort" (formula "21") (term "1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "arrayLengthIsAShort" (formula "21") (term "1,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "commute_or" (formula "3") (term "0,0"))
                                                      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "10"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "26"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "8") (ifseqformula "50"))
                                                      (rule "narrowSelectArrayType" (formula "16") (term "2,0,0,1,1,0") (ifseqformula "8") (ifseqformula "50"))
                                                      (rule "narrowSelectArrayType" (formula "22") (term "2,0,1,0,0,1,0") (ifseqformula "8") (ifseqformula "50"))
                                                      (rule "nonNull" (formula "30") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "30") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "sub_literals" (formula "30") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "notLeft" (formula "30"))
                                                      (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "47"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "greater_literals" (formula "29") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "47"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "notLeft" (formula "28"))
                                                      (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "47"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "27") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "54")))
                                                      (rule "sub_literals" (formula "27") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "54"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "55")))
                                                      (rule "greater_literals" (formula "26") (term "0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "55"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "56")))
                                                      (rule "sub_literals" (formula "25") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "56"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "44"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "commute_or" (formula "3") (term "0,0,1"))
                                                      (rule "nnf_imp2or" (formula "30") (term "0"))
                                                      (rule "nnf_imp2or" (formula "29") (term "0"))
                                                      (rule "commute_or_2" (formula "45") (term "0"))
                                                      (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                      (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                      (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "nnf_imp2or" (formula "28") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "nnf_imp2or" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "46") (term "0"))
                                                      (rule "nnf_imp2or" (formula "26") (term "0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "nnf_imp2or" (formula "25") (term "0"))
                                                      (rule "commute_or_2" (formula "39") (term "0"))
                                                      (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                      (rule "commute_or_2" (formula "35") (term "0"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "self.encrypted = x_arr_arr_2 TRUE"
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "57") (ifseqformula "1") (ifseqformula "60"))
                                                         (rule "close" (formula "57") (ifseqformula "9"))
                                                      )
                                                      (branch "self.encrypted = x_arr_arr_2 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,1") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                         (rule "commute_or_2" (formula "35") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "39") (term "1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "arrayLengthNotNegative" (formula "39") (term "0"))
                                                         (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                                         (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "arrayLengthNotNegative" (formula "40") (term "1"))
                                                         (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                                         (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "11") (term "0"))
                                                         (rule "commute_or_2" (formula "12") (term "0"))
                                                         (rule "commute_or_2" (formula "13") (term "0"))
                                                         (rule "commute_or_2" (formula "38") (term "0"))
                                                         (rule "commute_or_2" (formula "14") (term "0"))
                                                         (rule "commute_or_2" (formula "20") (term "0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "commute_or" (formula "43") (term "0,0"))
                                                         (rule "commute_or" (formula "28") (term "0,0"))
                                                         (rule "commute_or_2" (formula "27") (term "0"))
                                                         (rule "commute_or" (formula "44") (term "0,0"))
                                                         (rule "commute_or" (formula "34") (term "0,0"))
                                                         (rule "commute_or" (formula "36") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0"))
                                                         (rule "commute_or_2" (formula "25") (term "0"))
                                                         (rule "commute_or" (formula "35") (term "0,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0"))
                                                         (rule "commute_or" (formula "11") (term "0,0"))
                                                         (rule "commute_or" (formula "12") (term "0,0"))
                                                         (rule "commute_or" (formula "13") (term "0,0"))
                                                         (rule "commute_or" (formula "40") (term "0,0"))
                                                         (rule "commute_or" (formula "14") (term "0,0"))
                                                         (rule "commute_or" (formula "21") (term "0,0"))
                                                         (rule "commute_or" (formula "27") (term "0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0"))
                                                         (rule "commute_or" (formula "25") (term "0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "17"))
                                                         (rule "leq_literals" (formula "20") (term "0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "lenNonNegative" (formula "39") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,2,0,0,0") (ifseqformula "6"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "lenNonNegative" (formula "22") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                         (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "17"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "ifthenelse_to_or_right" (formula "43") (term "0,0,0"))
                                                         (rule "nnf_notAnd" (formula "43") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0"))
                                                         (rule "commute_or" (formula "43") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,1,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "43") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "43") (term "0"))
                                                         (rule "distr_forallAnd" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "commute_or" (formula "44") (term "0"))
                                                         (rule "shift_paren_or" (formula "43") (term "0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "commute_or" (formula "44") (term "1,1,0"))
                                                         (rule "shift_paren_or" (formula "43") (term "0,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "cnf_rightDist" (formula "44") (term "0"))
                                                         (rule "distr_forallAnd" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "commute_or_2" (formula "44") (term "0"))
                                                         (rule "shift_paren_or" (formula "45") (term "0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "45") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "45") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                         (rule "commute_or" (formula "44") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "44") (term "0,0"))
                                                         (rule "add_zero_right" (formula "44") (term "1,1,0,0"))
                                                         (rule "qeq_literals" (formula "44") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0"))
                                                         (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
                                                         (rule "commute_or" (formula "23") (term "0,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0"))
                                                         (rule "commute_or" (formula "23") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0,1,0"))
                                                         (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "23") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "23") (term "0"))
                                                         (rule "distr_forallAnd" (formula "23"))
                                                         (rule "andLeft" (formula "23"))
                                                         (rule "commute_or" (formula "24") (term "0"))
                                                         (rule "shift_paren_or" (formula "23") (term "0"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "commute_or" (formula "24") (term "1,1,0"))
                                                         (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                         (rule "commute_or" (formula "23") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "cnf_rightDist" (formula "24") (term "0"))
                                                         (rule "distr_forallAnd" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "commute_or_2" (formula "24") (term "0"))
                                                         (rule "shift_paren_or" (formula "25") (term "0"))
                                                         (rule "commute_or_2" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                         (rule "commute_or" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "24") (term "0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "allLeft" (formula "12") (inst "t=i_1_33"))
                                                         (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "12") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "self.unsigned.length ≥ 1 FALSE"
                                                      (rule "replace_known_right" (formula "35") (term "0,1,1,0,0") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_right" (formula "19") (term "0,1,1,0,0") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "replace_known_right" (formula "34") (term "0,1") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_geqRight" (formula "39"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "36") (term "0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "arrayLengthNotNegative" (formula "19") (term "1,0,0,0"))
                                                      (rule "arrayLengthNotNegative" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "arrayLengthIsAShort" (formula "21") (term "1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "arrayLengthIsAShort" (formula "21") (term "1,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "commute_or" (formula "4") (term "0,0"))
                                                      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "11"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "narrowSelectArrayType" (formula "17") (term "2,0,0,1,1,0") (ifseqformula "9") (ifseqformula "48"))
                                                      (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "9") (ifseqformula "48"))
                                                      (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "greater_literals" (formula "29") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "notLeft" (formula "29"))
                                                      (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "45"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "notLeft" (formula "28"))
                                                      (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "45"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "greater_literals" (formula "27") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "notLeft" (formula "27"))
                                                      (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "45"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "26") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")))
                                                      (rule "sub_literals" (formula "26") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "52"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                      (rule "greater_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "53")))
                                                      (rule "sub_literals" (formula "25") (term "2,1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "nonNull" (formula "24") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "54")))
                                                      (rule "greater_literals" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "54"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                      (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "42"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "commute_or" (formula "4") (term "0,0,1"))
                                                      (rule "nnf_imp2or" (formula "29") (term "0"))
                                                      (rule "commute_or_2" (formula "43") (term "0"))
                                                      (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                      (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                      (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "nnf_imp2or" (formula "28") (term "0"))
                                                      (rule "commute_or_2" (formula "30") (term "0"))
                                                      (rule "nnf_imp2or" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "44") (term "0"))
                                                      (rule "nnf_imp2or" (formula "26") (term "0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "nnf_imp2or" (formula "25") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0"))
                                                      (rule "nnf_imp2or" (formula "24") (term "0"))
                                                      (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "self.encrypted = x_arr_arr_2 TRUE"
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "55") (ifseqformula "2") (ifseqformula "58"))
                                                         (rule "close" (formula "55") (ifseqformula "10"))
                                                      )
                                                      (branch "self.encrypted = x_arr_arr_2 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_right" (formula "2") (term "1,0,0,1") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                         (rule "commute_or_2" (formula "34") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "37") (term "1"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "arrayLengthNotNegative" (formula "37") (term "1"))
                                                         (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                         (rule "commute_or_2" (formula "12") (term "0"))
                                                         (rule "commute_or_2" (formula "13") (term "0"))
                                                         (rule "commute_or_2" (formula "14") (term "0"))
                                                         (rule "commute_or_2" (formula "15") (term "0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,1") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "16")))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,0") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "commute_or" (formula "41") (term "0,0"))
                                                         (rule "commute_or" (formula "27") (term "0,0"))
                                                         (rule "commute_or" (formula "42") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0"))
                                                         (rule "commute_or" (formula "33") (term "0,0"))
                                                         (rule "commute_or" (formula "35") (term "0,0"))
                                                         (rule "commute_or_2" (formula "25") (term "0"))
                                                         (rule "commute_or_2" (formula "24") (term "0"))
                                                         (rule "commute_or" (formula "34") (term "0,0"))
                                                         (rule "commute_or" (formula "36") (term "0,0"))
                                                         (rule "commute_or" (formula "12") (term "0,0"))
                                                         (rule "commute_or" (formula "13") (term "0,0"))
                                                         (rule "commute_or" (formula "14") (term "0,0"))
                                                         (rule "commute_or" (formula "15") (term "0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0"))
                                                         (rule "commute_or" (formula "25") (term "0,0"))
                                                         (rule "commute_or" (formula "24") (term "0,0"))
                                                         (rule "lenNonNegative" (formula "38") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,1,0,1,0,0") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,0,0") (ifseqformula "7"))
                                                         (rule "lenNonNegative" (formula "22") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                         (rule "qeq_literals" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "allLeft" (formula "13") (inst "t=i_1_33"))
                                                         (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "13") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "closeFalse" (formula "13"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "eqSymm" (formula "25") (term "1,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "eqSymm" (formula "28"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "eqSymm" (formula "30"))
                                                (rule "eqSymm" (formula "14"))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "42"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                                (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                                (rule "nonNull" (formula "44") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "35")))
                                                (rule "greater_literals" (formula "44") (term "0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "allRight" (formula "44") (inst "sk=i_1_32"))
                                                (rule "impRight" (formula "44"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notRight" (formula "46"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "nonNull" (formula "21") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "21") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "45")))
                                                (rule "sub_literals" (formula "21") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "45"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                (rule "array2seqDef" (formula "37") (term "0,0,1,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "30") (term "1,0,0,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "30") (term "1,1,0") (inst "u=u"))
                                                (rule "eqSymm" (formula "30") (term "1,0"))
                                                (rule "array2seqDef" (formula "13") (term "1,0,0,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "13") (term "0,0,0,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                                (rule "eqSymm" (formula "13") (term "1,0"))
                                                (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "array2seqDef" (formula "32") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "array2seqDef" (formula "33") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                                (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                                (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_19"))
                                                (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "27"))
                                                (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "31") (term "1,1,2,1,0,1,1,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "31") (term "1,0,1,1,0,1,1,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "27"))
                                                (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "26"))
                                                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "45")))
                                                (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                                (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "45")))
                                                (rule "ifthenelse_negated" (formula "27") (term "0"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_18"))
                                                (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_22"))
                                                (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "1,1,2,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "31") (term "1,0,0,1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "37"))
                                                (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_17"))
                                                (rule "applyEq" (formula "36") (term "0,0,0,1") (ifseqformula "34"))
                                                (rule "applyEq" (formula "36") (term "1,1,1,1") (ifseqformula "34"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "32") (term "1,0,0,1,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "34"))
                                                (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "48")))
                                                (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "34") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "48")))
                                                (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,0,1") (ifseqformula "39"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_16"))
                                                (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "37") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "38") (term "1,1,1,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "array2seqDef" (formula "34") (term "0,0,1,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "38") (term "0,1,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "array2seqDef" (formula "19") (term "0,1") (inst "u=u"))
                                                (rule "eqSymm" (formula "19"))
                                                (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "eqSeqDef" (formula "37") (inst "iv=iv"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "getOfSeqDef" (formula "38") (term "1,1,0"))
                                                (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,2,1,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,0,1,1,0"))
                                                (rule "lenOfSeqDef" (formula "37") (term "1"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0"))
                                                (rule "apply_eq_monomials" (formula "38") (term "1,0,1,0,0") (ifseqformula "37"))
                                                (rule "polySimp_rightDist" (formula "38") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "38") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "1,1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                                (rule "eqSeqDef2" (formula "36") (inst "iv=iv") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "lenOfSeqDef" (formula "18") (term "1"))
                                                (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                                (rule "times_zero_2" (formula "18") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "18") (term "1,1"))
                                                (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                                (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                (rule "array2seqDef" (formula "38") (term "1,1,0,0,1,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "37") (term "0,0,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "37") (term "1,1,0,0") (inst "u=u"))
                                                (rule "array2seqDef" (formula "38") (term "0,0,0,1,0") (inst "u=u"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_187"))
                                                (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")))
                                                (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0,0"))
                                                (rule "narrowSelectArrayType" (formula "4") (term "1,0") (ifseqformula "26") (ifseqformula "44"))
                                                (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                                (rule "ifEqualsNull" (formula "4"))
                                                (rule "pullOutSelect" (formula "31") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_20"))
                                                (rule "simplifySelectOfMemset" (formula "31"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                                                (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__51"))
                                                (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                                (rule "simplifySelectOfMemset" (formula "32"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "simplifySelectOfStore" (formula "32"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "simplifySelectOfStore" (formula "32"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "simplifySelectOfStore" (formula "32"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "simplifySelectOfCreate" (formula "32"))
                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                (rule "castDel" (formula "32") (term "1,0"))
                                                (rule "eqSymm" (formula "32") (term "0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                                (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                                (rule "hideAuxiliaryEq" (formula "32"))
                                                (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "simplifySelectOfMemset" (formula "37"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfMemset" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,1,1") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,1,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "36") (term "1,1,2,1,0,1,1,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,1,0,0,1") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "36") (term "1,0,1,1,0,1,1,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "41") (term "0,1") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1") (ifseqformula "32"))
                                                (rule "hideAuxiliaryEq" (formula "32"))
                                                (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "8"))
                                                (rule "applyEq" (formula "32") (term "1,2,2,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "30"))
                                                (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                                                (rule "add_literals" (formula "30") (term "1,0"))
                                                (rule "times_zero_1" (formula "30") (term "0"))
                                                (rule "leq_literals" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "applyEq" (formula "36") (term "1,2,2,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,1,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "4") (term "1,2,1,0,0,0,1,0,0,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq0" (formula "8"))
                                                (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,0"))
                                                (rule "times_zero_1" (formula "8") (term "0"))
                                                (rule "qeq_literals" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "28") (term "1,2,1,0,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "41") (term "1,0,0,1,1,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                (rule "pullOutSelect" (formula "33") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_20"))
                                                (rule "applyEq" (formula "38") (term "0,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "37") (term "0,1,0,1,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "34") (term "1,2,0,0,1,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "38") (term "1,2,0,1,0,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "37") (term "1,2,0,1,0,0") (ifseqformula "33"))
                                                (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "33") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "simplifySelectOfCreate" (formula "29"))
                                                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "51")))
                                                (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "34") (term "1,1,2,1,0,1,1,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,1,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,1,0,0,1") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,1,1") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "34") (term "1,0,1,1,0,1,1,0") (ifseqformula "29"))
                                                (rule "hideAuxiliaryEq" (formula "29"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "eqSymm" (formula "4") (term "0,0,0,1"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "eqSymm" (formula "4") (term "0,0,0"))
                                                (rule "eqSymm" (formula "33") (term "1,0"))
                                                (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "17") (term "0,0,1,1,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "18") (term "0,0,1,1,0,0,1,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "33") (term "1,1,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "38"))
                                                (rule "applyEqRigid" (formula "17") (term "0,0,1,1,0,0") (ifseqformula "39"))
                                                (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "39"))
                                                (rule "pullOutSelect" (formula "36") (term "1,2,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_11"))
                                                (rule "applyEq" (formula "38") (term "1,2,0,0,0,1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "38") (term "0,1,0,0,0,1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "37") (term "0,1,0,0,0") (ifseqformula "36"))
                                                (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "eqSymm" (formula "36") (term "0,0"))
                                                (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "simplifySelectOfStore" (formula "36"))
                                                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "51")))
                                                (rule "simplifySelectOfMemset" (formula "36"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                                                (rule "elementOfArrayRange" (formula "34") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "simplifySelectOfCreate" (formula "34"))
                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "51")))
                                                (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "34"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "34"))
                                                (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                                (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "34"))
                                                (rule "hideAuxiliaryEq" (formula "34"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                (rule "applyEqReverse" (formula "37") (term "1,2,1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "36") (term "1,2,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfCreate" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                (rule "applyEqReverse" (formula "35") (term "0,1,1") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "0,0,0,1,1,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "1,1,1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "35") (term "0,0,0,1") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "0,1,1,1,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "narrowSelectArrayType" (formula "16") (term "1,1,1,0") (ifseqformula "7") (ifseqformula "43"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "31") (term "1,1,2,1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEqReverse" (formula "30") (term "1,0,1,1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "eqSymm" (formula "29") (term "1,0"))
                                                (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "34"))
                                                (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "simplifySelectOfCreate" (formula "31"))
                                                (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                                (rule "applyEqReverse" (formula "32") (term "0,1,0,0,0") (ifseqformula "31"))
                                                (rule "applyEqReverse" (formula "33") (term "1,2,0,0,0,1,0") (ifseqformula "31"))
                                                (rule "applyEqReverse" (formula "33") (term "0,1,0,0,0,1,0") (ifseqformula "31"))
                                                (rule "applyEqReverse" (formula "32") (term "1,2,0,0,0") (ifseqformula "31"))
                                                (rule "hideAuxiliaryEq" (formula "31"))
                                                (rule "pullOutSelect" (formula "28") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_21"))
                                                (rule "simplifySelectOfMemset" (formula "28"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=java_lang_Object_created__52"))
                                                (rule "simplifySelectOfMemset" (formula "29"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "replaceKnownSelect_taclet1000000001002010_8" (formula "29") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1000000001002010_12" (formula "29") (term "0"))
                                                (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                                (rule "hideAuxiliaryEq" (formula "29"))
                                                (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "applyEqReverse" (formula "33") (term "1,2,0,1,0,0,1,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "32") (term "0,1,0,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "32") (term "1,2,0,1,0,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "30") (term "1,2,0,0,1,1,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "30") (term "0,1,0,0,1,1,0") (ifseqformula "29"))
                                                (rule "applyEqReverse" (formula "33") (term "0,1,0,1,0,0,1,0") (ifseqformula "29"))
                                                (rule "hideAuxiliaryEq" (formula "29"))
                                                (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__53"))
                                                (rule "applyEq" (formula "2") (term "0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "pullOutSelect" (formula "2") (term "0,1,1") (inst "selectSK=arr_188"))
                                                (rule "simplifySelectOfMemset" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "simplifySelectOfCreate" (formula "30"))
                                                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                                (rule "applyEqReverse" (formula "31") (term "1,2,0,0,1,1,0") (ifseqformula "30"))
                                                (rule "applyEqReverse" (formula "33") (term "1,2,0,1,0,0") (ifseqformula "30"))
                                                (rule "applyEqReverse" (formula "34") (term "1,2,0,1,0,0,1,0") (ifseqformula "30"))
                                                (rule "applyEqReverse" (formula "31") (term "0,1,0,0,1,1,0") (ifseqformula "30"))
                                                (rule "applyEqReverse" (formula "34") (term "0,1,0,1,0,0,1,0") (ifseqformula "30"))
                                                (rule "applyEqReverse" (formula "33") (term "0,1,0,1,0,0") (ifseqformula "30"))
                                                (rule "hideAuxiliaryEq" (formula "30"))
                                                (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_189"))
                                                (rule "simplifySelectOfCreate" (formula "2"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "8") (ifseqformula "37"))
                                                (rule "nnf_imp2or" (formula "35") (term "0"))
                                                (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "13") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "44")) (ifInst ""  (formula "8")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "16") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")))
                                                (rule "andLeft" (formula "16"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "39"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "23") (term "0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "nnf_imp2or" (formula "30") (term "0"))
                                                (rule "nnf_imp2or" (formula "32") (term "0"))
                                                (rule "nnf_imp2or" (formula "19") (term "0"))
                                                (rule "nnf_imp2or" (formula "31") (term "0"))
                                                (rule "nnf_imp2or" (formula "16") (term "0"))
                                                (rule "nnf_imp2or" (formula "33") (term "0"))
                                                (rule "nnf_imp2or" (formula "36") (term "0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "18") (term "1"))
                                                (branch "self.unsigned.length ≥ 1 TRUE"
                                                   (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_left" (formula "20") (term "0,1,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "replace_known_left" (formula "37") (term "0,1,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "arrayLengthNotNegative" (formula "19") (term "1,0,0,0"))
                                                   (rule "arrayLengthIsAShort" (formula "20") (term "1,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "arrayLengthNotNegative" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "26") (ifseqformula "10"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "8") (ifseqformula "51"))
                                                   (rule "narrowSelectArrayType" (formula "22") (term "2,0,1,0,0,1,0") (ifseqformula "8") (ifseqformula "51"))
                                                   (rule "narrowSelectArrayType" (formula "16") (term "2,0,0,1,1,0") (ifseqformula "8") (ifseqformula "51"))
                                                   (rule "nonNull" (formula "31") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "31") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "30") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "greater_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "29") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")))
                                                   (rule "greater_literals" (formula "28") (term "0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "55"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "56")))
                                                   (rule "greater_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "56"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                   (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "45"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "57")))
                                                   (rule "greater_literals" (formula "26") (term "0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "57"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "commute_or" (formula "3") (term "0,0,1"))
                                                   (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                   (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                   (rule "nnf_imp2or" (formula "31") (term "0"))
                                                   (rule "nnf_imp2or" (formula "30") (term "0"))
                                                   (rule "commute_or_2" (formula "46") (term "0"))
                                                   (rule "nnf_imp2or" (formula "29") (term "0"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "nnf_imp2or" (formula "28") (term "0"))
                                                   (rule "commute_or_2" (formula "47") (term "0"))
                                                   (rule "nnf_imp2or" (formula "27") (term "0"))
                                                   (rule "commute_or_2" (formula "38") (term "0"))
                                                   (rule "nnf_imp2or" (formula "26") (term "0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "self.chosen = x_arr_arr_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "58") (ifseqformula "1") (ifseqformula "61"))
                                                      (rule "close" (formula "58") (ifseqformula "9"))
                                                   )
                                                   (branch "self.chosen = x_arr_arr_2 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                      (rule "arrayLengthNotNegative" (formula "40") (term "1"))
                                                      (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "arrayLengthIsAShort" (formula "40") (term "1"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "commute_or_2" (formula "11") (term "0"))
                                                      (rule "commute_or_2" (formula "13") (term "0"))
                                                      (rule "commute_or_2" (formula "12") (term "0"))
                                                      (rule "commute_or_2" (formula "39") (term "0"))
                                                      (rule "commute_or_2" (formula "20") (term "0"))
                                                      (rule "commute_or_2" (formula "14") (term "0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_or" (formula "43") (term "0,0"))
                                                      (rule "commute_or" (formula "29") (term "0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "commute_or" (formula "44") (term "0,0"))
                                                      (rule "commute_or" (formula "35") (term "0,0"))
                                                      (rule "commute_or" (formula "37") (term "0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "26") (term "0"))
                                                      (rule "commute_or" (formula "36") (term "0,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0"))
                                                      (rule "commute_or" (formula "11") (term "0,0"))
                                                      (rule "commute_or" (formula "13") (term "0,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0"))
                                                      (rule "commute_or" (formula "41") (term "0,0"))
                                                      (rule "commute_or" (formula "21") (term "0,0"))
                                                      (rule "commute_or" (formula "14") (term "0,0"))
                                                      (rule "cnf_rightDist" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "commute_or" (formula "1"))
                                                      (rule "commute_or" (formula "29") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0"))
                                                      (rule "cnf_rightDist" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "commute_or" (formula "3"))
                                                      (rule "commute_or" (formula "2"))
                                                      (rule "cnf_rightDist" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "commute_or" (formula "1"))
                                                      (rule "arrayLengthNotNegative" (formula "22") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "arrayLengthNotNegative" (formula "42") (term "1,1,1,0,0"))
                                                      (rule "arrayLengthIsAShort" (formula "43") (term "1,1,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "lenNonNegative" (formula "43") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,2,0,0,0") (ifseqformula "8"))
                                                      (rule "lenNonNegative" (formula "24") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                      (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "ifthenelse_to_or_right" (formula "47") (term "0,0,0"))
                                                      (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                                      (rule "commute_or" (formula "47") (term "0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0"))
                                                      (rule "commute_or" (formula "47") (term "1,1,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0,1,0"))
                                                      (rule "commute_or" (formula "47") (term "0,0,1,0"))
                                                      (rule "ifthenelse_to_or_right" (formula "25") (term "0,0,0"))
                                                      (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,0"))
                                                      (rule "commute_or" (formula "25") (term "0,0"))
                                                      (rule "commute_or_2" (formula "25") (term "0"))
                                                      (rule "commute_or" (formula "25") (term "1,1,0"))
                                                      (rule "commute_or_2" (formula "25") (term "0,1,0"))
                                                      (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "47") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "47") (term "0"))
                                                      (rule "distr_forallAnd" (formula "47"))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "commute_or" (formula "48") (term "0"))
                                                      (rule "shift_paren_or" (formula "47") (term "0"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "commute_or" (formula "48") (term "1,1,0"))
                                                      (rule "shift_paren_or" (formula "47") (term "0,0"))
                                                      (rule "commute_or" (formula "47") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0"))
                                                      (rule "distr_forallAnd" (formula "48"))
                                                      (rule "andLeft" (formula "48"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "shift_paren_or" (formula "49") (term "0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,0"))
                                                      (rule "add_literals" (formula "49") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "49") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "49") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "shift_paren_or" (formula "48") (term "0,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "48") (term "0,0"))
                                                      (rule "add_zero_right" (formula "48") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "48") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "cnf_rightDist" (formula "25") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "commute_or" (formula "26") (term "0"))
                                                      (rule "shift_paren_or" (formula "25") (term "0"))
                                                      (rule "commute_or_2" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "commute_or" (formula "26") (term "1,1,0"))
                                                      (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                      (rule "commute_or" (formula "25") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0"))
                                                      (rule "add_literals" (formula "27") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "27") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                      (rule "commute_or" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "26") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "allLeft" (formula "12") (inst "t=i_1_32"))
                                                      (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "12") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                                (branch "self.unsigned.length ≥ 1 FALSE"
                                                   (rule "replace_known_right" (formula "19") (term "0,1,1,0,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "replace_known_right" (formula "36") (term "0,1,1,0,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_geqRight" (formula "40"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "20") (term "0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "36") (term "0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "36") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "arrayLengthIsAShort" (formula "19") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "arrayLengthNotNegative" (formula "19") (term "1,0,1,0,0"))
                                                   (rule "arrayLengthNotNegative" (formula "20") (term "1,0,0,0"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "commute_or" (formula "4") (term "0,0"))
                                                   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "11"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "narrowSelectArrayType" (formula "17") (term "2,0,0,1,1,0") (ifseqformula "9") (ifseqformula "49"))
                                                   (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "9") (ifseqformula "49"))
                                                   (rule "nonNull" (formula "30") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "greater_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "46"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "29") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "29") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "notLeft" (formula "29"))
                                                   (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "46"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "28") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "28") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "notLeft" (formula "28"))
                                                   (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "46"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "27") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")))
                                                   (rule "greater_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "26") (inst "i=i_1"))
                                                   (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "54")))
                                                   (rule "greater_literals" (formula "26") (term "0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "54"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "43"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                   (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                   (rule "greater_literals" (formula "25") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "55")))
                                                   (rule "sub_literals" (formula "25") (term "2,1,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "55"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                   (rule "commute_or" (formula "4") (term "0,0,1"))
                                                   (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                   (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "nnf_imp2or" (formula "30") (term "0"))
                                                   (rule "commute_or_2" (formula "44") (term "0"))
                                                   (rule "nnf_imp2or" (formula "29") (term "0"))
                                                   (rule "commute_or_2" (formula "31") (term "0"))
                                                   (rule "nnf_imp2or" (formula "28") (term "0"))
                                                   (rule "commute_or_2" (formula "45") (term "0"))
                                                   (rule "nnf_imp2or" (formula "27") (term "0"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "nnf_imp2or" (formula "26") (term "0"))
                                                   (rule "commute_or_2" (formula "39") (term "0"))
                                                   (rule "nnf_imp2or" (formula "25") (term "0"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "self.chosen = x_arr_arr_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "59") (ifseqformula "2") (ifseqformula "62"))
                                                      (rule "close" (formula "59") (ifseqformula "10"))
                                                   )
                                                   (branch "self.chosen = x_arr_arr_2 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                                                      (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "35") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "38") (term "1"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                                      (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                      (rule "arrayLengthNotNegative" (formula "38") (term "1"))
                                                      (rule "commute_or_2" (formula "12") (term "0"))
                                                      (rule "commute_or_2" (formula "14") (term "0"))
                                                      (rule "commute_or_2" (formula "13") (term "0"))
                                                      (rule "commute_or_2" (formula "15") (term "0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "commute_or" (formula "41") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "42") (term "0,0"))
                                                      (rule "commute_or" (formula "34") (term "0,0"))
                                                      (rule "commute_or" (formula "36") (term "0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "26") (term "0"))
                                                      (rule "commute_or_2" (formula "25") (term "0"))
                                                      (rule "cnf_rightDist" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "commute_or" (formula "36") (term "0,0"))
                                                      (rule "commute_or" (formula "2"))
                                                      (rule "commute_or" (formula "38") (term "0,0"))
                                                      (rule "commute_or" (formula "13") (term "0,0"))
                                                      (rule "commute_or" (formula "15") (term "0,0"))
                                                      (rule "commute_or" (formula "14") (term "0,0"))
                                                      (rule "commute_or" (formula "16") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0"))
                                                      (rule "commute_or" (formula "26") (term "0,0"))
                                                      (rule "cnf_rightDist" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "commute_or" (formula "4"))
                                                      (rule "commute_or" (formula "3"))
                                                      (rule "cnf_rightDist" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "commute_or" (formula "2"))
                                                      (rule "arrayLengthNotNegative" (formula "41") (term "1,1,1,0,0"))
                                                      (rule "lenNonNegative" (formula "42") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42"))
                                                      (rule "arrayLengthIsAShort" (formula "43") (term "1,1,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                      (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,2,0,0,0") (ifseqformula "9"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,0,1,0,0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "lenNonNegative" (formula "24") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "allLeft" (formula "14") (inst "t=i_1_32"))
                                                      (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "7"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0"))
                                                      (rule "add_literals" (formula "14") (term "0"))
                                                      (rule "leq_literals" (formula "14"))
                                                      (rule "closeFalse" (formula "14"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "eqSymm" (formula "25") (term "1,0"))
                                             (rule "eqSymm" (formula "8") (term "1,0"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "42"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "22"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                             (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                             (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                             (rule "nonNull" (formula "44") (inst "i=i_1"))
                                             (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "greater_literals" (formula "44") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1"))
                                             (rule "nonNull" (formula "18") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "42")))
                                             (rule "sub_literals" (formula "18") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "42"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "34") (term "0,0,1,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
                                             (rule "eqSymm" (formula "27") (term "1,0"))
                                             (rule "array2seqDef" (formula "10") (term "0,0,0,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "10") (term "1,0,0,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                                             (rule "eqSymm" (formula "10") (term "1,0"))
                                             (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "array2seqDef" (formula "30") (term "0,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                             (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "12"))
                                             (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                             (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_18"))
                                             (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "29") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_21"))
                                             (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "28") (term "1,1,2,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "29"))
                                             (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                             (rule "sortsDisjointModuloNull" (formula "29") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "29") (term "1,0,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                             (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                             (rule "ifthenelse_negated" (formula "29") (term "0"))
                                             (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "33"))
                                             (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_16"))
                                             (rule "applyEq" (formula "32") (term "0,0,0,1") (ifseqformula "27"))
                                             (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "32") (term "1,1,1,1") (ifseqformula "27"))
                                             (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")))
                                             (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                                             (rule "ifthenelse_negated" (formula "27") (term "0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,0,1") (ifseqformula "35"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_15"))
                                             (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_17"))
                                             (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "array2seqDef" (formula "31") (term "0,0,1,1,0") (inst "u=u"))
                                             (rule "eqSeqDef" (formula "16") (inst "iv=iv"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "getOfSeqDef" (formula "17") (term "1,1,0"))
                                             (rule "castDel" (formula "17") (term "1,1,1,0"))
                                             (rule "castDel" (formula "17") (term "2,1,1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                                             (rule "lenOfSeqDef" (formula "16") (term "1"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                             (rule "times_zero_2" (formula "16") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "16") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                                             (rule "applyEq" (formula "17") (term "0,1,0,1,0,0") (ifseqformula "16"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "32") (term "1,0,1,1,0") (inst "u=u"))
                                             (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
                                             (rule "applyEq" (formula "51") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "array2seqDef" (formula "37") (term "1,1,0") (inst "u=u"))
                                             (rule "applyEqRigid" (formula "37") (term "1,1,0") (ifseqformula "36"))
                                             (rule "array2seqDef" (formula "37") (term "0,1,0") (inst "u=u"))
                                             (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=java_lang_Object_created__47"))
                                             (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "4"))
                                             (rule "simplifySelectOfMemset" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfStore" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfStore" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfStore" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfCreate" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "50")))
                                             (rule "castDel" (formula "4") (term "1,0"))
                                             (rule "eqSymm" (formula "4") (term "0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "4") (term "0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")))
                                             (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfMemset" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfMemset" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "simplifySelectOfMemset" (formula "30"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "simplifySelectOfMemset" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "simplifySelectOfMemset" (formula "33"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "eqSeqDef2" (formula "35") (inst "iv=iv") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "eqSeqDef" (formula "35") (inst "iv=iv"))
                                             (rule "andLeft" (formula "35"))
                                             (rule "getOfSeqDef" (formula "36") (term "1,1,0"))
                                             (rule "castDel" (formula "36") (term "2,1,1,0"))
                                             (rule "castDel" (formula "36") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,2,1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0"))
                                             (rule "lenOfSeqDef" (formula "35") (term "1"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1"))
                                             (rule "times_zero_2" (formula "35") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,1,1,0"))
                                             (rule "apply_eq_monomials" (formula "36") (term "1,0,1,0,0") (ifseqformula "35"))
                                             (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "1,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "5"))
                                             (rule "applyEq" (formula "31") (term "1,2,2,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "28") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "34") (term "1,2,2,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "4") (term "1,2,2,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,0"))
                                             (rule "times_zero_1" (formula "5") (term "0"))
                                             (rule "qeq_literals" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                             (rule "pullOutSelect" (formula "30") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_19"))
                                             (rule "applyEq" (formula "31") (term "1,2,0,0,1,1,0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "34") (term "0,1,0,1,0,0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "34") (term "1,2,0,1,0,0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "35") (term "1,2,0,1,0,0,1,0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "35") (term "0,1,0,1,0,0,1,0") (ifseqformula "30"))
                                             (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                             (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "30") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "30") (term "1,0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                             (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                             (rule "ifthenelse_negated" (formula "30") (term "0"))
                                             (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "simplifySelectOfCreate" (formula "28"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "34") (term "1,1,1,1,1,0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "36"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                             (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "simplifySelectOfCreate" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "47")))
                                             (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
                                             (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "31"))
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "31"))
                                             (rule "applyEqReverse" (formula "30") (term "1,0,1,0,1,0") (ifseqformula "31"))
                                             (rule "applyEqReverse" (formula "30") (term "1,1,2,0,1,0") (ifseqformula "31"))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "31"))
                                             (rule "hideAuxiliaryEq" (formula "31"))
                                             (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfCreate" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "45")))
                                             (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "29") (term "1,0,1,1,0,1,1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "30") (term "1,1,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "12") (term "1,1,1,0") (ifseqformula "3") (ifseqformula "37"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "27") (term "0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_10"))
                                             (rule "applyEq" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,2,0,0,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                                             (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27") (term "0,0"))
                                             (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "simplifySelectOfStore" (formula "27"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfMemset" (formula "27"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "elementOfArrayRange" (formula "27") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "simplifySelectOfCreate" (formula "27"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=java_lang_Object_created__48"))
                                             (rule "simplifySelectOfMemset" (formula "24"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replaceKnownSelect_taclet100000001002010_7" (formula "24") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100000001002010_11" (formula "24") (term "0"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "simplifySelectOfMemset" (formula "24"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                             (rule "elementOfArrayRange" (formula "24") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "simplifySelectOfCreate" (formula "24"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,0,1,0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "28") (term "1,2,0,1,0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "1,2,0,0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "27") (term "1,2,0,1,0,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "7") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                             (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "30"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "nnf_imp2or" (formula "23") (term "0"))
                                             (rule "nnf_imp2or" (formula "10") (term "0"))
                                             (rule "nnf_imp2or" (formula "24") (term "0"))
                                             (rule "nnf_imp2or" (formula "25") (term "0"))
                                             (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "13") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                             (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "nnf_imp2or" (formula "30") (term "0"))
                                             (rule "nnf_imp2or" (formula "27") (term "0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "7") (term "0"))
                                             (rule "nnf_imp2or" (formula "8") (term "0"))
                                             (rule "nnf_imp2or" (formula "9") (term "0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                             (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                             (rule "ifthenelse_split" (formula "12") (term "1"))
                                             (branch "self.unsigned.length ≥ 1 TRUE"
                                                (rule "replace_known_left" (formula "31") (term "0,1,1,0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "replace_known_left" (formula "14") (term "0,1,1,0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "arrayLengthIsAShort" (formula "13") (term "1,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "arrayLengthNotNegative" (formula "13") (term "1,0,0,0"))
                                                (rule "arrayLengthNotNegative" (formula "14") (term "1,0,1,0,0"))
                                                (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "4"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "2") (ifseqformula "45"))
                                                (rule "narrowSelectArrayType" (formula "10") (term "2,0,0,1,1,0") (ifseqformula "2") (ifseqformula "45"))
                                                (rule "narrowSelectArrayType" (formula "16") (term "2,0,1,0,0,1,0") (ifseqformula "2") (ifseqformula "45"))
                                                (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "greater_literals" (formula "25") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "42"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "24") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "greater_literals" (formula "24") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "42"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "23") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "23") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "allRight" (formula "58") (inst "sk=i_1_31"))
                                                (rule "orRight" (formula "58"))
                                                (rule "notRight" (formula "59"))
                                                (rule "orRight" (formula "59"))
                                                (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "43"))
                                                (rule "inEqSimp_leqRight" (formula "59"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "60"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "25") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "25") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "52")))
                                                (rule "sub_literals" (formula "25") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "52"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "24") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "24") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                                (rule "sub_literals" (formula "24") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "23") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "23") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "54")))
                                                (rule "sub_literals" (formula "23") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "54"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "42"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_184"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "31") (ifseqformula "46"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                (rule "ifEqualsNull" (formula "3"))
                                                (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__50"))
                                                (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "eqSymm" (formula "3") (term "0,0"))
                                                (rule "pullOutSelect" (formula "4") (term "0,1,1") (inst "selectSK=arr_185"))
                                                (rule "simplifySelectOfMemset" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_186"))
                                                (rule "simplifySelectOfCreate" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "64")))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "narrowSelectArrayType" (formula "4") (term "2,0") (ifseqformula "8") (ifseqformula "48"))
                                                (rule "nnf_imp2or" (formula "31") (term "0"))
                                                (rule "commute_or_2" (formula "46") (term "0"))
                                                (rule "nnf_imp2or" (formula "30") (term "0"))
                                                (rule "commute_or_2" (formula "32") (term "0"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "nnf_imp2or" (formula "28") (term "0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "nnf_imp2or" (formula "26") (term "0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                                (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                (rule "arrayLengthIsAShort" (formula "45") (term "0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                (rule "arrayLengthNotNegative" (formula "21") (term "0,0,1,1,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "21") (term "0,0,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or_2" (formula "41") (term "0"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "commute_or_2" (formula "22") (term "0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "commute_or" (formula "5") (term "0,0"))
                                                (rule "commute_or" (formula "5") (term "0,0,1"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_or" (formula "37") (term "0,0"))
                                                (rule "commute_or" (formula "38") (term "0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "commute_or_2" (formula "28") (term "0"))
                                                (rule "commute_or" (formula "40") (term "0,0"))
                                                (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,2,0,0,0") (ifseqformula "8"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "lenNonNegative" (formula "44") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "44"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "32") (term "0,0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "lenNonNegative" (formula "24") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "commute_and" (formula "5") (term "0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.b = x_arr_arr_2 TRUE"
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "3") (ifseqformula "66"))
                                                   (rule "close" (formula "63") (ifseqformula "9"))
                                                )
                                                (branch "self.b = x_arr_arr_2 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0,1") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0,1") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                   (rule "commute_and" (formula "3") (term "0"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "cnf_rightDist" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "commute_or" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                   (rule "ifthenelse_to_or_right" (formula "47") (term "0,0,0"))
                                                   (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "47") (term "0,0"))
                                                   (rule "commute_or_2" (formula "47") (term "0"))
                                                   (rule "commute_or" (formula "47") (term "1,1,0"))
                                                   (rule "commute_or_2" (formula "47") (term "0,1,0"))
                                                   (rule "commute_or" (formula "47") (term "0,0,1,0"))
                                                   (rule "ifthenelse_to_or_right" (formula "26") (term "0,0,0"))
                                                   (rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0"))
                                                   (rule "commute_or_2" (formula "26") (term "0"))
                                                   (rule "commute_or" (formula "26") (term "1,1,0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,1,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "47") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "47") (term "0"))
                                                   (rule "distr_forallAnd" (formula "47"))
                                                   (rule "andLeft" (formula "47"))
                                                   (rule "commute_or" (formula "48") (term "0"))
                                                   (rule "shift_paren_or" (formula "47") (term "0"))
                                                   (rule "commute_or_2" (formula "47") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "commute_or" (formula "48") (term "1,1,0"))
                                                   (rule "shift_paren_or" (formula "47") (term "0,0"))
                                                   (rule "commute_or" (formula "47") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "cnf_rightDist" (formula "48") (term "0"))
                                                   (rule "distr_forallAnd" (formula "48"))
                                                   (rule "andLeft" (formula "48"))
                                                   (rule "commute_or_2" (formula "48") (term "0"))
                                                   (rule "shift_paren_or" (formula "49") (term "0"))
                                                   (rule "commute_or_2" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "49") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "shift_paren_or" (formula "48") (term "0,0"))
                                                   (rule "commute_or" (formula "48") (term "0,0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "48") (term "0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "48") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "48"))
                                                   (rule "cnf_rightDist" (formula "26") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or" (formula "27") (term "0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or" (formula "27") (term "1,1,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                   (rule "commute_or" (formula "26") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "cnf_rightDist" (formula "27") (term "0"))
                                                   (rule "distr_forallAnd" (formula "27"))
                                                   (rule "andLeft" (formula "27"))
                                                   (rule "commute_or_2" (formula "27") (term "0"))
                                                   (rule "shift_paren_or" (formula "28") (term "0"))
                                                   (rule "commute_or_2" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "28") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                   (rule "commute_or" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "27") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "arrayLengthNotNegative" (formula "36") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "37") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "36") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "cut_direct" (formula "26") (term "0"))
                                                   (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null TRUE"
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "applyEq" (formula "29") (term "0,1,0,0,0,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "52") (term "0,1,0,0,0,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "50") (term "1,2,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "28") (term "1,2,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "51") (term "1,2,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "52") (term "1,2,0,0,0,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "29") (term "1,2,0,0,0,0,0,0") (ifseqformula "26"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "11") (term "0,0"))
                                                      (branch "CUT: self.b.<created> = TRUE TRUE"
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "38") (inst "t=i_1_31"))
                                                         (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "13"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "38"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0"))
                                                         (rule "add_literals" (formula "10") (term "0"))
                                                         (rule "leq_literals" (formula "10"))
                                                         (rule "closeFalse" (formula "10"))
                                                      )
                                                      (branch "CUT: self.b.<created> = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "61"))
                                                         (rule "close" (formula "59") (ifseqformula "15"))
                                                      )
                                                   )
                                                   (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null FALSE"
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "narrowSelectArrayType" (formula "29") (term "2,0,0,0,0,0,0") (ifseqformula "12") (ifseqformula "56"))
                                                      (rule "narrowSelectArrayType" (formula "28") (term "2,0,0,0") (ifseqformula "12") (ifseqformula "56"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "11") (term "0,0"))
                                                      (branch "CUT: self.b.<created> = TRUE TRUE"
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "38") (inst "t=i_1_31"))
                                                         (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "13"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                         (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "38") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "38") (term "0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "closeFalse" (formula "38"))
                                                      )
                                                      (branch "CUT: self.b.<created> = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "62"))
                                                         (rule "close" (formula "59") (ifseqformula "15"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "self.unsigned.length ≥ 1 FALSE"
                                                (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "replace_known_right" (formula "30") (term "0,1,1,0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "replace_known_right" (formula "13") (term "0,1,1,0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_geqRight" (formula "34"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                                                (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "14") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "arrayLengthNotNegative" (formula "13") (term "1,0,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "14") (term "1,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "arrayLengthNotNegative" (formula "14") (term "1,0,1,0,0"))
                                                (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "19") (ifseqformula "5"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "3") (ifseqformula "43"))
                                                (rule "narrowSelectArrayType" (formula "11") (term "2,0,0,1,1,0") (ifseqformula "3") (ifseqformula "43"))
                                                (rule "nonNull" (formula "24") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "24") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "40"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "23") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "23") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "40"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "22") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "greater_literals" (formula "22") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "allRight" (formula "56") (inst "sk=i_1_30"))
                                                (rule "orRight" (formula "56"))
                                                (rule "notRight" (formula "57"))
                                                (rule "orRight" (formula "57"))
                                                (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "41"))
                                                (rule "inEqSimp_geqRight" (formula "58"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "58"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "24") (inst "i=i_1"))
                                                (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                                                (rule "greater_literals" (formula "24") (term "0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "50"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "23") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "23") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                                (rule "sub_literals" (formula "23") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "51"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                (rule "nonNull" (formula "22") (inst "i=i_1"))
                                                (rule "greater_literals" (formula "22") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "52")))
                                                (rule "sub_literals" (formula "22") (term "2,1,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "52"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_181"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                                (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "30") (ifseqformula "44"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                (rule "ifEqualsNull" (formula "3"))
                                                (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__49"))
                                                (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                                (rule "simplifySelectOfMemset" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "eqSymm" (formula "3") (term "0,0"))
                                                (rule "pullOutSelect" (formula "4") (term "0,1,1") (inst "selectSK=arr_182"))
                                                (rule "simplifySelectOfMemset" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_183"))
                                                (rule "simplifySelectOfCreate" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "62")))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "narrowSelectArrayType" (formula "4") (term "2,0") (ifseqformula "9") (ifseqformula "46"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "nnf_imp2or" (formula "30") (term "0"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "commute_or_2" (formula "37") (term "0"))
                                                (rule "nnf_imp2or" (formula "28") (term "0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "nnf_imp2or" (formula "26") (term "0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "nnf_imp2or" (formula "25") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                (rule "arrayLengthIsAShort" (formula "43") (term "0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "true_left" (formula "43"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                (rule "arrayLengthNotNegative" (formula "21") (term "0,0,1,1,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "21") (term "0,0,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "commute_or_2" (formula "17") (term "0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,1") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or" (formula "5") (term "0,0"))
                                                (rule "commute_or" (formula "5") (term "0,0,1"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or" (formula "44") (term "0,0"))
                                                (rule "commute_or" (formula "36") (term "0,0"))
                                                (rule "commute_or" (formula "37") (term "0,0"))
                                                (rule "commute_or" (formula "38") (term "0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "28") (term "0"))
                                                (rule "commute_or_2" (formula "27") (term "0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "lenNonNegative" (formula "41") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "41"))
                                                (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "8"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,2,0,0,0") (ifseqformula "9"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,0,1,0,0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or" (formula "29") (term "0,0"))
                                                (rule "commute_and" (formula "5") (term "0"))
                                                (rule "lenNonNegative" (formula "24") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                (rule "qeq_literals" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.b = x_arr_arr_2 TRUE"
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "61") (ifseqformula "3") (ifseqformula "64"))
                                                   (rule "close" (formula "61") (ifseqformula "10"))
                                                )
                                                (branch "self.b = x_arr_arr_2 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "1,1,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                                   (rule "commute_and" (formula "3") (term "0"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "cnf_rightDist" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "5"))
                                                   (rule "commute_or" (formula "4"))
                                                   (rule "cnf_rightDist" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "commute_or" (formula "3"))
                                                   (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "31") (inst "t=i_1_30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "31") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "31") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "notLeft" (formula "31"))
                                                   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "notLeft" (formula "6"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "52"))
                                                   (rule "close" (formula "49") (ifseqformula "10"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "eqSymm" (formula "25") (term "1,0"))
                                          (rule "eqSymm" (formula "8") (term "1,0"))
                                          (rule "eqSymm" (formula "10"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "eqSymm" (formula "28"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "42"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                          (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                          (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                          (rule "nonNull" (formula "44") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "greater_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1"))
                                          (rule "nonNull" (formula "18") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "18") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "42")))
                                          (rule "sub_literals" (formula "18") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "42"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "34") (term "0,0,1,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
                                          (rule "eqSymm" (formula "27") (term "1,0"))
                                          (rule "array2seqDef" (formula "10") (term "0,0,0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "10") (term "1,0,0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                                          (rule "eqSymm" (formula "10") (term "1,0"))
                                          (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "array2seqDef" (formula "30") (term "0,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "12"))
                                          (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_17"))
                                          (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "29") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_20"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "28") (term "1,1,2,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "28") (term "1,0,1,0,1,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "29"))
                                          (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                          (rule "sortsDisjointModuloNull" (formula "29") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "29") (term "1,0,0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                          (rule "ifthenelse_negated" (formula "29") (term "0"))
                                          (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "33"))
                                          (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_15"))
                                          (rule "applyEq" (formula "32") (term "0,0,0,1") (ifseqformula "27"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,1") (ifseqformula "27"))
                                          (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")))
                                          (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")))
                                          (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                                          (rule "ifthenelse_negated" (formula "27") (term "0"))
                                          (rule "applyEqRigid" (formula "32") (term "0,0,1") (ifseqformula "35"))
                                          (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_14"))
                                          (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_16"))
                                          (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "array2seqDef" (formula "31") (term "0,0,1,1,0") (inst "u=u"))
                                          (rule "eqSeqDef" (formula "16") (inst "iv=iv"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "getOfSeqDef" (formula "17") (term "1,1,0"))
                                          (rule "castDel" (formula "17") (term "1,1,1,0"))
                                          (rule "castDel" (formula "17") (term "2,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "16") (term "1"))
                                          (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                          (rule "times_zero_2" (formula "16") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "16") (term "1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                                          (rule "applyEq" (formula "17") (term "0,1,0,1,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "32") (term "1,0,1,1,0") (inst "u=u"))
                                          (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
                                          (rule "applyEq" (formula "51") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "array2seqDef" (formula "37") (term "1,1,0") (inst "u=u"))
                                          (rule "applyEqRigid" (formula "37") (term "1,1,0") (ifseqformula "36"))
                                          (rule "array2seqDef" (formula "37") (term "0,1,0") (inst "u=u"))
                                          (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=java_lang_Object_created__43"))
                                          (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "4"))
                                          (rule "simplifySelectOfMemset" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfStore" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfStore" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfStore" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfCreate" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "50")))
                                          (rule "castDel" (formula "4") (term "1,0"))
                                          (rule "eqSymm" (formula "4") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "0,0"))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")))
                                          (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfMemset" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfMemset" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "simplifySelectOfMemset" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "simplifySelectOfMemset" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "simplifySelectOfMemset" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "eqSeqDef2" (formula "35") (inst "iv=iv") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "eqSeqDef" (formula "35") (inst "iv=iv"))
                                          (rule "andLeft" (formula "35"))
                                          (rule "getOfSeqDef" (formula "36") (term "1,1,0"))
                                          (rule "castDel" (formula "36") (term "2,1,1,0"))
                                          (rule "castDel" (formula "36") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,2,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "35") (term "1"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,1"))
                                          (rule "times_zero_2" (formula "35") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "35") (term "1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,1,1,0"))
                                          (rule "apply_eq_monomials" (formula "36") (term "1,0,1,0,0") (ifseqformula "35"))
                                          (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "5"))
                                          (rule "applyEq" (formula "31") (term "1,2,2,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "34") (term "1,2,2,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "4") (term "1,2,2,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,0"))
                                          (rule "times_zero_1" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,0"))
                                          (rule "times_zero_1" (formula "5") (term "0"))
                                          (rule "qeq_literals" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                          (rule "pullOutSelect" (formula "30") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_18"))
                                          (rule "applyEq" (formula "31") (term "1,2,0,0,1,1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "34") (term "0,1,0,1,0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "34") (term "1,2,0,1,0,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "35") (term "1,2,0,1,0,0,1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "35") (term "0,1,0,1,0,0,1,0") (ifseqformula "30"))
                                          (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                          (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "30") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "30") (term "1,0,0,0") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                          (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                          (rule "ifthenelse_negated" (formula "30") (term "0"))
                                          (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "simplifySelectOfCreate" (formula "28"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                          (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "34") (term "1,1,1,1,1,0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "36"))
                                          (rule "eqSymm" (formula "17"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                          (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "simplifySelectOfCreate" (formula "31"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "47")))
                                          (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "30") (term "1,0,1,0,1,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "30") (term "1,1,2,0,1,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "31"))
                                          (rule "hideAuxiliaryEq" (formula "31"))
                                          (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfCreate" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "29") (term "1,0,1,1,0,1,1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "30") (term "1,1,1,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "29") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "30") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "12") (term "1,1,1,0") (ifseqformula "3") (ifseqformula "37"))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "27") (term "0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_9"))
                                          (rule "applyEq" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "28") (term "1,2,0,0,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                                          (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "eqSymm" (formula "27") (term "0,0"))
                                          (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "simplifySelectOfStore" (formula "27"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                                          (rule "simplifySelectOfMemset" (formula "27"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                          (rule "elementOfArrayRange" (formula "27") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "simplifySelectOfCreate" (formula "27"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "28") (term "0,1,0,0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=java_lang_Object_created__44"))
                                          (rule "simplifySelectOfMemset" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replaceKnownSelect_taclet10000001002010_7" (formula "24") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000001002010_11" (formula "24") (term "0"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfMemset" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                          (rule "elementOfArrayRange" (formula "24") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfCreate" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "28") (term "0,1,0,1,0,0,1,0") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "28") (term "1,2,0,1,0,0,1,0") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "1,2,0,0,1,1,0") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1,0,1,0,0") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "27") (term "1,2,0,1,0,0") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "7") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                          (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "30"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "32") (term "0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                          (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "7") (term "0"))
                                          (rule "nnf_imp2or" (formula "8") (term "0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,1"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "43") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "12") (term "1"))
                                          (branch "self.unsigned.length ≥ 1 TRUE"
                                             (rule "replace_known_left" (formula "31") (term "0,1,1,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "replace_known_left" (formula "14") (term "0,1,1,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "1,0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "1,0,1,0,0"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "4"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "2") (ifseqformula "45"))
                                             (rule "narrowSelectArrayType" (formula "10") (term "2,0,0,1,1,0") (ifseqformula "2") (ifseqformula "45"))
                                             (rule "narrowSelectArrayType" (formula "16") (term "2,0,1,0,0,1,0") (ifseqformula "2") (ifseqformula "45"))
                                             (rule "nonNull" (formula "25") (inst "i=i_1"))
                                             (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "greater_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "42"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "24") (inst "i=i_1"))
                                             (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "greater_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "notLeft" (formula "24"))
                                             (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "allRight" (formula "57") (inst "sk=i_1_29"))
                                             (rule "orRight" (formula "57"))
                                             (rule "orRight" (formula "57"))
                                             (rule "notRight" (formula "59"))
                                             (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "43"))
                                             (rule "inEqSimp_leqRight" (formula "58"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "59"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "26") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "26") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "notLeft" (formula "26"))
                                             (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "45"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "25") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "52")))
                                             (rule "sub_literals" (formula "25") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "52"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "24") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                             (rule "sub_literals" (formula "24") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "53"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                             (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "23") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "23") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "54")))
                                             (rule "sub_literals" (formula "23") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "54"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                             (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "42"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_178"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "31") (ifseqformula "47"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "ifEqualsNull" (formula "3"))
                                             (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__46"))
                                             (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                             (rule "simplifySelectOfMemset" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                             (rule "castDel" (formula "3") (term "1,0"))
                                             (rule "eqSymm" (formula "3") (term "0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "0,1,1") (inst "selectSK=arr_179"))
                                             (rule "simplifySelectOfMemset" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_180"))
                                             (rule "simplifySelectOfCreate" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "narrowSelectArrayType" (formula "4") (term "2,0") (ifseqformula "8") (ifseqformula "49"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "commute_or_2" (formula "46") (term "0"))
                                             (rule "commute_or_2" (formula "32") (term "0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "nnf_imp2or" (formula "28") (term "0"))
                                             (rule "nnf_imp2or" (formula "27") (term "0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                             (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "nnf_imp2or" (formula "26") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                             (rule "arrayLengthIsAShort" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0,0,1,1,0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "commute_or_2" (formula "22") (term "0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "commute_or" (formula "5") (term "0,0,1"))
                                             (rule "commute_or" (formula "45") (term "0,0"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "commute_or" (formula "46") (term "0,0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "commute_or" (formula "38") (term "0,0"))
                                             (rule "commute_or" (formula "39") (term "0,0"))
                                             (rule "commute_or_2" (formula "30") (term "0"))
                                             (rule "commute_or_2" (formula "29") (term "0"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "commute_or" (formula "40") (term "0,0"))
                                             (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "commute_or" (formula "13") (term "0,0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "lenNonNegative" (formula "42") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "42"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,2,0,0,0") (ifseqformula "8"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "commute_or" (formula "16") (term "0,0"))
                                             (rule "commute_or" (formula "24") (term "0,0"))
                                             (rule "commute_or" (formula "32") (term "0,0"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "lenNonNegative" (formula "23") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "commute_and" (formula "5") (term "0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "self.a = x_arr_arr_2 TRUE"
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "3") (ifseqformula "66"))
                                                (rule "close" (formula "63") (ifseqformula "9"))
                                             )
                                             (branch "self.a = x_arr_arr_2 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0,1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0,1") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "commute_and" (formula "4") (term "0"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "cnf_rightDist" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "commute_or" (formula "5"))
                                                (rule "commute_or" (formula "6"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "ifthenelse_to_or_right" (formula "47") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "commute_or" (formula "47") (term "1,1,0"))
                                                (rule "commute_or_2" (formula "47") (term "0,1,0"))
                                                (rule "commute_or" (formula "47") (term "0,0,1,0"))
                                                (rule "ifthenelse_to_or_right" (formula "25") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or_2" (formula "25") (term "0"))
                                                (rule "commute_or" (formula "25") (term "1,1,0"))
                                                (rule "commute_or_2" (formula "25") (term "0,1,0"))
                                                (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "47") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "commute_or" (formula "48") (term "0"))
                                                (rule "shift_paren_or" (formula "47") (term "0"))
                                                (rule "commute_or_2" (formula "47") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "commute_or" (formula "48") (term "1,1,0"))
                                                (rule "shift_paren_or" (formula "47") (term "0,0"))
                                                (rule "commute_or" (formula "47") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "shift_paren_or" (formula "49") (term "0"))
                                                (rule "commute_or_2" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,0"))
                                                (rule "add_literals" (formula "49") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "49") (term "0,1,0"))
                                                (rule "leq_literals" (formula "49") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "shift_paren_or" (formula "48") (term "0,0"))
                                                (rule "commute_or" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "48") (term "0,0"))
                                                (rule "add_zero_right" (formula "48") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "48") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "cnf_rightDist" (formula "25") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or" (formula "26") (term "0"))
                                                (rule "shift_paren_or" (formula "25") (term "0"))
                                                (rule "commute_or_2" (formula "25") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or" (formula "26") (term "1,1,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "cnf_rightDist" (formula "26") (term "0"))
                                                (rule "distr_forallAnd" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "commute_or_2" (formula "26") (term "0"))
                                                (rule "shift_paren_or" (formula "27") (term "0"))
                                                (rule "commute_or_2" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0"))
                                                (rule "add_literals" (formula "27") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "27") (term "0,1,0"))
                                                (rule "leq_literals" (formula "27") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                (rule "commute_or" (formula "26") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0,0"))
                                                (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "26") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0,0,1,1,0,0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "arrayLengthNotNegative" (formula "36") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "37") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "arrayLengthNotNegative" (formula "34") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "35") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "cut_direct" (formula "24") (term "0"))
                                                (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null TRUE"
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "51") (term "0,1,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "51") (term "1,2,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "50") (term "1,2,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "28") (term "0,1,0,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "27") (term "0,1,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "50") (term "0,1,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "27") (term "1,2,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "28") (term "1,2,0,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "52") (term "0,1,0,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "52") (term "1,2,0,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "40") (inst "t=i_1_29"))
                                                   (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "40") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "40") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "40"))
                                                   (rule "qeq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                                (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null FALSE"
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "narrowSelectArrayType" (formula "27") (term "2,0,0,0") (ifseqformula "11") (ifseqformula "56"))
                                                   (rule "narrowSelectArrayType" (formula "28") (term "2,0,0,0,0,0,0") (ifseqformula "11") (ifseqformula "56"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "40") (inst "t=i_1_29"))
                                                   (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "40"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0"))
                                                   (rule "leq_literals" (formula "10"))
                                                   (rule "closeFalse" (formula "10"))
                                                )
                                             )
                                          )
                                          (branch "self.unsigned.length ≥ 1 FALSE"
                                             (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "replace_known_right" (formula "30") (term "0,1,1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "replace_known_right" (formula "13") (term "0,1,1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                             (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                                             (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                             (rule "qeq_literals" (formula "14") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "1,0,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "14") (term "1,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "1,0,1,0,0"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "19") (ifseqformula "5"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "3") (ifseqformula "43"))
                                             (rule "narrowSelectArrayType" (formula "11") (term "2,0,0,1,1,0") (ifseqformula "3") (ifseqformula "43"))
                                             (rule "nonNull" (formula "24") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "notLeft" (formula "24"))
                                             (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "40"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "23") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "23") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "notLeft" (formula "23"))
                                             (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "allRight" (formula "55") (inst "sk=i_1_28"))
                                             (rule "orRight" (formula "55"))
                                             (rule "orRight" (formula "55"))
                                             (rule "notRight" (formula "57"))
                                             (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "41"))
                                             (rule "inEqSimp_geqRight" (formula "57"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "57"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "25") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "43"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "24") (inst "i=i_1"))
                                             (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                                             (rule "greater_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "23") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "23") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                             (rule "sub_literals" (formula "23") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "51"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                             (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "22") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "22") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "52")))
                                             (rule "sub_literals" (formula "22") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "52"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                             (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_175"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "30") (ifseqformula "45"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "ifEqualsNull" (formula "3"))
                                             (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__45"))
                                             (rule "applyEq" (formula "4") (term "0,0,1,0,0,1") (ifseqformula "3"))
                                             (rule "simplifySelectOfMemset" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                             (rule "castDel" (formula "3") (term "1,0"))
                                             (rule "eqSymm" (formula "3") (term "0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "0,1,1") (inst "selectSK=arr_176"))
                                             (rule "simplifySelectOfMemset" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_177"))
                                             (rule "simplifySelectOfCreate" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "62")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "narrowSelectArrayType" (formula "4") (term "2,0") (ifseqformula "9") (ifseqformula "47"))
                                             (rule "commute_or_2" (formula "44") (term "0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0"))
                                             (rule "commute_or_2" (formula "31") (term "0"))
                                             (rule "commute_or_2" (formula "45") (term "0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "nnf_imp2or" (formula "28") (term "0"))
                                             (rule "nnf_imp2or" (formula "27") (term "0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                             (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "nnf_imp2or" (formula "26") (term "0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "nnf_imp2or" (formula "25") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                             (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                             (rule "arrayLengthIsAShort" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0,0,1,1,0,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "commute_or" (formula "5") (term "0,0,1"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "commute_or" (formula "44") (term "0,0"))
                                             (rule "commute_or" (formula "36") (term "0,0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "commute_or" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0"))
                                             (rule "commute_or" (formula "39") (term "0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "commute_or_2" (formula "27") (term "0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "lenNonNegative" (formula "41") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "41"))
                                             (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                             (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "8"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or" (formula "16") (term "0,0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,0,0") (ifseqformula "9"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,0,1,0,0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "commute_or" (formula "29") (term "0,0"))
                                             (rule "commute_and" (formula "5") (term "0"))
                                             (rule "lenNonNegative" (formula "23") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                             (rule "qeq_literals" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "self.a = x_arr_arr_2 TRUE"
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "61") (ifseqformula "3") (ifseqformula "64"))
                                                (rule "close" (formula "61") (ifseqformula "10"))
                                             )
                                             (branch "self.a = x_arr_arr_2 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0,1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "1,1,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                                (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "commute_and" (formula "4") (term "0"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "cnf_rightDist" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "commute_or" (formula "5"))
                                                (rule "commute_or" (formula "6"))
                                                (rule "cnf_rightDist" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or" (formula "4"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "allLeft" (formula "32") (inst "t=i_1_28"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                (rule "leq_literals" (formula "32") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "32") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "notLeft" (formula "32"))
                                                (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "53"))
                                                (rule "close" (formula "49") (ifseqformula "9"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "eqSymm" (formula "25") (term "1,0"))
                                       (rule "eqSymm" (formula "8") (term "1,0"))
                                       (rule "eqSymm" (formula "10"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "42"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "22"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                       (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                       (rule "nonNull" (formula "44") (inst "i=i_1"))
                                       (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "greater_literals" (formula "44") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1"))
                                       (rule "nonNull" (formula "18") (inst "i=i_1"))
                                       (rule "greater_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "42")))
                                       (rule "sub_literals" (formula "18") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "42"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "34") (term "0,0,1,1,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "27") (term "1,1,0") (inst "u=u"))
                                       (rule "eqSymm" (formula "27") (term "1,0"))
                                       (rule "array2seqDef" (formula "10") (term "0,0,0,1,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "10") (term "1,0,0,1,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                                       (rule "eqSymm" (formula "10") (term "1,0"))
                                       (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "array2seqDef" (formula "30") (term "0,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "12"))
                                       (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_16"))
                                       (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "29") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_19"))
                                       (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "28") (term "1,1,2,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "28") (term "1,0,1,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "29"))
                                       (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                       (rule "sortsDisjointModuloNull" (formula "29") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")))
                                       (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                       (rule "ifthenelse_negated" (formula "29") (term "0"))
                                       (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "33"))
                                       (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_14"))
                                       (rule "applyEq" (formula "32") (term "0,0,0,1") (ifseqformula "27"))
                                       (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "32") (term "1,1,1,1") (ifseqformula "27"))
                                       (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")))
                                       (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")))
                                       (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                                       (rule "ifthenelse_negated" (formula "27") (term "0"))
                                       (rule "applyEqRigid" (formula "32") (term "0,0,1") (ifseqformula "35"))
                                       (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_13"))
                                       (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_15"))
                                       (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "array2seqDef" (formula "31") (term "0,0,1,1,0") (inst "u=u"))
                                       (rule "eqSeqDef" (formula "16") (inst "iv=iv"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "getOfSeqDef" (formula "17") (term "1,1,0"))
                                       (rule "castDel" (formula "17") (term "1,1,1,0"))
                                       (rule "castDel" (formula "17") (term "2,1,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                                       (rule "lenOfSeqDef" (formula "16") (term "1"))
                                       (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                       (rule "times_zero_2" (formula "16") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "16") (term "1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                                       (rule "applyEq" (formula "17") (term "0,1,0,1,0,0") (ifseqformula "16"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "32") (term "1,0,1,1,0") (inst "u=u"))
                                       (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
                                       (rule "applyEq" (formula "51") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "array2seqDef" (formula "37") (term "1,1,0") (inst "u=u"))
                                       (rule "applyEqRigid" (formula "37") (term "1,1,0") (ifseqformula "36"))
                                       (rule "array2seqDef" (formula "37") (term "0,1,0") (inst "u=u"))
                                       (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=java_lang_Object_created__39"))
                                       (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "4"))
                                       (rule "simplifySelectOfMemset" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfCreate" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "50")))
                                       (rule "castDel" (formula "4") (term "1,0"))
                                       (rule "eqSymm" (formula "4") (term "0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "4") (term "0,0"))
                                       (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfMemset" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfMemset" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "simplifySelectOfMemset" (formula "30"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfMemset" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "simplifySelectOfMemset" (formula "33"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "eqSeqDef2" (formula "35") (inst "iv=iv") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "eqSeqDef" (formula "35") (inst "iv=iv"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "getOfSeqDef" (formula "36") (term "1,1,0"))
                                       (rule "castDel" (formula "36") (term "2,1,1,0"))
                                       (rule "castDel" (formula "36") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,2,1,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
                                       (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0"))
                                       (rule "lenOfSeqDef" (formula "35") (term "1"))
                                       (rule "polySimp_elimSub" (formula "35") (term "1,1"))
                                       (rule "times_zero_2" (formula "35") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "35") (term "1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,1,1,0"))
                                       (rule "apply_eq_monomials" (formula "36") (term "1,0,1,0,0") (ifseqformula "35"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "1,0,1,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "5"))
                                       (rule "applyEq" (formula "31") (term "1,2,2,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "28") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "34") (term "1,2,2,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "4") (term "1,2,2,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "1,0"))
                                       (rule "times_zero_1" (formula "26") (term "0"))
                                       (rule "leq_literals" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,0"))
                                       (rule "times_zero_1" (formula "5") (term "0"))
                                       (rule "qeq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                       (rule "pullOutSelect" (formula "30") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_17"))
                                       (rule "applyEq" (formula "31") (term "1,2,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "34") (term "0,1,0,1,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "34") (term "1,2,0,1,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "35") (term "1,2,0,1,0,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "35") (term "0,1,0,1,0,0,1,0") (ifseqformula "30"))
                                       (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                       (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "30") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "30") (term "1,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                       (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                       (rule "ifthenelse_negated" (formula "30") (term "0"))
                                       (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "simplifySelectOfCreate" (formula "28"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                       (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "34") (term "1,1,1,1,1,0,0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "36"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                       (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "simplifySelectOfCreate" (formula "31"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "47")))
                                       (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "30") (term "1,0,1,0,1,0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "30") (term "1,1,2,0,1,0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "31"))
                                       (rule "hideAuxiliaryEq" (formula "31"))
                                       (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfCreate" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "45")))
                                       (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "29") (term "1,0,1,1,0,1,1,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                       (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "applyEqReverse" (formula "30") (term "1,1,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "29") (term "0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "29") (term "0,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "30") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "12") (term "1,1,1,0") (ifseqformula "3") (ifseqformula "37"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "27") (term "0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_8"))
                                       (rule "applyEq" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "28") (term "1,2,0,0,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                                       (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "eqSymm" (formula "27") (term "0,0"))
                                       (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "simplifySelectOfStore" (formula "27"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                                       (rule "simplifySelectOfMemset" (formula "27"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                       (rule "elementOfArrayRange" (formula "27") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "simplifySelectOfCreate" (formula "27"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "28") (term "0,1,0,0,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0") (ifseqformula "27"))
                                       (rule "hideAuxiliaryEq" (formula "27"))
                                       (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=java_lang_Object_created__40"))
                                       (rule "simplifySelectOfMemset" (formula "24"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replaceKnownSelect_taclet1000001002010_7" (formula "24") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1000001002010_11" (formula "24") (term "0"))
                                       (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "simplifySelectOfMemset" (formula "24"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                       (rule "elementOfArrayRange" (formula "24") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "simplifySelectOfCreate" (formula "24"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "28") (term "0,1,0,1,0,0,1,0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "25") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "28") (term "1,2,0,1,0,0,1,0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "25") (term "1,2,0,0,1,1,0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "27") (term "0,1,0,1,0,0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "27") (term "1,2,0,1,0,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "nnf_imp2or" (formula "29") (term "0"))
                                       (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "7") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                       (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "32") (term "0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0"))
                                       (rule "nnf_imp2or" (formula "25") (term "0"))
                                       (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                       (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "nnf_imp2or" (formula "30") (term "0"))
                                       (rule "nnf_imp2or" (formula "27") (term "0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "7") (term "0"))
                                       (rule "nnf_imp2or" (formula "8") (term "0"))
                                       (rule "nnf_imp2or" (formula "9") (term "0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                       (rule "ifthenelse_split" (formula "12") (term "1"))
                                       (branch "self.unsigned.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "31") (term "0,1,1,0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "replace_known_left" (formula "14") (term "0,1,1,0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "1,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "arrayLengthNotNegative" (formula "13") (term "1,0,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "14") (term "1,0,1,0,0"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "4"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "2") (ifseqformula "45"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "2,0,0,1,1,0") (ifseqformula "2") (ifseqformula "45"))
                                          (rule "narrowSelectArrayType" (formula "16") (term "2,0,1,0,0,1,0") (ifseqformula "2") (ifseqformula "45"))
                                          (rule "nonNull" (formula "25") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "greater_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "allRight" (formula "56") (inst "sk=i_1_27"))
                                          (rule "orRight" (formula "56"))
                                          (rule "notRight" (formula "57"))
                                          (rule "orRight" (formula "57"))
                                          (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "43"))
                                          (rule "inEqSimp_geqRight" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "58"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "27") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "greater_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "notLeft" (formula "27"))
                                          (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "26") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "25") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "52")))
                                          (rule "sub_literals" (formula "25") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "52"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "24") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                          (rule "sub_literals" (formula "24") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "53"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "23") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "54")))
                                          (rule "sub_literals" (formula "23") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "54"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_172"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                          (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "31") (ifseqformula "48"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "ifEqualsNull" (formula "3"))
                                          (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__42"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                          (rule "simplifySelectOfMemset" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                          (rule "castDel" (formula "3") (term "1,0"))
                                          (rule "eqSymm" (formula "3") (term "0,0"))
                                          (rule "pullOutSelect" (formula "4") (term "0,1,1") (inst "selectSK=arr_173"))
                                          (rule "simplifySelectOfMemset" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_174"))
                                          (rule "simplifySelectOfCreate" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "64")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "narrowSelectArrayType" (formula "4") (term "2,0") (ifseqformula "8") (ifseqformula "50"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                          (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "21") (term "0,0,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "arrayLengthNotNegative" (formula "21") (term "0,0,1,1,0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "commute_or" (formula "5") (term "0,0"))
                                          (rule "commute_or" (formula "5") (term "0,0,1"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or" (formula "37") (term "0,0"))
                                          (rule "commute_or" (formula "38") (term "0,0"))
                                          (rule "commute_or" (formula "39") (term "0,0"))
                                          (rule "commute_or_2" (formula "30") (term "0"))
                                          (rule "commute_or_2" (formula "29") (term "0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "commute_or" (formula "13") (term "0,0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,2,0,0,0") (ifseqformula "8"))
                                          (rule "lenNonNegative" (formula "43") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "43"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "25") (term "0,0"))
                                          (rule "commute_or" (formula "32") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "lenNonNegative" (formula "24") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24"))
                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "commute_and" (formula "5") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "self.msg = x_arr_arr_2 TRUE"
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "64") (ifseqformula "4") (ifseqformula "67"))
                                             (rule "close" (formula "64") (ifseqformula "10"))
                                          )
                                          (branch "self.msg = x_arr_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "6") (term "0,0,0,1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "0,1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0,1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "49")))
                                             (rule "commute_and" (formula "4") (term "0"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "cnf_rightDist" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "commute_or" (formula "6"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "ifthenelse_to_or_right" (formula "47") (term "0,0,0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or" (formula "47") (term "1,1,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,1,0"))
                                             (rule "commute_or" (formula "47") (term "0,0,1,0"))
                                             (rule "ifthenelse_to_or_right" (formula "26") (term "0,0,0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0"))
                                             (rule "commute_or" (formula "26") (term "1,1,0"))
                                             (rule "commute_or_2" (formula "26") (term "0,1,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                             (rule "cnf_rightDist" (formula "47") (term "1,1,0"))
                                             (rule "cnf_rightDist" (formula "47") (term "0"))
                                             (rule "distr_forallAnd" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "commute_or" (formula "48") (term "0"))
                                             (rule "shift_paren_or" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "commute_or" (formula "48") (term "1,1,0"))
                                             (rule "shift_paren_or" (formula "47") (term "0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "cnf_rightDist" (formula "48") (term "0"))
                                             (rule "distr_forallAnd" (formula "48"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "commute_or_2" (formula "48") (term "0"))
                                             (rule "shift_paren_or" (formula "49") (term "0"))
                                             (rule "commute_or_2" (formula "49") (term "0,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,0"))
                                             (rule "add_literals" (formula "49") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "49") (term "0,1,0"))
                                             (rule "leq_literals" (formula "49") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "shift_paren_or" (formula "48") (term "0,0"))
                                             (rule "commute_or" (formula "48") (term "0,0,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "48") (term "0,0"))
                                             (rule "add_zero_right" (formula "48") (term "1,1,0,0"))
                                             (rule "qeq_literals" (formula "48") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "cnf_rightDist" (formula "26") (term "1,1,0"))
                                             (rule "cnf_rightDist" (formula "26") (term "0"))
                                             (rule "distr_forallAnd" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "commute_or" (formula "27") (term "0"))
                                             (rule "shift_paren_or" (formula "26") (term "0"))
                                             (rule "commute_or_2" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "commute_or" (formula "27") (term "1,1,0"))
                                             (rule "shift_paren_or" (formula "26") (term "0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "cnf_rightDist" (formula "27") (term "0"))
                                             (rule "distr_forallAnd" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "commute_or_2" (formula "27") (term "0"))
                                             (rule "shift_paren_or" (formula "28") (term "0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "28") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                                             (rule "add_literals" (formula "28") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0,1,0"))
                                             (rule "leq_literals" (formula "28") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "shift_paren_or" (formula "27") (term "0,0"))
                                             (rule "commute_or" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0,0"))
                                             (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                                             (rule "qeq_literals" (formula "27") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "arrayLengthIsAShort" (formula "35") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "34") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "35") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "cut_direct" (formula "26") (term "0"))
                                             (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null TRUE"
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "52") (term "1,2,0,0,0,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,0,0,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "29") (term "0,1,0,0,0,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "50") (term "1,2,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "28") (term "1,2,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "51") (term "1,2,0,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "29") (term "1,2,0,0,0,0,0,0") (ifseqformula "26"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "63"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "allLeft" (formula "42") (inst "t=i_1_27"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "42") (term "0,0,1"))
                                                (rule "leq_literals" (formula "42") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "42"))
                                                (rule "qeq_literals" (formula "9") (term "0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                             (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null FALSE"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "narrowSelectArrayType" (formula "29") (term "2,0,0,0,0,0,0") (ifseqformula "12") (ifseqformula "56"))
                                                (rule "narrowSelectArrayType" (formula "28") (term "2,0,0,0") (ifseqformula "12") (ifseqformula "56"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "allLeft" (formula "42") (inst "t=i_1_27"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                (rule "leq_literals" (formula "42") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "42"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                       )
                                       (branch "self.unsigned.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "replace_known_right" (formula "30") (term "0,1,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "replace_known_right" (formula "13") (term "0,1,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_geqRight" (formula "34"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                                          (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "arrayLengthNotNegative" (formula "13") (term "1,0,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "14") (term "1,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "arrayLengthNotNegative" (formula "14") (term "1,0,1,0,0"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "19") (ifseqformula "5"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "3") (ifseqformula "43"))
                                          (rule "narrowSelectArrayType" (formula "11") (term "2,0,0,1,1,0") (ifseqformula "3") (ifseqformula "43"))
                                          (rule "nonNull" (formula "24") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "allRight" (formula "54") (inst "sk=i_1_26"))
                                          (rule "orRight" (formula "54"))
                                          (rule "notRight" (formula "55"))
                                          (rule "orRight" (formula "55"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "41"))
                                          (rule "inEqSimp_geqRight" (formula "56"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "56"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "26") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "greater_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "43"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "25") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "43"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "24") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                                          (rule "greater_literals" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "50"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "23") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                          (rule "sub_literals" (formula "23") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "51"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "22") (inst "i=i_1"))
                                          (rule "greater_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "52")))
                                          (rule "sub_literals" (formula "22") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "52"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_169"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                          (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "30") (ifseqformula "46"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "ifEqualsNull" (formula "3"))
                                          (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__41"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                          (rule "simplifySelectOfMemset" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                          (rule "castDel" (formula "3") (term "1,0"))
                                          (rule "eqSymm" (formula "3") (term "0,0"))
                                          (rule "pullOutSelect" (formula "4") (term "0,1,1") (inst "selectSK=arr_170"))
                                          (rule "simplifySelectOfMemset" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_171"))
                                          (rule "simplifySelectOfCreate" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "62")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "narrowSelectArrayType" (formula "4") (term "2,0") (ifseqformula "9") (ifseqformula "48"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_or_2" (formula "31") (term "0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                          (rule "arrayLengthIsAShort" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "21") (term "0,0,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "21") (term "0,0,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "commute_or" (formula "5") (term "0,0"))
                                          (rule "commute_or" (formula "5") (term "0,0,1"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0"))
                                          (rule "commute_or" (formula "37") (term "0,0"))
                                          (rule "commute_or" (formula "38") (term "0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0"))
                                          (rule "commute_or" (formula "39") (term "0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "lenNonNegative" (formula "41") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41"))
                                          (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                          (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "8"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,2,0,0,0") (ifseqformula "9"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,0,1,0,0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "commute_or" (formula "29") (term "0,0"))
                                          (rule "commute_and" (formula "5") (term "0"))
                                          (rule "lenNonNegative" (formula "23") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "self.msg = x_arr_arr_2 TRUE"
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "62") (ifseqformula "4") (ifseqformula "65"))
                                             (rule "close" (formula "62") (ifseqformula "11"))
                                          )
                                          (branch "self.msg = x_arr_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "6") (term "0,0,0,1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "0,1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "1,1,0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                                             (rule "commute_and" (formula "4") (term "0"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "cnf_rightDist" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "commute_or" (formula "6"))
                                             (rule "cnf_rightDist" (formula "4"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "33") (inst "t=i_1_26"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "33") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "54"))
                                             (rule "close" (formula "49") (ifseqformula "10"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "notRight" (formula "44"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "eqSymm" (formula "9") (term "1,0"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "eqSymm" (formula "26") (term "1,0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "43"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                    (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "apply_eq_monomials" (formula "28") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "33"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "35") (term "0,1,0") (inst "u=u"))
                                    (rule "nonNull" (formula "19") (inst "i=i_1"))
                                    (rule "greater_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "43")))
                                    (rule "sub_literals" (formula "19") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "35") (term "0,0,1,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                                    (rule "eqSymm" (formula "11") (term "1,0"))
                                    (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                    (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                                    (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "array2seqDef" (formula "31") (term "0,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "array2seqDef" (formula "28") (term "1,0,0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "28") (term "0,0,0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "28") (term "1,1,0") (inst "u=u"))
                                    (rule "eqSymm" (formula "28") (term "1,0"))
                                    (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_13"))
                                    (rule "applyEq" (formula "31") (term "1,1,1,1") (ifseqformula "27"))
                                    (rule "applyEq" (formula "31") (term "0,0,0,1") (ifseqformula "27"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "27"))
                                    (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                                    (rule "ifthenelse_negated" (formula "27") (term "0"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_15"))
                                    (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_12"))
                                    (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_18"))
                                    (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "28"))
                                    (rule "applyEq" (formula "32") (term "1,1,2,0,1,0") (ifseqformula "28"))
                                    (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "46")))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                    (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
                                    (rule "ifthenelse_negated" (formula "28") (term "0"))
                                    (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                    (rule "applyEqRigid" (formula "34") (term "0,0,1") (ifseqformula "37"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_14"))
                                    (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
                                    (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "48")))
                                    (rule "sortsDisjointModuloNull" (formula "6") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "50")))
                                    (rule "dismissNonSelectedField" (formula "6") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                    (rule "ifthenelse_negated" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                    (rule "ifEqualsNull" (formula "6"))
                                    (rule "array2seqDef" (formula "15") (term "0,0,1,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "15") (term "1,0,1,1,0") (inst "u=u"))
                                    (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                                    (rule "castDel" (formula "19") (term "2,1,1,0"))
                                    (rule "castDel" (formula "19") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "18") (term "1"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "18") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "38") (term "0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "38") (term "1,1,0") (inst "u=u"))
                                    (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                    (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "pullOutSelect" (formula "34") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_16"))
                                    (rule "applyEq" (formula "35") (term "1,2,0,0,1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "1,2,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "0,1,0,1,0") (ifseqformula "34"))
                                    (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")))
                                    (rule "sortsDisjointModuloNull" (formula "34") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")))
                                    (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                    (rule "ifthenelse_negated" (formula "34") (term "0"))
                                    (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__38"))
                                    (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "6") (term "0,0,0,1") (ifseqformula "32"))
                                    (rule "simplifySelectOfMemset" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "simplifySelectOfStore" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "simplifySelectOfStore" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "simplifySelectOfStore" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "simplifySelectOfCreate" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "52")))
                                    (rule "castDel" (formula "32") (term "1,0"))
                                    (rule "eqSymm" (formula "32") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                    (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,1") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfMemset" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "simplifySelectOfMemset" (formula "30"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfMemset" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "simplifySelectOfMemset" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "simplifySelectOfMemset" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
                                    (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "eqSeqDef2" (formula "37") (inst "iv=iv") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "eqSeqDef" (formula "37") (inst "iv=iv"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "lenOfSeqDef" (formula "37") (term "1"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,1"))
                                    (rule "times_zero_2" (formula "37") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "37") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "38") (term "1,1,0"))
                                    (rule "castDel" (formula "38") (term "2,1,1,0"))
                                    (rule "castDel" (formula "38") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,2,1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "38") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "38") (term "0,1,0,1,0,0") (ifseqformula "37"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,1,1,1,0,0"))
                                    (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "4"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "32") (term "1,2,2,0,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,0"))
                                    (rule "times_zero_1" (formula "4") (term "0"))
                                    (rule "qeq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "5") (term "1,2,1,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "27") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "33") (term "1,2,2,0,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "28") (term "1,2,2,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "40") (term "1,0,0,1,1,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                                    (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "simplifySelectOfCreate" (formula "30"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "36") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "30"))
                                    (rule "hideAuxiliaryEq" (formula "30"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "37"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "applyEq" (formula "16") (term "0,0,1,1,0,0,1,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "15") (term "0,0,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                    (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "37") (term "0,1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0,1,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "32") (term "1,1,2,1,0,1,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "30") (term "1,0"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEq" (formula "33") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "32") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                    (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "simplifySelectOfCreate" (formula "28"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "45")))
                                    (rule "applyEqReverse" (formula "32") (term "1,2,0,1,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "31") (term "0,1,0,1,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "32") (term "0,1,0,1,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "31") (term "1,2,0,1,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "elementOfArrayRange" (formula "25") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "simplifySelectOfCreate" (formula "25"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "44")))
                                    (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "28") (term "1,1,2,1,1,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "11") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "28") (term "1,0,1,1,1,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "13") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "26") (term "1,0"))
                                    (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "13") (term "0,0,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "28") (term "0,0,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "14") (term "0,0,1,1,0,0,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "31") (term "1") (ifseqformula "30"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "29") (term "1,1,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "1,1,1,0") (ifseqformula "4") (ifseqformula "37"))
                                    (rule "pullOutSelect" (formula "28") (term "1,2,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_7"))
                                    (rule "applyEq" (formula "27") (term "1,2,0,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0,0") (ifseqformula "28"))
                                    (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "eqSymm" (formula "28") (term "0,0"))
                                    (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "simplifySelectOfStore" (formula "28"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")))
                                    (rule "simplifySelectOfMemset" (formula "28"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_5"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "simplifySelectOfCreate" (formula "29"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")) (ifInst ""  (formula "43")))
                                    (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "1,2,0,0,0,1,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,1,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,0,0,0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_imp2or" (formula "32") (term "0"))
                                    (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "35") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                    (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "10") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                    (rule "ifthenelse_split" (formula "15") (term "1"))
                                    (branch "self.unsigned.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "32") (term "0,1,1,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,1,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "arrayLengthIsAShort" (formula "16") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "17") (term "1,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "7"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "close" (formula "39") (ifseqformula "1"))
                                    )
                                    (branch "self.unsigned.length ≥ 1 FALSE"
                                       (rule "replace_known_right" (formula "16") (term "0,1,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "replace_known_right" (formula "31") (term "0,1,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "36"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                                       (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "17") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                       (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                       (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "18") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "arrayLengthIsAShort" (formula "18") (term "1,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "8"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "close" (formula "37") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "notRight" (formula "44"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "eqSymm" (formula "9") (term "1,0"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "eqSymm" (formula "26") (term "1,0"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "43"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                 (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                                 (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "apply_eq_monomials" (formula "28") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "35") (term "0,1,0") (inst "u=u"))
                                 (rule "nonNull" (formula "19") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "43")))
                                 (rule "sub_literals" (formula "19") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "35") (term "0,0,1,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "11") (term "1,0"))
                                 (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                 (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "array2seqDef" (formula "31") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "array2seqDef" (formula "28") (term "1,0,0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "28") (term "0,0,0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "28") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "28") (term "1,0"))
                                 (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_12"))
                                 (rule "applyEq" (formula "31") (term "1,1,1,1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "31") (term "0,0,0,1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "27"))
                                 (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                 (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                                 (rule "ifthenelse_negated" (formula "27") (term "0"))
                                 (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_14"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_11"))
                                 (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_17"))
                                 (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "32") (term "1,0,1,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "32") (term "1,1,2,0,1,0") (ifseqformula "28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "46")))
                                 (rule "eqSymm" (formula "37"))
                                 (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                                 (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
                                 (rule "ifthenelse_negated" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                 (rule "applyEqRigid" (formula "34") (term "0,0,1") (ifseqformula "37"))
                                 (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_13"))
                                 (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "48")))
                                 (rule "sortsDisjointModuloNull" (formula "6") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "50")))
                                 (rule "dismissNonSelectedField" (formula "6") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                 (rule "ifthenelse_negated" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                 (rule "ifEqualsNull" (formula "6"))
                                 (rule "array2seqDef" (formula "15") (term "0,0,1,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "15") (term "1,0,1,1,0") (inst "u=u"))
                                 (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                                 (rule "castDel" (formula "19") (term "2,1,1,0"))
                                 (rule "castDel" (formula "19") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "18") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "38") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "38") (term "1,1,0") (inst "u=u"))
                                 (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                 (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "pullOutSelect" (formula "34") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_15"))
                                 (rule "applyEq" (formula "35") (term "1,2,0,0,1,1,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "38") (term "1,2,0,1,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,1,0") (ifseqformula "34"))
                                 (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")))
                                 (rule "sortsDisjointModuloNull" (formula "34") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")))
                                 (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                 (rule "ifthenelse_negated" (formula "34") (term "0"))
                                 (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__37"))
                                 (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "6") (term "0,0,0,1") (ifseqformula "32"))
                                 (rule "simplifySelectOfMemset" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "simplifySelectOfStore" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "simplifySelectOfStore" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "simplifySelectOfStore" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "simplifySelectOfCreate" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "52")))
                                 (rule "castDel" (formula "32") (term "1,0"))
                                 (rule "eqSymm" (formula "32") (term "0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                 (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,0,1") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfMemset" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfMemset" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "simplifySelectOfMemset" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "simplifySelectOfMemset" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "simplifySelectOfMemset" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "eqSeqDef2" (formula "37") (inst "iv=iv") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "true_left" (formula "37"))
                                 (rule "eqSeqDef" (formula "37") (inst "iv=iv"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "lenOfSeqDef" (formula "37") (term "1"))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,1"))
                                 (rule "times_zero_2" (formula "37") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "37") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "38") (term "1,1,0"))
                                 (rule "castDel" (formula "38") (term "2,1,1,0"))
                                 (rule "castDel" (formula "38") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "38") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0"))
                                 (rule "applyEqRigid" (formula "38") (term "0,1,0,1,0,0") (ifseqformula "37"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,0,1,1,1,0,0"))
                                 (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "4"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,0"))
                                 (rule "times_zero_1" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "applyEq" (formula "32") (term "1,2,2,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "5") (term "1,2,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "27") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "33") (term "1,2,2,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "28") (term "1,2,2,0,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "40") (term "1,0,0,1,1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                                 (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfCreate" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")))
                                 (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "37"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "applyEq" (formula "16") (term "0,0,1,1,0,0,1,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,1,0,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                 (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "37") (term "0,1") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "32") (term "1,1,2,1,0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "30") (term "1,0"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "34"))
                                 (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                 (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                 (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfCreate" (formula "28"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "45")))
                                 (rule "applyEqReverse" (formula "32") (term "1,2,0,1,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "31") (term "0,1,0,1,0,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "32") (term "0,1,0,1,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "31") (term "1,2,0,1,0,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "28"))
                                 (rule "hideAuxiliaryEq" (formula "28"))
                                 (rule "elementOfArrayRange" (formula "25") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "simplifySelectOfCreate" (formula "25"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "44")))
                                 (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "28") (term "1,1,2,1,1,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "11") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "28") (term "1,0,1,1,1,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "13") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "hideAuxiliaryEq" (formula "24"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "eqSymm" (formula "26") (term "1,0"))
                                 (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "13") (term "0,0,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "28") (term "0,0,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "14") (term "0,0,1,1,0,0,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "30"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                 (rule "applyEqReverse" (formula "28") (term "0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1,1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "29") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "29") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "28") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "13") (term "1,1,1,0") (ifseqformula "4") (ifseqformula "37"))
                                 (rule "pullOutSelect" (formula "28") (term "1,2,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_6"))
                                 (rule "applyEq" (formula "27") (term "1,2,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "27") (term "0,1,0,0,0") (ifseqformula "28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "eqSymm" (formula "28") (term "0,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfStore" (formula "28"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")))
                                 (rule "simplifySelectOfMemset" (formula "28"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_5"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "simplifySelectOfCreate" (formula "29"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")) (ifInst ""  (formula "43")))
                                 (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0") (ifseqformula "29"))
                                 (rule "applyEqReverse" (formula "30") (term "1,2,0,0,0,1,0") (ifseqformula "29"))
                                 (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,1,0") (ifseqformula "29"))
                                 (rule "applyEqReverse" (formula "28") (term "0,1,0,0,0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                                 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                 (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_imp2or" (formula "26") (term "0"))
                                 (rule "nnf_imp2or" (formula "25") (term "0"))
                                 (rule "nnf_imp2or" (formula "27") (term "0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "10") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                 (rule "ifthenelse_split" (formula "15") (term "1"))
                                 (branch "self.unsigned.length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "32") (term "0,1,1,0,0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "replace_known_left" (formula "17") (term "0,1,1,0,0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "arrayLengthIsAShort" (formula "16") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "1,0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "7"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "close" (formula "39") (ifseqformula "1"))
                                 )
                                 (branch "self.unsigned.length ≥ 1 FALSE"
                                    (rule "replace_known_right" (formula "16") (term "0,1,1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_right" (formula "31") (term "0,1,1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_geqRight" (formula "36"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
                                    (rule "qeq_literals" (formula "17") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                    (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
                                    (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                    (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                    (rule "arrayLengthIsAShort" (formula "18") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "arrayLengthIsAShort" (formula "18") (term "1,0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "8"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "close" (formula "37") (ifseqformula "2"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "44"))
                              (rule "eqSymm" (formula "14"))
                              (rule "eqSymm" (formula "9") (term "1,0"))
                              (rule "eqSymm" (formula "11"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "15"))
                              (rule "eqSymm" (formula "28"))
                              (rule "eqSymm" (formula "13"))
                              (rule "eqSymm" (formula "29"))
                              (rule "eqSymm" (formula "31"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "eqSymm" (formula "30"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0"))
                              (rule "inEqSimp_ltRight" (formula "43"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "41"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22"))
                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                              (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                              (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "apply_eq_monomials" (formula "28") (term "1,0,0,1,0,0") (ifseqformula "32"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "32"))
                              (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "35") (term "0,1,0") (inst "u=u"))
                              (rule "nonNull" (formula "19") (inst "i=i_1"))
                              (rule "greater_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "43")))
                              (rule "sub_literals" (formula "19") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "35") (term "0,0,1,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "11") (term "1,0"))
                              (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "13"))
                              (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "13"))
                              (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                              (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "30"))
                              (rule "array2seqDef" (formula "31") (term "0,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "31"))
                              (rule "array2seqDef" (formula "28") (term "1,0,0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "28") (term "0,0,0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "28") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "28") (term "1,0"))
                              (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_11"))
                              (rule "applyEq" (formula "31") (term "1,1,1,1") (ifseqformula "27"))
                              (rule "applyEq" (formula "31") (term "0,0,0,1") (ifseqformula "27"))
                              (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "39") (term "0") (ifseqformula "27"))
                              (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                              (rule "eqSymm" (formula "34"))
                              (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                              (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                              (rule "ifthenelse_negated" (formula "27") (term "0"))
                              (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_13"))
                              (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "1,0,1,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_10"))
                              (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "1,1,1,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_16"))
                              (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "41") (term "0") (ifseqformula "28"))
                              (rule "applyEq" (formula "32") (term "1,0,1,0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "32") (term "1,1,2,0,1,0") (ifseqformula "28"))
                              (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "46")))
                              (rule "eqSymm" (formula "37"))
                              (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0"))
                              (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "48")))
                              (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "28") (term "0"))
                              (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                              (rule "applyEqRigid" (formula "34") (term "0,0,1") (ifseqformula "37"))
                              (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_12"))
                              (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                              (rule "eqSymm" (formula "36"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "48")))
                              (rule "sortsDisjointModuloNull" (formula "6") (term "0,0,0"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "50")))
                              (rule "dismissNonSelectedField" (formula "6") (term "0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                              (rule "ifthenelse_negated" (formula "6") (term "0"))
                              (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                              (rule "ifEqualsNull" (formula "6"))
                              (rule "array2seqDef" (formula "15") (term "0,0,1,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "15") (term "1,0,1,1,0") (inst "u=u"))
                              (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                              (rule "andLeft" (formula "18"))
                              (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                              (rule "castDel" (formula "19") (term "2,1,1,0"))
                              (rule "castDel" (formula "19") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "18") (term "1"))
                              (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                              (rule "times_zero_2" (formula "18") (term "1,1,1"))
                              (rule "add_zero_right" (formula "18") (term "1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                              (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0"))
                              (rule "array2seqDef" (formula "38") (term "0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "38") (term "1,1,0") (inst "u=u"))
                              (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "37"))
                              (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "pullOutSelect" (formula "34") (term "0,1,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_14"))
                              (rule "applyEq" (formula "35") (term "1,2,0,0,1,1,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "38") (term "1,2,0,1,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "38") (term "0,1,0,1,0") (ifseqformula "34"))
                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")))
                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0,0"))
                              (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")))
                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                              (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__36"))
                              (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "6") (term "0,0,0,1") (ifseqformula "32"))
                              (rule "simplifySelectOfMemset" (formula "32"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "simplifySelectOfStore" (formula "32"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "simplifySelectOfStore" (formula "32"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "simplifySelectOfStore" (formula "32"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "simplifySelectOfCreate" (formula "32"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "52")))
                              (rule "castDel" (formula "32") (term "1,0"))
                              (rule "eqSymm" (formula "32") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                              (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "52"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "6") (term "0,0,0,1") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfMemset" (formula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "simplifySelectOfMemset" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfMemset" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "simplifySelectOfMemset" (formula "32"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "simplifySelectOfMemset" (formula "34"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "eqSeqDef2" (formula "37") (inst "iv=iv") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "eqSeqDef" (formula "37") (inst "iv=iv"))
                              (rule "andLeft" (formula "37"))
                              (rule "lenOfSeqDef" (formula "37") (term "1"))
                              (rule "polySimp_elimSub" (formula "37") (term "1,1"))
                              (rule "times_zero_2" (formula "37") (term "1,1,1"))
                              (rule "add_zero_right" (formula "37") (term "1,1"))
                              (rule "getOfSeqDef" (formula "38") (term "1,1,0"))
                              (rule "castDel" (formula "38") (term "2,1,1,0"))
                              (rule "castDel" (formula "38") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "38") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "38") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "38") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                              (rule "add_zero_right" (formula "37") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0"))
                              (rule "applyEqRigid" (formula "38") (term "0,1,0,1,0,0") (ifseqformula "37"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "0,0,1,1,1,0,0"))
                              (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "4"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "32") (term "1,2,2,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "3") (term "1,2,2,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "5") (term "1,2,1,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "27") (term "1,2,1,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "33") (term "1,2,2,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "28") (term "1,2,2,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "40") (term "1,0,0,1,1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                              (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "simplifySelectOfCreate" (formula "30"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")))
                              (rule "applyEqReverse" (formula "35") (term "1,1,1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "36") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "37"))
                              (rule "eqSymm" (formula "18"))
                              (rule "applyEq" (formula "16") (term "0,0,1,1,0,0,1,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "15") (term "0,0,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                              (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                              (rule "applyEqReverse" (formula "37") (term "0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0,1,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "32") (term "1,1,2,1,0,1,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "15") (term "0,0,0,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "16") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "34") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "eqSymm" (formula "30") (term "1,0"))
                              (rule "eqSymm" (formula "34"))
                              (rule "applyEq" (formula "33") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "14") (term "0,0,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "15") (term "0,0,1,1,0,0,1,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "32") (term "0,0,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "34"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "34"))
                              (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                              (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                              (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "simplifySelectOfCreate" (formula "28"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "45")))
                              (rule "applyEqReverse" (formula "32") (term "1,2,0,1,0,0,1,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "31") (term "0,1,0,1,0,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,0,1,0,0,1,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "29") (term "1,2,0,0,0,1,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "31") (term "1,2,0,1,0,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "28"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "elementOfArrayRange" (formula "25") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "simplifySelectOfCreate" (formula "25"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "44")))
                              (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "28") (term "1,1,2,1,1,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "11") (term "0,1,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "28") (term "1,0,1,1,1,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "13") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "eqSymm" (formula "30"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "13") (term "0,0,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "28") (term "0,0,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "14") (term "0,0,1,1,0,0,1,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "31") (term "1") (ifseqformula "30"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                              (rule "applyEqReverse" (formula "28") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "29") (term "1,1,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "29") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "29") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "28") (term "0,0,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "narrowSelectArrayType" (formula "13") (term "1,1,1,0") (ifseqformula "4") (ifseqformula "37"))
                              (rule "pullOutSelect" (formula "28") (term "1,2,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_5"))
                              (rule "applyEq" (formula "27") (term "1,2,0,0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "27") (term "0,1,0,0,0") (ifseqformula "28"))
                              (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28") (term "0,0"))
                              (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "simplifySelectOfStore" (formula "28"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")))
                              (rule "simplifySelectOfMemset" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_5"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "simplifySelectOfCreate" (formula "29"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")) (ifInst ""  (formula "43")))
                              (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "30") (term "1,2,0,0,0,1,0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,1,0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "28") (term "0,1,0,0,0") (ifseqformula "29"))
                              (rule "hideAuxiliaryEq" (formula "29"))
                              (rule "elementOfArrayRange" (formula "1") (term "0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "nnf_imp2or" (formula "32") (term "0"))
                              (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                              (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "33"))
                              (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "35") (term "0"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "26") (term "0"))
                              (rule "nnf_imp2or" (formula "25") (term "0"))
                              (rule "nnf_imp2or" (formula "27") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                              (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                              (rule "andLeft" (formula "17"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "nnf_imp2or" (formula "31") (term "0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                              (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "10") (term "0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "11") (term "0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "35") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "26") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "25") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "27") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "31") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                              (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                              (rule "ifthenelse_split" (formula "15") (term "1"))
                              (branch "self.unsigned.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "32") (term "0,1,1,0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "replace_known_left" (formula "17") (term "0,1,1,0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "arrayLengthIsAShort" (formula "16") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "17") (term "1,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "7"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "close" (formula "39") (ifseqformula "1"))
                              )
                              (branch "self.unsigned.length ≥ 1 FALSE"
                                 (rule "replace_known_right" (formula "16") (term "0,1,1,0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "replace_known_right" (formula "31") (term "0,1,1,0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_geqRight" (formula "36"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                                 (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
                                 (rule "qeq_literals" (formula "17") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                 (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
                                 (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                                 (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "18") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "arrayLengthIsAShort" (formula "18") (term "1,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "8"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "close" (formula "37") (ifseqformula "2"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "notRight" (formula "44"))
                           (rule "eqSymm" (formula "14"))
                           (rule "eqSymm" (formula "9") (term "1,0"))
                           (rule "eqSymm" (formula "11"))
                           (rule "eqSymm" (formula "12"))
                           (rule "eqSymm" (formula "15"))
                           (rule "eqSymm" (formula "28"))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "29"))
                           (rule "eqSymm" (formula "31"))
                           (rule "eqSymm" (formula "26") (term "1,0"))
                           (rule "eqSymm" (formula "30"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0"))
                           (rule "inEqSimp_ltRight" (formula "43"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                           (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "33"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "apply_eq_monomials" (formula "28") (term "1,0,0,1,0,0") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "apply_eq_monomials" (formula "27") (term "1,0,0,1,0,0") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "19") (inst "i=i_1"))
                           (rule "greater_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "43")))
                           (rule "sub_literals" (formula "19") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "35") (term "0,0,1,1,0") (inst "u=u"))
                           (rule "eqSymm" (formula "35") (term "1,0"))
                           (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
                           (rule "eqSymm" (formula "11") (term "1,0"))
                           (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "13"))
                           (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                           (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                           (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "13"))
                           (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "30"))
                           (rule "array2seqDef" (formula "31") (term "0,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "31"))
                           (rule "array2seqDef" (formula "28") (term "0,0,0,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "28") (term "1,0,0,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "28") (term "1,1,0") (inst "u=u"))
                           (rule "eqSymm" (formula "28") (term "1,0"))
                           (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
                           (rule "applyEq" (formula "28") (term "1,0,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "31") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "31") (term "1,1,1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                           (rule "eqSymm" (formula "34"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_12"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                           (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "30") (term "1,1,2,1,0,1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "30") (term "1,0,1,1,0,1,1,0") (ifseqformula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "44")))
                           (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "26") (term "0,0,0"))
                           (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                           (rule "dismissNonSelectedField" (formula "26") (term "0,0,0,0"))
                           (rule "ifthenelse_negated" (formula "26") (term "0"))
                           (rule "pullOutSelect" (formula "31") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_15"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "28") (term "1,0,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "30") (term "1,1,2,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "30") (term "1,0,1,0,1,0") (ifseqformula "31"))
                           (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                           (rule "eqSymm" (formula "36"))
                           (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "31") (term "0,0,1,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "31") (term "0,0,0"))
                           (rule "replace_known_right" (formula "31") (term "1,0,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                           (rule "ifthenelse_negated" (formula "31") (term "0"))
                           (rule "applyEq" (formula "33") (term "0,0,1") (ifseqformula "36"))
                           (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "35"))
                           (rule "applyEqRigid" (formula "33") (term "0,0,1") (ifseqformula "35"))
                           (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
                           (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "35") (term "1,1,1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_11"))
                           (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                           (rule "eqSymm" (formula "36"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_11"))
                           (rule "applyEq" (formula "33") (term "1,2,0,0,1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "33") (term "0,1,0,0,1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "6"))
                           (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "48")))
                           (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "6") (term "0,0,0"))
                           (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "50")))
                           (rule "dismissNonSelectedField" (formula "6") (term "0,0,0,0"))
                           (rule "ifthenelse_negated" (formula "6") (term "0"))
                           (rule "applyEqRigid" (formula "33") (term "1,2,0,0,1,1,0") (ifseqformula "7"))
                           (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                           (rule "ifEqualsNull" (formula "6"))
                           (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "7"))
                           (rule "array2seqDef" (formula "41") (term "1,1,0") (inst "u=u"))
                           (rule "eqSymm" (formula "41") (term "1,0"))
                           (rule "array2seqDef" (formula "15") (term "1,0,1,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "15") (term "0,0,1,1,0") (inst "u=u"))
                           (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                           (rule "andLeft" (formula "18"))
                           (rule "lenOfSeqDef" (formula "18") (term "1"))
                           (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                           (rule "times_zero_2" (formula "18") (term "1,1,1"))
                           (rule "add_zero_right" (formula "18") (term "1,1"))
                           (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                           (rule "castDel" (formula "19") (term "1,1,1,0"))
                           (rule "castDel" (formula "19") (term "2,1,1,0"))
                           (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                           (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0"))
                           (rule "array2seqDef" (formula "38") (term "1,1,0") (inst "u=u"))
                           (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "37"))
                           (rule "array2seqDef" (formula "38") (term "0,1,0") (inst "u=u"))
                           (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                           (rule "simplifySelectOfMemset" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=java_lang_Object_created__35"))
                           (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "8") (term "0,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "4"))
                           (rule "simplifySelectOfMemset" (formula "4"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "simplifySelectOfStore" (formula "4"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "simplifySelectOfStore" (formula "4"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "simplifySelectOfStore" (formula "4"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "simplifySelectOfCreate" (formula "4"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                           (rule "castDel" (formula "4") (term "1,0"))
                           (rule "eqSymm" (formula "4") (term "0,0"))
                           (rule "sortsDisjointModuloNull" (formula "4") (term "0,0"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "8") (term "0,0,0,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "37") (term "1,1,1,1") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "38") (term "1,1,1,1,1,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "simplifySelectOfMemset" (formula "34"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "simplifySelectOfMemset" (formula "2"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "simplifySelectOfMemset" (formula "29"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                           (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "37") (term "1,1,1,1,1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "36") (term "1,1,1,1") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "19"))
                           (rule "applyEq" (formula "16") (term "0,0,1,1,0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "17") (term "0,0,1,1,0,0,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "18") (term "1") (ifseqformula "38"))
                           (rule "applyEq" (formula "19") (term "1") (ifseqformula "38"))
                           (rule "pullOutSelect" (formula "36") (term "0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_4"))
                           (rule "applyEq" (formula "37") (term "1,2,0,0") (ifseqformula "36"))
                           (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "eqSymm" (formula "36") (term "0,0"))
                           (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "simplifySelectOfStore" (formula "36"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "50")))
                           (rule "simplifySelectOfMemset" (formula "36"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                           (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "3"))
                           (rule "applyEq" (formula "37") (term "1,2,2,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "34") (term "1,2,2,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,0"))
                           (rule "times_zero_1" (formula "3") (term "0"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "25"))
                           (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "1,0"))
                           (rule "times_zero_1" (formula "25") (term "0"))
                           (rule "leq_literals" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "applyEq" (formula "26") (term "1,2,2,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "3") (term "1,2,1,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "25") (term "1,2,1,0,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "1") (term "1,2,2,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "39") (term "1,0,0,1,1,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                           (rule "eqSeqDef" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "getOfSeqDef" (formula "36") (term "1,1,0"))
                           (rule "castDel" (formula "36") (term "1,1,1,0"))
                           (rule "castDel" (formula "36") (term "2,1,1,0"))
                           (rule "add_zero_right" (formula "36") (term "0,2,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0"))
                           (rule "lenOfSeqDef" (formula "35") (term "1"))
                           (rule "polySimp_elimSub" (formula "35") (term "1,1"))
                           (rule "times_zero_2" (formula "35") (term "1,1,1"))
                           (rule "add_zero_right" (formula "35") (term "1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,1,1,0"))
                           (rule "apply_eq_monomials" (formula "36") (term "1,0,1,0,0") (ifseqformula "35"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "1,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,1,0,1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1,1,0,0"))
                           (rule "elementOfArrayRange" (formula "34") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "simplifySelectOfCreate" (formula "34"))
                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                           (rule "applyEqReverse" (formula "36") (term "0,1,0,0,0,1,0") (ifseqformula "34"))
                           (rule "applyEqReverse" (formula "35") (term "1,2,0,0,0") (ifseqformula "34"))
                           (rule "applyEqReverse" (formula "36") (term "1,2,0,0,0,1,0") (ifseqformula "34"))
                           (rule "applyEqReverse" (formula "35") (term "0,1,0,0,0") (ifseqformula "34"))
                           (rule "hideAuxiliaryEq" (formula "34"))
                           (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "simplifySelectOfCreate" (formula "31"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "48")))
                           (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "30") (term "1,1,2,0,1,0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "30") (term "1,0,1,0,1,0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "simplifySelectOfCreate" (formula "2"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                           (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "elementOfArrayRange" (formula "25") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "simplifySelectOfCreate" (formula "25"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "45")))
                           (rule "applyEqReverse" (formula "29") (term "1,1,2,1,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "11") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "29") (term "1,0,1,1,0,1,1,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "13") (term "0,0,0,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "31") (term "0,0,0,1") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "32") (term "1,1,1,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "31") (term "0,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "31") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "narrowSelectArrayType" (formula "13") (term "1,1,1,0") (ifseqformula "4") (ifseqformula "38"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_12"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfArrayRange" (formula "1") (term "0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSeqDef2" (formula "30") (inst "iv=iv") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_13"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "11") (term "1,2,0,0,1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "14") (term "1,2,0,1,0,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "13") (term "0,1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "13") (term "1,2,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "14") (term "0,1,0,1,0,0,1,0") (ifseqformula "1"))
                           (rule "nnf_imp2or" (formula "32") (term "0"))
                           (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                           (rule "eqSymm" (formula "10"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,0,0"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "13") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "nnf_imp2or" (formula "35") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "nnf_imp2or" (formula "33") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                           (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "nnf_notAnd" (formula "35") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                           (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "20") (inst "iv=iv"))
                           (rule "andLeft" (formula "20"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                           (rule "nnf_imp2or" (formula "10") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "31") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "34") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                           (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                           (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "10") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "ifthenelse_split" (formula "15") (term "1"))
                           (branch "self.unsigned.length ≥ 1 TRUE"
                              (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_left" (formula "35") (term "0,1,1,0,0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "replace_known_left" (formula "17") (term "0,1,1,0,0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "22") (ifseqformula "7"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "23"))
                              (rule "close" (formula "38") (ifseqformula "1"))
                           )
                           (branch "self.unsigned.length ≥ 1 FALSE"
                              (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "replace_known_right" (formula "34") (term "0,1,1,0,0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_right" (formula "16") (term "0,1,1,0,0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_geqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_or_tautInEq0" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0"))
                              (rule "qeq_literals" (formula "35") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                              (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
                              (rule "qeq_literals" (formula "17") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "8"))
                              (rule "andLeft" (formula "21"))
                              (rule "notLeft" (formula "22"))
                              (rule "close" (formula "36") (ifseqformula "2"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "eqSymm" (formula "8") (term "1,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "eqSymm" (formula "23") (term "1,0"))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "28"))
                        (rule "eqSymm" (formula "27"))
                        (rule "eqSymm" (formula "26"))
                        (rule "eqSymm" (formula "10"))
                        (rule "eqSymm" (formula "25"))
                        (rule "eqSymm" (formula "12"))
                        (rule "eqSymm" (formula "14"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                        (rule "inEqSimp_ltRight" (formula "35"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                        (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "37") (inst "i=i_1"))
                        (rule "greater_literals" (formula "37") (term "0,1"))
                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")))
                        (rule "sub_literals" (formula "37") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "allRight" (formula "37") (inst "sk=i_1_14"))
                        (rule "impRight" (formula "37"))
                        (rule "notRight" (formula "38"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "23"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "nonNull" (formula "21") (inst "i=i_1"))
                        (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "38")))
                        (rule "greater_literals" (formula "21") (term "0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "38"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "35") (term "0,0,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "35") (term "1,0"))
                        (rule "array2seqDef" (formula "13") (term "1,0,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                        (rule "array2seqDef" (formula "28") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "28") (term "1,0"))
                        (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "31"))
                        (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
                        (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "30"))
                        (rule "pullOutSelect" (formula "29") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_13"))
                        (rule "applyEq" (formula "28") (term "1,1,2,0,1,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "28") (term "1,0,1,0,1,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "29"))
                        (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "38")))
                        (rule "eqSymm" (formula "33"))
                        (rule "sortsDisjointModuloNull" (formula "29") (term "0,0,0"))
                        (rule "replace_known_right" (formula "29") (term "0,0,0,0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
                        (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0"))
                        (rule "ifthenelse_negated" (formula "29") (term "0"))
                        (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_7"))
                        (rule "applyEq" (formula "32") (term "0,0,0,1") (ifseqformula "30"))
                        (rule "applyEq" (formula "32") (term "1,1,1,1") (ifseqformula "30"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "30"))
                        (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")))
                        (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "30") (term "0,0,0"))
                        (rule "replace_known_right" (formula "30") (term "1,0,0,0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")))
                        (rule "ifthenelse_negated" (formula "30") (term "0"))
                        (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
                        (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "35"))
                        (rule "array2seqDef" (formula "37") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "37") (term "1,0"))
                        (rule "array2seqDef" (formula "13") (term "0,0,1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "28") (term "1,0,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "28") (term "1,0"))
                        (rule "array2seqDef" (formula "33") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "33") (term "1,1,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "33") (term "0,1,1") (inst "u=u"))
                        (rule "eqSeqDef" (formula "16") (inst "iv=iv"))
                        (rule "andLeft" (formula "16"))
                        (rule "getOfSeqDef" (formula "17") (term "1,1,0"))
                        (rule "castDel" (formula "17") (term "1,1,1,0"))
                        (rule "castDel" (formula "17") (term "2,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "16") (term "1"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                        (rule "times_zero_2" (formula "16") (term "1,1,1"))
                        (rule "add_zero_right" (formula "16") (term "1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                        (rule "applyEq" (formula "17") (term "0,1,0,1,0,0") (ifseqformula "16"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1,1,0,0"))
                        (rule "array2seqDef" (formula "29") (term "0,0,0,1,0") (inst "u=u"))
                        (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "pullOutSelect" (formula "28") (term "0,1,1,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_10"))
                        (rule "applyEq" (formula "29") (term "1,1,2,1,0,0,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "29") (term "1,0,1,1,0,0,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "28"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")))
                        (rule "eqSymm" (formula "29") (term "1,0"))
                        (rule "eqSymm" (formula "35"))
                        (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0"))
                        (rule "replace_known_right" (formula "28") (term "1,0,0,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")))
                        (rule "ifthenelse_negated" (formula "28") (term "0"))
                        (rule "applyEqRigid" (formula "33") (term "0,0,1") (ifseqformula "35"))
                        (rule "applyEq" (formula "36") (term "1") (ifseqformula "35"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_119"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "22") (ifseqformula "42"))
                        (rule "eqSeqDef2" (formula "34") (inst "iv=iv") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "pullOutSelect" (formula "33") (term "1,2,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_7"))
                        (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "33"))
                        (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                        (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "33") (term "0,0,0"))
                        (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")))
                        (rule "ifthenelse_negated" (formula "33") (term "0"))
                        (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                        (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "4"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,0,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "31") (term "1,2,1,0,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "34") (term "1,2,1,0,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                        (rule "applyEq" (formula "34") (term "1,2,1,0,0,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "29") (term "1,2,1,0,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,0"))
                        (rule "times_zero_1" (formula "26") (term "0"))
                        (rule "leq_literals" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEq" (formula "26") (term "1,2,1,0,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "29") (term "1,2,1,0,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "26") (term "1,2,1,0,0,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "36") (term "1,0,0,1,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                        (rule "eqSeqDef2" (formula "32") (inst "iv=iv") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "pullOutSelect" (formula "27") (term "1,2,0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
                        (rule "applyEq" (formula "28") (term "0,1,0,0,1,1,0") (ifseqformula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "38")))
                        (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "27") (term "0,0,0"))
                        (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "40")))
                        (rule "ifthenelse_negated" (formula "27") (term "0"))
                        (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=java_lang_Object_created__17"))
                        (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "29"))
                        (rule "simplifySelectOfMemset" (formula "29"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfStore" (formula "29"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfStore" (formula "29"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfStore" (formula "29"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfCreate" (formula "29"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "41")))
                        (rule "castDel" (formula "29") (term "1,0"))
                        (rule "eqSymm" (formula "29") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "29") (term "0,0"))
                        (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                        (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfMemset" (formula "29"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "simplifySelectOfMemset" (formula "32"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfMemset" (formula "27"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "simplifySelectOfMemset" (formula "30"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "simplifySelectOfMemset" (formula "26"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "30") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfCreate" (formula "29"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "28") (term "1,0,1,0,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "28") (term "1,1,2,0,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "31") (term "1,1") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "32"))
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "13") (term "0,0,1,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "14") (term "0,0,1,1,0,0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                        (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "simplifySelectOfCreate" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "39")))
                        (rule "hideAuxiliaryEq" (formula "31"))
                        (rule "elementOfArrayRange" (formula "27") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfCreate" (formula "27"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "38")))
                        (rule "applyEqReverse" (formula "28") (term "1,2,0,0,1,1,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "0,1,0,0,1,1,0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "elementOfArrayRange" (formula "28") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "simplifySelectOfCreate" (formula "28"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "37")))
                        (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "elementOfArrayRange" (formula "26") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "simplifySelectOfCreate" (formula "26"))
                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")))
                        (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,2,1,0,1,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "11") (term "0,1,1,1,0,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,1,1,0,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "27") (term "1,0,1,1,0,1,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "10") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                        (rule "eqSymm" (formula "10"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,0,0,0"))
                        (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "notLeft" (formula "10"))
                        (rule "narrowSelectArrayType" (formula "17") (term "1,1,1,0") (ifseqformula "5") (ifseqformula "37"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "27") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "replaceKnownSelect_taclet11002010_1" (formula "27") (term "1,0,0,1,0,1"))
                        (rule "replaceKnownSelect_taclet11002010_1" (formula "27") (term "0,1,1,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_25" (formula "27") (term "1,0,0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_25" (formula "27") (term "0,1,1,0,0,1"))
                        (rule "replaceKnownSelect_taclet11002010_0" (formula "27") (term "1,0,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet11002010_0" (formula "27") (term "0,1,1,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet11002010_5" (formula "27") (term "0,0,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_19" (formula "27") (term "1,0,0,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_19" (formula "27") (term "0,1,1,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_21" (formula "27") (term "0,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet11002010_2" (formula "27") (term "0,1,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet11002010_1" (formula "27") (term "0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet11002010_2" (formula "27") (term "1,0,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet11002010_2" (formula "27") (term "0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet11002010_0" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_27" (formula "27") (term "0,1,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_25" (formula "27") (term "0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_27" (formula "27") (term "1,0,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_27" (formula "27") (term "0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_19" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "28"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "28"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "29"))
                        (rule "notLeft" (formula "27"))
                        (rule "notLeft" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "32"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_7"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet11002010_7" (formula "1") (term "0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11002010_12" (formula "1") (term "0,0,1,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "13") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "34"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "33") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_notAnd" (formula "32") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "33") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                        (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                        (rule "andLeft" (formula "19"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "7"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "notLeft" (formula "22"))
                        (rule "andLeft" (formula "20"))
                        (rule "notLeft" (formula "22"))
                        (rule "notLeft" (formula "21"))
                        (rule "andLeft" (formula "20"))
                        (rule "notLeft" (formula "21"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "notLeft" (formula "20"))
                        (rule "notLeft" (formula "20"))
                        (rule "narrowSelectArrayType" (formula "15") (term "2,0,1,0,0") (ifseqformula "5") (ifseqformula "43"))
                        (rule "narrowSelectArrayType" (formula "16") (term "2,0,1,0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                        (rule "narrowSelectArrayType" (formula "13") (term "2,0,0,1,1,0") (ifseqformula "5") (ifseqformula "43"))
                        (rule "nonNull" (formula "25") (inst "i=i_1"))
                        (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "greater_literals" (formula "25") (term "0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "andLeft" (formula "25"))
                        (rule "notLeft" (formula "25"))
                        (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "40"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "24") (inst "i=i_1"))
                        (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "greater_literals" (formula "24") (term "0,1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "notLeft" (formula "24"))
                        (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "40"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "23") (inst "i=i_1"))
                        (rule "greater_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "40"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "22") (inst "i=i_1"))
                        (rule "greater_literals" (formula "22") (term "0,1"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")))
                        (rule "sub_literals" (formula "22") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "47"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "21") (inst "i=i_1"))
                        (rule "greater_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "48")))
                        (rule "sub_literals" (formula "21") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "48"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "20") (inst "i=i_1"))
                        (rule "greater_literals" (formula "20") (term "0,1"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "49")))
                        (rule "sub_literals" (formula "20") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "49"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "ifthenelse_split" (formula "15") (term "1"))
                        (branch "self.unsigned.length ≥ 1 TRUE"
                           (rule "replace_known_left" (formula "17") (term "0,1,1,0,0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "arrayLengthIsAShort" (formula "16") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "1,0,0,0"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "1,0,1,0,0"))
                           (rule "arrayLengthIsAShort" (formula "18") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "nnf_imp2or" (formula "26") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "commute_or_2" (formula "29") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "commute_or_2" (formula "38") (term "0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "27") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "arrayLengthIsAShort" (formula "37") (term "0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "37") (term "1"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "arrayLengthNotNegative" (formula "37") (term "1"))
                           (rule "commute_or_2" (formula "11") (term "0"))
                           (rule "commute_or_2" (formula "32") (term "0"))
                           (rule "commute_or_2" (formula "34") (term "0"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "commute_or" (formula "38") (term "0,0"))
                           (rule "commute_or_2" (formula "25") (term "0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "39") (term "0,0"))
                           (rule "commute_or" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "24") (term "0"))
                           (rule "commute_or_2" (formula "23") (term "0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,0") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "commute_or" (formula "10") (term "0,0"))
                           (rule "commute_or" (formula "12") (term "0,0"))
                           (rule "commute_or" (formula "11") (term "0,0"))
                           (rule "commute_or" (formula "34") (term "0,0"))
                           (rule "commute_or" (formula "36") (term "0,0"))
                           (rule "commute_or" (formula "35") (term "0,0"))
                           (rule "commute_or" (formula "13") (term "0,0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or" (formula "27") (term "0,0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "lenNonNegative" (formula "19") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "19"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "16"))
                           (rule "leq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "ifthenelse_to_or_right" (formula "20") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or" (formula "20") (term "1,1,0"))
                           (rule "commute_or_2" (formula "20") (term "0,1,0"))
                           (rule "commute_or" (formula "20") (term "0,0,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "1,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0"))
                           (rule "distr_forallAnd" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "commute_or" (formula "21") (term "0"))
                           (rule "shift_paren_or" (formula "20") (term "0"))
                           (rule "commute_or_2" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "commute_or" (formula "21") (term "1,1,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0"))
                           (rule "commute_or" (formula "20") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "cnf_rightDist" (formula "21") (term "0"))
                           (rule "distr_forallAnd" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "commute_or_2" (formula "21") (term "0"))
                           (rule "shift_paren_or" (formula "22") (term "0"))
                           (rule "commute_or_2" (formula "22") (term "0,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "22") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,0"))
                           (rule "add_literals" (formula "22") (term "1,0,1,0"))
                           (rule "times_zero_1" (formula "22") (term "0,1,0"))
                           (rule "leq_literals" (formula "22") (term "1,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "shift_paren_or" (formula "21") (term "0,0"))
                           (rule "commute_or" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "21") (term "0,0"))
                           (rule "add_zero_right" (formula "21") (term "1,1,0,0"))
                           (rule "qeq_literals" (formula "21") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "arrayLengthNotNegative" (formula "19") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "16"))
                           (rule "leq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,1,0,0,0") (ifseqformula "5"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,1,0,1,0,0") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "31"))
                           (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0,1") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                           (rule "allLeft" (formula "35") (inst "t=i_1_14"))
                           (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1"))
                           (rule "leq_literals" (formula "35") (term "0,1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "35") (term "0,1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "notLeft" (formula "35"))
                           (rule "allLeft" (formula "48") (inst "t=i_1_14"))
                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "48") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                           (rule "add_literals" (formula "48") (term "0,0,1"))
                           (rule "leq_literals" (formula "48") (term "0,1"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "notLeft" (formula "48"))
                           (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=arr_121"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "51") (ifseqformula "4"))
                        )
                        (branch "self.unsigned.length ≥ 1 FALSE"
                           (rule "replace_known_right" (formula "16") (term "0,1,1,0,0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_geqRight" (formula "40"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "qeq_literals" (formula "17") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "1,0,1,0,0"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "nnf_imp2or" (formula "26") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                           (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "commute_or_2" (formula "37") (term "0"))
                           (rule "nnf_notAnd" (formula "27") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                           (rule "arrayLengthIsAShort" (formula "36") (term "0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                           (rule "commute_or_2" (formula "11") (term "0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "36") (term "1"))
                           (rule "arrayLengthIsAShort" (formula "36") (term "1"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "commute_or_2" (formula "31") (term "0"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "commute_or_2" (formula "32") (term "0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or" (formula "37") (term "0,0"))
                           (rule "commute_or_2" (formula "24") (term "0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "commute_or" (formula "38") (term "0,0"))
                           (rule "commute_or" (formula "34") (term "0,0"))
                           (rule "commute_or_2" (formula "23") (term "0"))
                           (rule "commute_or_2" (formula "22") (term "0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "commute_or" (formula "11") (term "0,0"))
                           (rule "commute_or" (formula "13") (term "0,0"))
                           (rule "commute_or" (formula "12") (term "0,0"))
                           (rule "commute_or" (formula "33") (term "0,0"))
                           (rule "commute_or" (formula "35") (term "0,0"))
                           (rule "commute_or" (formula "34") (term "0,0"))
                           (rule "commute_or" (formula "14") (term "0,0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "commute_or" (formula "24") (term "0,0"))
                           (rule "lenNonNegative" (formula "19") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "19"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,2,0,0,0") (ifseqformula "6"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "30"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "41") (inst "t=i_1_14"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,1"))
                           (rule "leq_literals" (formula "41") (term "0,1"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "41") (term "0,1"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "notLeft" (formula "41"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_120"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "44") (ifseqformula "3"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "allRight" (formula "31") (inst "sk=f_4"))
                  (rule "allRight" (formula "31") (inst "sk=o_4"))
                  (rule "orRight" (formula "31"))
                  (rule "eqSymm" (formula "13"))
                  (rule "eqSymm" (formula "12"))
                  (rule "eqSymm" (formula "14"))
                  (rule "eqSymm" (formula "11"))
                  (rule "eqSymm" (formula "10"))
                  (rule "eqSymm" (formula "8") (term "1,0"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0"))
                  (rule "inEqSimp_ltRight" (formula "29"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "21"))
                  (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                  (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                  (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "18") (inst "i=i_1"))
                  (rule "greater_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "29")))
                  (rule "sub_literals" (formula "18") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "26") (term "0,0,1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "26") (term "1,0"))
                  (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                  (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "12"))
                  (rule "array2seqDef" (formula "10") (term "0,0,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "10") (term "1,0,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "10") (term "1,0"))
                  (rule "array2seqDef" (formula "26") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "26") (term "1,0"))
                  (rule "eqSeqDef" (formula "13") (inst "iv=iv"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqDef" (formula "13") (term "1"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                  (rule "times_zero_2" (formula "13") (term "1,1,1"))
                  (rule "add_zero_right" (formula "13") (term "1,1"))
                  (rule "getOfSeqDef" (formula "14") (term "1,1,0"))
                  (rule "castDel" (formula "14") (term "1,1,1,0"))
                  (rule "castDel" (formula "14") (term "2,1,1,0"))
                  (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0"))
                  (rule "applyEq" (formula "14") (term "0,1,0,1,0,0") (ifseqformula "13"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0"))
                  (rule "eqSeqDef2" (formula "12") (inst "iv=iv") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_4_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "33"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "2"))
                  (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "23"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "24") (term "1,2,1,0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "1") (term "1,2,1,0,0,2,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,1,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "23"))
                  (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "1,0"))
                  (rule "times_zero_1" (formula "23") (term "0"))
                  (rule "leq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
                  (rule "applyEq" (formula "19") (term "1") (ifseqformula "21"))
                  (rule "applyEq" (formula "25") (term "1,0,0,1,1,0") (ifseqformula "21"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfMemset" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_2"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_4"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_5"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_6"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "nnf_imp2or" (formula "32") (term "0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                  (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                  (rule "Definition_axiom_for_ghostFieldsPre_in_verif_selectvoting_system_core_MixServer" (formula "30") (term "0") (inst "i=i_1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "eqSymm" (formula "36"))
                  (rule "eqSymm" (formula "35"))
                  (rule "eqSymm" (formula "34"))
                  (rule "eqSymm" (formula "33"))
                  (rule "eqSymm" (formula "31") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                  (rule "apply_eq_monomials" (formula "31") (term "1,0,0,1,0,0") (ifseqformula "35"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "34") (term "1,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "34") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "34"))
                  (rule "array2seqDef" (formula "33") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "33"))
                  (rule "array2seqDef" (formula "31") (term "0,0,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "31") (term "1,0,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "31") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "31") (term "1,0"))
                  (rule "array2seqDef" (formula "34") (term "0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "34") (term "0,1,1") (inst "u=u"))
                  (rule "eqSeqDef2" (formula "34") (inst "iv=iv") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "eqSeqDef2" (formula "33") (inst "iv=iv") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_5"))
                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "32"))
                  (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                  (rule "eqSymm" (formula "35"))
                  (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "32") (term "0,0,0"))
                  (rule "replace_known_right" (formula "32") (term "1,0,0,0") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                  (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                  (rule "ifthenelse_negated" (formula "32") (term "0"))
                  (rule "pullOutSelect" (formula "33") (term "1,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_10"))
                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "31") (term "1,1,2,0,1,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "31") (term "1,0,1,0,1,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "33"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                  (rule "eqSymm" (formula "35"))
                  (rule "eqSymm" (formula "31") (term "1,0"))
                  (rule "eqSymm" (formula "36"))
                  (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "33") (term "0,0,0"))
                  (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                  (rule "eqSeqDef" (formula "31") (term "1,0") (inst "iv=iv"))
                  (rule "getOfSeqDef" (formula "31") (term "1,1,0,1,1,0"))
                  (rule "castDel" (formula "31") (term "2,1,1,0,1,1,0"))
                  (rule "castDel" (formula "31") (term "1,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "31") (term "0,2,1,1,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "31") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "31") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "31") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,0"))
                  (rule "mul_literals" (formula "31") (term "1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "31") (term "1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,1,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0,1,0"))
                  (rule "pullOutSelect" (formula "31") (term "0,1,1,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_8"))
                  (rule "applyEq" (formula "32") (term "1,1,2,1,0,0,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "1,1,2,1,0,0,0,1,0,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "1,1,2,1,0,0,0,1,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "1,0,1,1,0,0,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "1,0,1,1,0,0,0,1,0,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "1,0,1,1,0,0,0,1,0,1,1,0") (ifseqformula "31"))
                  (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                  (rule "eqSymm" (formula "36"))
                  (rule "sortsDisjointModuloNull" (formula "31") (term "0,0,0"))
                  (rule "replace_known_right" (formula "31") (term "1,0,0,0") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                  (rule "ifthenelse_negated" (formula "31") (term "0"))
                  (rule "dismissNonSelectedField" (formula "31") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "31") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "36"))
                  (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "33"))
                  (rule "simplifySelectOfMemset" (formula "33"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "simplifySelectOfStore" (formula "33"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "simplifySelectOfStore" (formula "33"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "simplifySelectOfStore" (formula "33"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "simplifySelectOfCreate" (formula "33"))
                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "44")))
                  (rule "castDel" (formula "33") (term "1,0"))
                  (rule "eqSymm" (formula "33") (term "0,0"))
                  (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                  (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "44")))
                  (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                  (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "33"))
                  (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "33"))
                  (rule "hideAuxiliaryEq" (formula "33"))
                  (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "simplifySelectOfMemset" (formula "33"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "simplifySelectOfMemset" (formula "31"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "simplifySelectOfMemset" (formula "34"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                  (rule "elementOfArrayRange" (formula "33") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "simplifySelectOfCreate" (formula "33"))
                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "43")))
                  (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "33"))
                  (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "33"))
                  (rule "hideAuxiliaryEq" (formula "33"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "36"))
                  (rule "eqSymm" (formula "21"))
                  (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "18") (term "0,0,1,1,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "20") (term "1") (ifseqformula "21"))
                  (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "simplifySelectOfCreate" (formula "31"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")))
                  (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0,0,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0,0,0,1,0,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0,0,0,1,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,1,2,1,0,0,0,1,0,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,1,2,1,0,0,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "31") (term "1,1,2,1,0,0,0,1,0,1,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "16") (term "0,1,1,0,0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "eqSymm" (formula "33"))
                  (rule "applyEq" (formula "18") (term "0,0,1,1,0,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "20") (term "1") (ifseqformula "33"))
                  (rule "applyEq" (formula "34") (term "1") (ifseqformula "33"))
                  (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "simplifySelectOfCreate" (formula "31"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")))
                  (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "30") (term "1,0,1,1,1,0,1,1,0,1,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,1,1,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "applyEqReverse" (formula "16") (term "0,1,1,0,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,1,1,0,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "29") (term "1,1,1,1,1,0,1,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "29") (term "1,0,0,0,1,0,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "29") (term "1,0,1,1,0,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "eqSymm" (formula "31"))
                  (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "18") (term "0,0,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "1") (ifseqformula "31"))
                  (rule "pullOutSelect" (formula "29") (term "1,2,0,0,0,0,1,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_7"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,1,0,1,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "30") (term "1,2,0,0,0,0,0,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "30") (term "1,2,0,0,0,0,1,0,0,1,1,0") (ifseqformula "29"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")))
                  (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet102010_15" (formula "29") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_20" (formula "29") (term "0,0,1,0,0"))
                  (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "sortsDisjointModuloNull" (formula "29") (term "0,0"))
                  (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                  (rule "simplifySelectOfMemset" (formula "29"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                  (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfCreate" (formula "29"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                  (rule "applyEqReverse" (formula "30") (term "1,2,0,0,0,0,0,1,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "1,2,0,0,0,0,1,0,0,1,1,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "1,2,0,0,0,0,1,0,1,1,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,0,1,0,1,1,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "29"))
                  (rule "hideAuxiliaryEq" (formula "29"))
                  (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "15") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "37")) (ifInst ""  (formula "10")))
                  (rule "eqSymm" (formula "15"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,0"))
                  (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "17"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "17"))
                  (rule "notLeft" (formula "16"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "narrowSelectArrayType" (formula "22") (term "1,1,1,0") (ifseqformula "10") (ifseqformula "42"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "35"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "34"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "18") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")) (ifInst ""  (formula "38")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                  (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "36"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "commute_and" (formula "8") (term "0,0,0"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "commute_and" (formula "8") (term "1,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "12"))
                  (rule "andLeft" (formula "23"))
                  (rule "notLeft" (formula "24"))
                  (rule "andLeft" (formula "23"))
                  (rule "notLeft" (formula "24"))
                  (rule "andLeft" (formula "23"))
                  (rule "notLeft" (formula "24"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "notLeft" (formula "25"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "narrowSelectArrayType" (formula "20") (term "2,0,1,0,0") (ifseqformula "10") (ifseqformula "45"))
                  (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0,1,0") (ifseqformula "10") (ifseqformula "45"))
                  (rule "narrowSelectArrayType" (formula "18") (term "2,0,0,1,1,0") (ifseqformula "10") (ifseqformula "45"))
                  (rule "nonNull" (formula "28") (inst "i=i_1"))
                  (rule "greater_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "42"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "27") (inst "i=i_1"))
                  (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "greater_literals" (formula "27") (term "0,1"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "27"))
                  (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "42"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "26") (inst "i=i_1"))
                  (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "greater_literals" (formula "26") (term "0,1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "andLeft" (formula "26"))
                  (rule "notLeft" (formula "26"))
                  (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "42"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "25") (inst "i=i_1"))
                  (rule "greater_literals" (formula "25") (term "0,1"))
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "50")))
                  (rule "sub_literals" (formula "25") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "50"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "24") (inst "i=i_1"))
                  (rule "greater_literals" (formula "24") (term "0,1"))
                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                  (rule "sub_literals" (formula "24") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "48"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                  (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "23") (inst "i=i_1"))
                  (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                  (rule "greater_literals" (formula "23") (term "0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "49"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                  (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "commute_or_2" (formula "26") (term "0"))
                  (rule "Contract_axiom_for_ghostFieldsNonNull_in_MixServer" (formula "32") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
                  (rule "wellFormedAnonEQ" (formula "32") (term "0") (ifseqformula "31"))
                  (rule "wellFormedStorePrimitive" (formula "32") (term "0,0"))
                  (rule "replaceKnownSelect_taclet102010_12" (formula "32") (term "0,1,1,0,0,1,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_12" (formula "32") (term "1,0,0,1,0,1,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_25" (formula "32") (term "0,1,1,0,0,1,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_25" (formula "32") (term "1,0,0,1,0,1,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_13" (formula "32") (term "0,1,1,0,0,1,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_13" (formula "32") (term "1,0,0,1,0,1,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_29" (formula "32") (term "0,1,1,0,0,1,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_29" (formula "32") (term "1,0,0,1,0,1,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_14" (formula "32") (term "0,1,1,0,0,1,0,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_12" (formula "32") (term "0,0,1,0,0,0,0,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_14" (formula "32") (term "1,0,0,1,0,1,0,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_14" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet102010_13" (formula "32") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_27" (formula "32") (term "0,1,1,0,0,1,0,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_25" (formula "32") (term "0,0,1,0,0,0,0,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_27" (formula "32") (term "1,0,0,1,0,1,0,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_27" (formula "32") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_29" (formula "32") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
                  (rule "eqSymm" (formula "32") (term "1"))
                  (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "48")) (ifInst ""  (formula "47")) (ifInst ""  (formula "49")))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0,0,1"))
                  (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0,1") (ifseqformula "36"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,1") (ifseqformula "37"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1"))
                  (rule "wellFormedMemsetArrayObject" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "wellFormedStorePrimitive" (formula "32") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "32") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "32") (term "0,0"))
                  (rule "wellFormedCreate" (formula "32") (term "0,0"))
                  (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet102010_15" (formula "1") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_20" (formula "1") (term "0,0,1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                  (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "57"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "replaceKnownSelect_taclet102010_15" (formula "1") (term "0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_20" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "35") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i_2"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "replaceKnownSelect_taclet102010_12" (formula "35") (term "1,0,0,1,0,1"))
                  (rule "replaceKnownSelect_taclet102010_38" (formula "35") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet102010_12" (formula "35") (term "0,1,1,0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_25" (formula "35") (term "1,0,0,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_41" (formula "35") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_25" (formula "35") (term "0,1,1,0,0,1"))
                  (rule "replaceKnownSelect_taclet102010_13" (formula "35") (term "1,0,0,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet102010_34" (formula "35") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet102010_13" (formula "35") (term "0,1,1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_29" (formula "35") (term "1,0,0,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_37" (formula "35") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_29" (formula "35") (term "0,1,1,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet102010_12" (formula "35") (term "0,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet102010_14" (formula "35") (term "0,1,1,0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet102010_14" (formula "35") (term "1,0,0,1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet102010_14" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet102010_13" (formula "35") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_25" (formula "35") (term "0,0,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_27" (formula "35") (term "0,1,1,0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_27" (formula "35") (term "1,0,0,1,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_27" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet102010_29" (formula "35") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "notLeft" (formula "36"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "notLeft" (formula "37"))
                  (rule "andLeft" (formula "35"))
                  (rule "notLeft" (formula "37"))
                  (rule "notLeft" (formula "36"))
                  (rule "notLeft" (formula "35"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                  (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                  (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "41"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "cut_direct" (formula "57") (term "0,0"))
                  (branch "CUT: o_4 = null TRUE"
                     (builtin "One Step Simplification" (formula "58"))
                     (rule "false_right" (formula "58"))
                     (rule "replace_known_left" (formula "9") (term "0,1,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "9") (term "1,0,0"))
                     (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "9"))
                     (rule "hideAuxiliaryEq" (formula "9"))
                     (rule "applyEqRigid" (formula "6") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "55"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "6") (term "0,0"))
                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "54"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "4") (term "1,0,0"))
                     (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3") (term "1,0,0"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "52"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3") (term "1,0,0"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "51"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "eqSymm" (formula "50"))
                     (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "closeTrue" (formula "50"))
                  )
                  (branch "CUT: o_4 = null FALSE"
                     (builtin "One Step Simplification" (formula "58"))
                     (rule "notRight" (formula "58"))
                     (rule "replace_known_right" (formula "9") (term "0,1,1,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEqReverse" (formula "9") (term "0,0,1,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "hideAuxiliaryEq" (formula "8"))
                     (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                     (rule "andLeft" (formula "22"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "ifthenelse_split" (formula "20") (term "1"))
                     (branch "self.unsigned.length ≥ 1 TRUE"
                        (rule "replace_known_left" (formula "22") (term "0,1,1,0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "21") (term "1,0,0,0"))
                        (rule "arrayLengthIsAShort" (formula "22") (term "1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthIsAShort" (formula "22") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "1,0,1,0,0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                        (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                        (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "nnf_imp2or" (formula "37") (term "0"))
                        (rule "nnf_imp2or" (formula "36") (term "0"))
                        (rule "nnf_imp2or" (formula "35") (term "0"))
                        (rule "commute_or" (formula "42") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "38") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "36") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                        (rule "commute_or" (formula "29") (term "0,0"))
                        (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                        (rule "arrayLengthNotNegative" (formula "40") (term "1"))
                        (rule "arrayLengthIsAShort" (formula "40") (term "0"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "commute_or" (formula "44") (term "0,0"))
                        (rule "commute_or_2" (formula "24") (term "0"))
                        (rule "lenNonNegative" (formula "23") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                        (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "20"))
                        (rule "leq_literals" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_4 = java.lang.Object::<created> ∧ o_4 = x_arr_arr_2 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")))
                           (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "9"))
                           (rule "hideAuxiliaryEq" (formula "9"))
                           (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "53") (ifseqformula "1"))
                        )
                        (branch "f_4 = java.lang.Object::<created> ∧ o_4 = x_arr_arr_2 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_or" (formula "17") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "27") (term "0"))
                           (rule "ifthenelse_to_or_right" (formula "37") (term "0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,1,0"))
                           (rule "commute_or_2" (formula "26") (term "0"))
                           (rule "commute_or_2" (formula "25") (term "0"))
                           (rule "commute_or_2" (formula "36") (term "0"))
                           (rule "commute_or_2" (formula "35") (term "0"))
                           (rule "commute_or_2" (formula "34") (term "0"))
                           (rule "commute_or" (formula "23") (term "0,0"))
                           (rule "ifthenelse_to_or_right" (formula "37") (term "1,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,1,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,1,0,1,1,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,1,0,1,1,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "commute_or" (formula "14") (term "0,0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "commute_or" (formula "27") (term "0,0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "commute_or" (formula "36") (term "0,0"))
                           (rule "commute_or" (formula "35") (term "0,0"))
                           (rule "commute_or" (formula "34") (term "0,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,1") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "arrayLengthIsAShort" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                           (rule "leq_literals" (formula "20") (term "0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,0,0,0") (ifseqformula "9"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,1,0,1,0,0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "commute_or" (formula "41") (term "1,1,0,1,1,0"))
                           (rule "commute_or_2" (formula "41") (term "0,1,0,1,1,0"))
                           (rule "ifthenelse_to_or_right" (formula "26") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or_2" (formula "26") (term "0"))
                           (rule "commute_or_2" (formula "26") (term "0,1,0"))
                           (rule "commute_or" (formula "26") (term "1,1,0"))
                           (rule "commute_or" (formula "26") (term "0,0,1,0"))
                           (rule "cnf_rightDist" (formula "26") (term "1,1,0"))
                           (rule "cnf_rightDist" (formula "26") (term "0"))
                           (rule "distr_forallAnd" (formula "26"))
                           (rule "andLeft" (formula "26"))
                           (rule "commute_or" (formula "27") (term "0"))
                           (rule "shift_paren_or" (formula "26") (term "0"))
                           (rule "commute_or_2" (formula "26") (term "0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "commute_or" (formula "27") (term "1,1,0"))
                           (rule "shift_paren_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "26") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "cnf_rightDist" (formula "27") (term "0"))
                           (rule "distr_forallAnd" (formula "27"))
                           (rule "andLeft" (formula "27"))
                           (rule "commute_or_2" (formula "27") (term "0"))
                           (rule "shift_paren_or" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "28") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "0,1,0"))
                           (rule "leq_literals" (formula "28") (term "1,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "shift_paren_or" (formula "27") (term "0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0,0"))
                           (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                           (rule "qeq_literals" (formula "27") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "commute_or" (formula "41") (term "0,0,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "41") (term "1,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "41") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "41") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "41") (term "1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "41") (term "0,0,0,1,1,0"))
                           (rule "commute_or" (formula "41") (term "1,1,1,0,1,1,0"))
                           (rule "commute_and" (formula "41") (term "0,1,0"))
                           (rule "cnf_rightDist" (formula "41") (term "1,0,1,1,0"))
                           (rule "commute_or_2" (formula "41") (term "0,1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "41") (term "1,1,0,1,1,0"))
                           (rule "commute_or_2" (formula "41") (term "0,1,1,0,1,1,0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_4 = java.lang.Object::<transient> ∧ o_4 = x_arr_arr_2 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "8"))
                              (rule "hideAuxiliaryEq" (formula "8"))
                              (rule "eqSymm" (formula "66"))
                              (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEq" (formula "65") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "60") (ifseqformula "1"))
                           )
                           (branch "f_4 = java.lang.Object::<transient> ∧ o_4 = x_arr_arr_2 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "shift_paren_or" (formula "40") (term "0,0,0,0,1,1,0"))
                              (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,1,0"))
                              (rule "cut_direct" (formula "48") (term "1"))
                              (branch "CUT: o_4 = x_arr_arr_2 TRUE"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                 (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "eqSymm" (formula "66"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "48")))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "close" (formula "61") (ifseqformula "2"))
                              )
                              (branch "CUT: o_4 = x_arr_arr_2 FALSE"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "false_right" (formula "49"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                     (branch "self.unsigned.length ≥ 1 FALSE"
                        (rule "replace_known_right" (formula "21") (term "0,1,1,0,0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_geqRight" (formula "41"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_or_tautInEq0" (formula "22") (term "0,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,0"))
                        (rule "qeq_literals" (formula "22") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthIsAShort" (formula "21") (term "1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "arrayLengthIsAShort" (formula "21") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "arrayLengthNotNegative" (formula "21") (term "1,0,0,0"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "1,0,1,0,0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                        (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "nnf_imp2or" (formula "36") (term "0"))
                        (rule "nnf_imp2or" (formula "35") (term "0"))
                        (rule "nnf_imp2or" (formula "34") (term "0"))
                        (rule "commute_or" (formula "41") (term "0,0"))
                        (rule "commute_or_2" (formula "19") (term "0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "37") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "36") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "34") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                        (rule "commute_or" (formula "28") (term "0,0"))
                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                        (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,0,1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "39") (term "0"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "arrayLengthNotNegative" (formula "39") (term "1"))
                        (rule "arrayLengthIsAShort" (formula "39") (term "1"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "arrayLengthNotNegative" (formula "39") (term "0"))
                        (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                        (rule "commute_or" (formula "43") (term "0,0"))
                        (rule "lenNonNegative" (formula "23") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "f_4 = java.lang.Object::<created> ∧ o_4 = x_arr_arr_2 TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                           (rule "hideAuxiliaryEq" (formula "10"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                           (rule "close" (formula "52") (ifseqformula "2"))
                        )
                        (branch "f_4 = java.lang.Object::<created> ∧ o_4 = x_arr_arr_2 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "commute_or" (formula "18") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "commute_or_2" (formula "26") (term "0"))
                           (rule "ifthenelse_to_or_right" (formula "36") (term "0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,0,0,1,0"))
                           (rule "commute_or_2" (formula "25") (term "0"))
                           (rule "commute_or_2" (formula "24") (term "0"))
                           (rule "commute_or_2" (formula "35") (term "0"))
                           (rule "commute_or_2" (formula "34") (term "0"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "ifthenelse_to_or_right" (formula "36") (term "1,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,1,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0,1,1,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0,1,1,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "commute_or" (formula "17") (term "0,0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "commute_or" (formula "24") (term "0,0"))
                           (rule "commute_or" (formula "35") (term "0,0"))
                           (rule "commute_or" (formula "34") (term "0,0"))
                           (rule "commute_or" (formula "33") (term "0,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,1") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "commute_or" (formula "38") (term "1,1,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,0,1,0,0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,1,0,0,0") (ifseqformula "10"))
                           (rule "commute_or_2" (formula "40") (term "0,1,0,1,1,0"))
                           (rule "commute_or" (formula "40") (term "0,0,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "40") (term "1,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "40") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "40") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "40") (term "1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "40") (term "0,0,0,1,1,0"))
                           (rule "commute_or" (formula "40") (term "1,1,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "40") (term "1,0,1,1,0"))
                           (rule "commute_or_2" (formula "40") (term "0,1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "40") (term "1,1,0,1,1,0"))
                           (rule "commute_or_2" (formula "40") (term "0,1,1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "40") (term "0,0,0,0,1,1,0"))
                           (rule "shift_paren_or" (formula "40") (term "0,0,1,0,1,1,0"))
                           (rule "commute_or" (formula "40") (term "0,0,0,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "commute_or" (formula "40") (term "0,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "40") (term "0,0,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "qeq_literals" (formula "40") (term "1,0,0,1,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_4 = java.lang.Object::<transient> ∧ o_4 = x_arr_arr_2 TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "9"))
                              (rule "hideAuxiliaryEq" (formula "9"))
                              (rule "eqSymm" (formula "65"))
                              (rule "applyEqRigid" (formula "7") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "31"))
                              (rule "eqSymm" (formula "64"))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                              (rule "close" (formula "58") (ifseqformula "2"))
                           )
                           (branch "f_4 = java.lang.Object::<transient> ∧ o_4 = x_arr_arr_2 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "cut_direct" (formula "47") (term "1"))
                              (branch "CUT: o_4 = x_arr_arr_2 TRUE"
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
                                 (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "eqSymm" (formula "65"))
                                 (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "47")))
                                 (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                 (rule "close" (formula "60") (ifseqformula "3"))
                              )
                              (branch "CUT: o_4 = x_arr_arr_2 FALSE"
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (_msg = null)"
               (builtin "One Step Simplification" (formula "19"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "2"))
         (rule "close" (formula "19") (ifseqformula "1"))
      )
   )
)
(branch "Null Reference (_msg = null)"
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "14"))
   (rule "eqSymm" (formula "18") (term "1,0,0,1,0,1"))
   (rule "eqSymm" (formula "13"))
   (rule "eqSymm" (formula "12"))
   (rule "eqSymm" (formula "11"))
   (rule "eqSymm" (formula "10"))
   (rule "eqSymm" (formula "8") (term "1,0"))
   (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
   (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
   (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "12"))
   (rule "applyEq" (formula "15") (term "1") (ifseqformula "1"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "13"))
   (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
   (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "12") (term "1") (ifseqformula "11"))
   (rule "applyEq" (formula "9") (term "1,1,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "11"))
   (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
   (rule "blockThrow" (formula "17") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "17") (term "1,1,1,1,0,0,0,1") (inst "i=i"))
   (rule "greater_literals" (formula "17") (term "0,1,1,1,1,1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "sub_literals" (formula "17") (term "2,1,0,1,1,1,1,1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
   (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "10"))
   (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "9"))
   (rule "applyEq" (formula "10") (term "1,1,1") (ifseqformula "9"))
   (rule "array2seqDef" (formula "7") (term "1,1,0") (inst "u=u"))
   (rule "eqSymm" (formula "7") (term "1,0"))
   (rule "array2seqDef" (formula "10") (term "0,1,1") (inst "u=u"))
   (rule "array2seqDef" (formula "10") (term "0,1") (inst "u=u"))
   (rule "eqSymm" (formula "10"))
   (rule "array2seqDef" (formula "7") (term "1,0,1,1,0") (inst "u=u"))
   (rule "array2seqDef" (formula "7") (term "0,0,1,1,0") (inst "u=u"))
   (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "eqSeqDef" (formula "9") (inst "iv=iv"))
   (rule "andLeft" (formula "9"))
   (rule "lenOfSeqDef" (formula "9") (term "1"))
   (rule "polySimp_elimSub" (formula "9") (term "1,1"))
   (rule "mul_literals" (formula "9") (term "1,1,1"))
   (rule "add_zero_right" (formula "9") (term "1,1"))
   (rule "getOfSeqDef" (formula "10") (term "1,1,0"))
   (rule "castDel" (formula "10") (term "1,1,1,0"))
   (rule "castDel" (formula "10") (term "2,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,2,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0"))
   (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
   (rule "add_zero_right" (formula "9") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0"))
   (rule "applyEq" (formula "10") (term "0,1,0,1,0,0") (ifseqformula "9"))
   (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "9") (term "0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "0,0,1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "17") (term "0,1,1,1,1,1,0,0,0,1"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1,1,1,1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
   (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "6") (term "0") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "8"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "narrowSelectArrayType" (formula "12") (term "1,1,1,0") (ifseqformula "2") (ifseqformula "22"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
   (rule "commute_or_2" (formula "9") (term "0"))
   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "16") (ifseqformula "4"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "18"))
   (rule "notLeft" (formula "17"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "18"))
   (rule "notLeft" (formula "17"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "17"))
   (rule "notLeft" (formula "16"))
   (rule "narrowSelectArrayType" (formula "11") (term "2,0,1,0,0") (ifseqformula "2") (ifseqformula "26"))
   (rule "narrowSelectArrayType" (formula "9") (term "2,0,0,1,1,0,0") (ifseqformula "2") (ifseqformula "26"))
   (rule "narrowSelectArrayType" (formula "12") (term "2,0,1,0,0,1,0") (ifseqformula "2") (ifseqformula "26"))
   (rule "nonNull" (formula "21") (inst "i=i"))
   (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "greater_literals" (formula "21") (term "0,1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "21"))
   (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "23"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "20") (inst "i=i"))
   (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "greater_literals" (formula "20") (term "0,1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "23"))
   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "19") (inst "i=i"))
   (rule "greater_literals" (formula "19") (term "0,1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "sub_literals" (formula "19") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "notLeft" (formula "19"))
   (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "23"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "18") (inst "i=i"))
   (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "30")))
   (rule "greater_literals" (formula "18") (term "0"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "30"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "17") (inst "i=i"))
   (rule "greater_literals" (formula "17") (term "0,1"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "31")))
   (rule "sub_literals" (formula "17") (term "2,1,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "31"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "16") (inst "i=i"))
   (rule "greater_literals" (formula "16") (term "0,1"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "32")))
   (rule "sub_literals" (formula "16") (term "2,1,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "21") (term "0"))
   (rule "nnf_imp2or" (formula "20") (term "0"))
   (rule "nnf_imp2or" (formula "19") (term "0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_imp2or" (formula "17") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_notAnd" (formula "21") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
   (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
   (rule "mul_literals" (formula "21") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "20") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
   (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "19") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
   (rule "mul_literals" (formula "17") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or_2" (formula "8") (term "0"))
   (rule "commute_or_2" (formula "7") (term "0"))
   (rule "commute_or_2" (formula "12") (term "0"))
   (rule "commute_or" (formula "9") (term "0,0"))
   (rule "arrayLengthIsAShort" (formula "14") (term "0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "arrayLengthNotNegative" (formula "14") (term "0"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
   (rule "arrayLengthIsAShort" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthIsAShort" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "13") (term "1"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
   (rule "andLeft" (formula "16"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
   (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "commute_or_2" (formula "19") (term "0"))
   (rule "arrayLengthIsAShort" (formula "11") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "arrayLengthNotNegative" (formula "11") (term "1,0,0,0"))
   (rule "arrayLengthNotNegative" (formula "12") (term "1,0,1,0,0"))
   (rule "arrayLengthIsAShort" (formula "13") (term "1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "13") (term "1,1"))
   (rule "arrayLengthIsAShort" (formula "14") (term "1,1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "commute_or_2" (formula "21") (term "0"))
   (rule "commute_or_2" (formula "20") (term "0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "commute_or" (formula "8") (term "0,0"))
   (rule "commute_or" (formula "7") (term "0,0"))
   (rule "commute_or" (formula "15") (term "0,0"))
   (rule "commute_or" (formula "22") (term "0,0"))
   (rule "commute_or" (formula "21") (term "0,0"))
   (rule "commute_or" (formula "20") (term "0,0"))
   (rule "lenNonNegative" (formula "14") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
   (rule "ifthenelse_to_or_right" (formula "16") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0"))
   (rule "commute_or" (formula "16") (term "0,0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "commute_or" (formula "16") (term "1,1,0"))
   (rule "commute_or_2" (formula "16") (term "0,1,0"))
   (rule "commute_or" (formula "16") (term "0,0,1,0"))
   (rule "cnf_rightDist" (formula "16") (term "1,1,0"))
   (rule "cnf_rightDist" (formula "16") (term "0"))
   (rule "distr_forallAnd" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "commute_or" (formula "17") (term "0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "commute_or" (formula "17") (term "1,1,0"))
   (rule "shift_paren_or" (formula "16") (term "0,0"))
   (rule "cnf_rightDist" (formula "17") (term "0"))
   (rule "distr_forallAnd" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "commute_or_2" (formula "17") (term "0"))
   (rule "shift_paren_or" (formula "18") (term "0"))
   (rule "commute_or_2" (formula "18") (term "0,0"))
   (rule "shift_paren_or" (formula "17") (term "0,0"))
   (rule "commute_or" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_or_tautInEq1" (formula "17") (term "0,0"))
   (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
   (rule "qeq_literals" (formula "17") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "shift_paren_or" (formula "16") (term "0,0,0"))
   (rule "commute_or" (formula "16") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,1") (ifseqformula "2"))
   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,1") (ifseqformula "2"))
   (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0,1,0,0,0") (ifseqformula "2"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,1,0,1,0,0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "38"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0,1,1") (ifseqformula "2"))
   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "44"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
   (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "true_left" (formula "30"))
   (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "true_left" (formula "28"))
   (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "4"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "5"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "7"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "8"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "throwUnfold" (formula "55") (term "1") (inst "#v0=n"))
   (rule "variableDeclarationAssign" (formula "55") (term "1"))
   (rule "variableDeclaration" (formula "55") (term "1") (newnames "n"))
   (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_NullPointerException,self_0,exc_0,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0"))
   (branch "Post (NullPointerException)"
      (builtin "One Step Simplification" (formula "57"))
      (builtin "One Step Simplification" (formula "43"))
      (rule "andLeft" (formula "43"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0,1,0") (ifseqformula "43"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "46"))
      (rule "andLeft" (formula "45"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "45"))
      (rule "andLeft" (formula "48"))
      (rule "notLeft" (formula "45"))
      (rule "andLeft" (formula "45"))
      (rule "notLeft" (formula "45"))
      (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "50"))
      (builtin "One Step Simplification" (formula "45"))
      (rule "assignment" (formula "65") (term "1"))
      (builtin "One Step Simplification" (formula "65"))
      (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
      (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "43"))
      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
      (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "47"))
      (rule "hideAuxiliaryEq" (formula "47"))
      (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
      (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "48"))
      (rule "hideAuxiliaryEq" (formula "48"))
      (rule "commuteUnion" (formula "43") (term "1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "42"))
      (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "49"))
      (builtin "One Step Simplification" (formula "48"))
      (rule "true_left" (formula "48"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "42"))
      (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "48"))
      (builtin "One Step Simplification" (formula "47"))
      (rule "true_left" (formula "47"))
      (rule "methodCallParamThrow" (formula "65") (term "1"))
      (builtin "One Step Simplification" (formula "65"))
      (rule "tryCatchThrow" (formula "65") (term "1"))
      (rule "ifElseUnfold" (formula "65") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "65") (term "1") (newnames "x"))
      (rule "equality_comparison_simple" (formula "65") (term "1"))
      (builtin "One Step Simplification" (formula "65"))
      (rule "replace_known_right" (formula "65") (term "0,0,1,0") (ifseqformula "51"))
      (builtin "One Step Simplification" (formula "65"))
      (rule "ifElseSplit" (formula "65"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "66"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "66"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "65"))
         (branch "if n instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "65") (term "1") (newnames "e"))
            (rule "reference_type_cast" (formula "65") (term "1"))
            (branch "Normal Execution (n instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "66"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "65") (term "1"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "emptyModality" (formula "65") (term "1"))
               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
               (rule "eqSymm" (formula "65") (term "1,0,0,1"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "65") (term "0") (ifseqformula "11"))
               (rule "nonNull" (formula "65") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
               (rule "sub_literals" (formula "65") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "greater_literals" (formula "65") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
               (rule "nonNull" (formula "65") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
               (rule "greater_literals" (formula "65") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "sub_literals" (formula "65") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "nonNull" (formula "65") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
               (rule "sub_literals" (formula "65") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "greater_literals" (formula "65") (term "0,1,1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "nonNull" (formula "65") (term "1,0,0,0,0,0,0") (inst "i=i"))
               (rule "sub_literals" (formula "65") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "greater_literals" (formula "65") (term "0,1,1,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "nonNull" (formula "65") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
               (rule "greater_literals" (formula "65") (term "0,1,1,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "sub_literals" (formula "65") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
               (rule "nonNull" (formula "65") (term "1,0,0,0,0,0") (inst "i=i"))
               (rule "sub_literals" (formula "65") (term "2,1,0,1,1,1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "greater_literals" (formula "65") (term "0,1,1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "pullOutSelect" (formula "65") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,1,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,1,0,0,0") (ifseqformula "56"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
               (rule "applyEq" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,1,0,0,0,0") (ifseqformula "54"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "62"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
               (rule "applyEq" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "59"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "63"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "60"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "applyEq" (formula "65") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "30"))
               (rule "pullOutSelect" (formula "65") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
               (rule "applyEq" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "61"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "applyEq" (formula "65") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "33"))
               (rule "pullOutSelect" (formula "65") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "66") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "52"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,1,0,0") (ifseqformula "57"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,1,1,1,0,0,1,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
               (rule "applyEq" (formula "66") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,0,1,0,0,0,0") (ifseqformula "53"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,1,0") (ifseqformula "58"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "65") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "66") (term "0,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "65") (term "0,1,0") (ifseqformula "55"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "nnf_imp2or" (formula "65") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "65") (term "0,1,0,0"))
               (rule "nnf_notAnd" (formula "65") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "65") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,1,0"))
               (rule "nnf_imp2or" (formula "65") (term "0,1,0,0,0"))
               (rule "nnf_notAnd" (formula "65") (term "0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "65") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,1,0,0"))
               (rule "nnf_imp2or" (formula "65") (term "0,1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "65") (term "0,1,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "65") (term "0,0,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "65") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "65") (term "0,0,1,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,1,0,0,0"))
               (rule "nnf_notAnd" (formula "65") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "65") (term "0,0,1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "65") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "65") (term "0,0,1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "65") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "65") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "ifthenelse_split" (formula "22") (term "0"))
               (branch "self.unsigned.length ≥ 1 TRUE"
                  (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "replace_known_left" (formula "27") (term "0,1,1,0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_left" (formula "28") (term "0,1,1,0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0"))
                  (rule "add_literals" (formula "27") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "27") (term "0,1,0"))
                  (rule "leq_literals" (formula "27") (term "1,0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "cut_direct" (formula "22") (term "0"))
                  (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null TRUE"
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "applyEq" (formula "25") (term "1,2,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "26") (term "1,2,0,0,0,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "26") (term "0,1,0,0,0,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "22"))
                     (rule "andRight" (formula "63"))
                     (branch "Case 1"
                        (rule "andRight" (formula "63"))
                        (branch "Case 1"
                           (rule "andRight" (formula "63"))
                           (branch "Case 1"
                              (rule "andRight" (formula "63"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "63"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "63"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "63") (inst "sk=i_23"))
                                       (rule "orRight" (formula "63"))
                                       (rule "notRight" (formula "64"))
                                       (rule "orRight" (formula "64"))
                                       (rule "inEqSimp_geqRight" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "65"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_23"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "34")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "63"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "63"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfUnion" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "allLeft" (formula "19") (inst "t=i_23"))
                                       (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                       (rule "leq_literals" (formula "19") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "63") (inst "sk=i_22"))
                                       (rule "orRight" (formula "63"))
                                       (rule "notRight" (formula "64"))
                                       (rule "orRight" (formula "64"))
                                       (rule "inEqSimp_geqRight" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "65"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_22"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "21")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "62"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "62"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfUnion" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "allLeft" (formula "18") (inst "t=i_22"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "63") (inst "sk=i_21"))
                                    (rule "orRight" (formula "63"))
                                    (rule "orRight" (formula "63"))
                                    (rule "notRight" (formula "65"))
                                    (rule "inEqSimp_geqRight" (formula "65"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "65"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "31")))
                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "61"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "61"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "allLeft" (formula "17") (inst "t=i_21"))
                                    (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "17"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "63") (inst "sk=i_20"))
                                 (rule "orRight" (formula "63"))
                                 (rule "orRight" (formula "63"))
                                 (rule "notRight" (formula "65"))
                                 (rule "inEqSimp_geqRight" (formula "65"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "65"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_20"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "54"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "54"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_20"))
                                 (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "closeFalse" (formula "38"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "63") (inst "sk=i_19"))
                              (rule "orRight" (formula "63"))
                              (rule "orRight" (formula "63"))
                              (rule "notRight" (formula "65"))
                              (rule "inEqSimp_geqRight" (formula "65"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "65"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_19"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "5")))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "55"))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "55"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "ifEqualsNull" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "elementOfUnion" (formula "52"))
                              (rule "orRight" (formula "52"))
                              (rule "elementOfSingleton" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "false_right" (formula "52"))
                              (rule "elementOfSingleton" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "false_right" (formula "52"))
                              (rule "allLeft" (formula "40") (inst "t=i_19"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1"))
                              (rule "leq_literals" (formula "40") (term "0,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "63") (inst "sk=i_18"))
                           (rule "orRight" (formula "63"))
                           (rule "orRight" (formula "63"))
                           (rule "notRight" (formula "65"))
                           (rule "inEqSimp_leqRight" (formula "64"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "65"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_18"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "56"))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "56"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "allLeft" (formula "42") (inst "t=i_18"))
                           (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1"))
                           (rule "leq_literals" (formula "42") (term "0,1"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "63") (inst "sk=f_3"))
                        (rule "allRight" (formula "63") (inst "sk=o_3"))
                        (rule "orRight" (formula "63"))
                        (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=f_3_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                        (rule "eqSymm" (formula "65"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬f_3 = java.lang.Object::<created> ∧ o_3 = self_0 ∧ (f_3 = Throwable::$cause ∨ f_3 = Throwable::$message) ∧ (f_3 = Throwable::$cause ∨ o_3 = self_0) ∧ (f_3 = Throwable::$message ∨ o_3 = self_0) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "69"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "66") (term "1,0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "notRight" (formula "66"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "close" (formula "53") (ifseqformula "1"))
                        )
                        (branch " ¬f_3 = java.lang.Object::<created> ∧ o_3 = self_0 ∧ (f_3 = Throwable::$cause ∨ f_3 = Throwable::$message) ∧ (f_3 = Throwable::$cause ∨ o_3 = self_0) ∧ (f_3 = Throwable::$message ∨ o_3 = self_0) FALSE"
                           (rule "close" (formula "66") (ifseqformula "1"))
                        )
                     )
                  )
                  (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null FALSE"
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "narrowSelectArrayType" (formula "25") (term "2,0,0,0") (ifseqformula "9") (ifseqformula "48"))
                     (rule "narrowSelectArrayType" (formula "26") (term "2,0,0,0,0,0,0") (ifseqformula "9") (ifseqformula "48"))
                     (rule "andRight" (formula "64"))
                     (branch "Case 1"
                        (rule "andRight" (formula "64"))
                        (branch "Case 1"
                           (rule "andRight" (formula "64"))
                           (branch "Case 1"
                              (rule "andRight" (formula "64"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "64"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "64"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "64") (inst "sk=i_17"))
                                       (rule "orRight" (formula "64"))
                                       (rule "notRight" (formula "65"))
                                       (rule "orRight" (formula "65"))
                                       (rule "inEqSimp_geqRight" (formula "66"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "66"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_17"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "34")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "64"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "64"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfUnion" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "elementOfSingleton" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "false_right" (formula "53"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "allLeft" (formula "19") (inst "t=i_17"))
                                       (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                       (rule "leq_literals" (formula "19") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "64") (inst "sk=i_16"))
                                       (rule "orRight" (formula "64"))
                                       (rule "notRight" (formula "65"))
                                       (rule "orRight" (formula "65"))
                                       (rule "inEqSimp_geqRight" (formula "66"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "66"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_16"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "21")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "63"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "63"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfUnion" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "elementOfSingleton" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "false_right" (formula "53"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "allLeft" (formula "18") (inst "t=i_16"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "64") (inst "sk=i_15"))
                                    (rule "orRight" (formula "64"))
                                    (rule "notRight" (formula "65"))
                                    (rule "orRight" (formula "65"))
                                    (rule "inEqSimp_leqRight" (formula "65"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "66"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_15"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "31")))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "62"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "62"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "allLeft" (formula "17") (inst "t=i_15"))
                                    (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "17") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "17"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "closeFalse" (formula "17"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "64") (inst "sk=i_14"))
                                 (rule "orRight" (formula "64"))
                                 (rule "orRight" (formula "64"))
                                 (rule "notRight" (formula "66"))
                                 (rule "inEqSimp_leqRight" (formula "65"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "66"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "55"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "55"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_14"))
                                 (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "38") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "38"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "64") (inst "sk=i_13"))
                              (rule "orRight" (formula "64"))
                              (rule "notRight" (formula "65"))
                              (rule "orRight" (formula "65"))
                              (rule "inEqSimp_geqRight" (formula "66"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "66"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_13"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "5")))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "56"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "56"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "ifEqualsNull" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "elementOfUnion" (formula "52"))
                              (rule "orRight" (formula "52"))
                              (rule "elementOfSingleton" (formula "53"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "false_right" (formula "53"))
                              (rule "elementOfSingleton" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "false_right" (formula "52"))
                              (rule "allLeft" (formula "40") (inst "t=i_13"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1"))
                              (rule "leq_literals" (formula "40") (term "0,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "64") (inst "sk=i_12"))
                           (rule "orRight" (formula "64"))
                           (rule "notRight" (formula "65"))
                           (rule "orRight" (formula "65"))
                           (rule "inEqSimp_geqRight" (formula "66"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "66"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "57"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "44") (ifseqformula "57"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "allLeft" (formula "42") (inst "t=i_12"))
                           (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "42") (term "0,0"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "2"))
                           (rule "andLeft" (formula "42"))
                           (rule "inEqSimp_homoInEq1" (formula "42"))
                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                           (rule "add_literals" (formula "42") (term "1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0"))
                           (rule "add_zero_right" (formula "42") (term "0"))
                           (rule "leq_literals" (formula "42"))
                           (rule "closeFalse" (formula "42"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "64") (inst "sk=f_2"))
                        (rule "allRight" (formula "64") (inst "sk=o_2"))
                        (rule "orRight" (formula "64"))
                        (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=f_2_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                        (rule "eqSymm" (formula "66"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬f_2 = java.lang.Object::<created> ∧ o_2 = self_0 ∧ (f_2 = Throwable::$cause ∨ f_2 = Throwable::$message) ∧ (f_2 = Throwable::$cause ∨ o_2 = self_0) ∧ (f_2 = Throwable::$message ∨ o_2 = self_0) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "70"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1,0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "67") (term "0,1") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "notRight" (formula "67"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "close" (formula "54") (ifseqformula "1"))
                        )
                        (branch " ¬f_2 = java.lang.Object::<created> ∧ o_2 = self_0 ∧ (f_2 = Throwable::$cause ∨ f_2 = Throwable::$message) ∧ (f_2 = Throwable::$cause ∨ o_2 = self_0) ∧ (f_2 = Throwable::$message ∨ o_2 = self_0) FALSE"
                           (rule "close" (formula "67") (ifseqformula "1"))
                        )
                     )
                  )
               )
               (branch "self.unsigned.length ≥ 1 FALSE"
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "replace_known_right" (formula "27") (term "0,1,1,0") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_right" (formula "26") (term "0,1,1,0") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_geqRight" (formula "49"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
                  (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "22"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                  (rule "add_zero_right" (formula "27") (term "1,1,0"))
                  (rule "qeq_literals" (formula "27") (term "1,0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                  (rule "add_zero_right" (formula "26") (term "1,1,0"))
                  (rule "qeq_literals" (formula "26") (term "1,0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "cut_direct" (formula "22") (term "0"))
                  (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null TRUE"
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "applyEq" (formula "25") (term "1,2,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "22"))
                     (rule "andRight" (formula "62"))
                     (branch "Case 1"
                        (rule "andRight" (formula "62"))
                        (branch "Case 1"
                           (rule "andRight" (formula "62"))
                           (branch "Case 1"
                              (rule "andRight" (formula "62"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "62"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "62"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "62") (inst "sk=i_11"))
                                       (rule "orRight" (formula "62"))
                                       (rule "orRight" (formula "62"))
                                       (rule "notRight" (formula "64"))
                                       (rule "inEqSimp_leqRight" (formula "63"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "64"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_11"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "62"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "62"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfUnion" (formula "51"))
                                       (rule "orRight" (formula "51"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "elementOfSingleton" (formula "51"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "allLeft" (formula "19") (inst "t=i_11"))
                                       (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "1"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0"))
                                       (rule "add_literals" (formula "19") (term "0"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "62") (inst "sk=i_10"))
                                       (rule "orRight" (formula "62"))
                                       (rule "orRight" (formula "62"))
                                       (rule "notRight" (formula "64"))
                                       (rule "inEqSimp_leqRight" (formula "63"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "64"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "21")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "61"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "61"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfUnion" (formula "51"))
                                       (rule "orRight" (formula "51"))
                                       (rule "elementOfSingleton" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "elementOfSingleton" (formula "51"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "allLeft" (formula "18") (inst "t=i_10"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "62") (inst "sk=i_9"))
                                    (rule "orRight" (formula "62"))
                                    (rule "orRight" (formula "62"))
                                    (rule "notRight" (formula "64"))
                                    (rule "inEqSimp_leqRight" (formula "63"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "30")))
                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "60"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "60"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "elementOfUnion" (formula "51"))
                                    (rule "orRight" (formula "51"))
                                    (rule "elementOfSingleton" (formula "52"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "elementOfSingleton" (formula "51"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "false_right" (formula "51"))
                                    (rule "allLeft" (formula "17") (inst "t=i_9"))
                                    (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "62") (inst "sk=i_8"))
                                 (rule "orRight" (formula "62"))
                                 (rule "notRight" (formula "63"))
                                 (rule "orRight" (formula "63"))
                                 (rule "inEqSimp_geqRight" (formula "64"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "64"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "53"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "53"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "elementOfUnion" (formula "51"))
                                 (rule "orRight" (formula "51"))
                                 (rule "elementOfSingleton" (formula "52"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "false_right" (formula "52"))
                                 (rule "elementOfSingleton" (formula "51"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "false_right" (formula "51"))
                                 (rule "allLeft" (formula "37") (inst "t=i_8"))
                                 (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                 (rule "leq_literals" (formula "37") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "37"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "62") (inst "sk=i_7"))
                              (rule "orRight" (formula "62"))
                              (rule "orRight" (formula "62"))
                              (rule "notRight" (formula "64"))
                              (rule "inEqSimp_leqRight" (formula "63"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "64"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "5")))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "54"))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "54"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "ifEqualsNull" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "elementOfUnion" (formula "51"))
                              (rule "orRight" (formula "51"))
                              (rule "elementOfSingleton" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "false_right" (formula "52"))
                              (rule "elementOfSingleton" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "false_right" (formula "51"))
                              (rule "allLeft" (formula "39") (inst "t=i_7"))
                              (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "39") (term "0,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "1"))
                              (rule "andLeft" (formula "39"))
                              (rule "inEqSimp_homoInEq1" (formula "39"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                              (rule "add_literals" (formula "39") (term "1,1,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0"))
                              (rule "add_literals" (formula "39") (term "0"))
                              (rule "leq_literals" (formula "39"))
                              (rule "closeFalse" (formula "39"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "62") (inst "sk=i_6"))
                           (rule "orRight" (formula "62"))
                           (rule "orRight" (formula "62"))
                           (rule "notRight" (formula "64"))
                           (rule "inEqSimp_leqRight" (formula "63"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "55"))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "55"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "elementOfUnion" (formula "51"))
                           (rule "orRight" (formula "51"))
                           (rule "elementOfSingleton" (formula "52"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "false_right" (formula "52"))
                           (rule "elementOfSingleton" (formula "51"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "false_right" (formula "51"))
                           (rule "allLeft" (formula "41") (inst "t=i_6"))
                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "41") (term "0,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (ifseqformula "1"))
                           (rule "andLeft" (formula "41"))
                           (rule "inEqSimp_homoInEq1" (formula "41"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                           (rule "add_literals" (formula "41") (term "1,1,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0"))
                           (rule "add_literals" (formula "41") (term "0"))
                           (rule "leq_literals" (formula "41"))
                           (rule "closeFalse" (formula "41"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "62") (inst "sk=f_1"))
                        (rule "allRight" (formula "62") (inst "sk=o_1"))
                        (rule "orRight" (formula "62"))
                        (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=f_1_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                        (rule "eqSymm" (formula "64"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_or" (formula "1") (term "1,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_0 ∧ (f_1 = Throwable::$cause ∨ f_1 = Throwable::$message) ∧ (f_1 = Throwable::$cause ∨ o_1 = self_0) ∧ (f_1 = Throwable::$message ∨ o_1 = self_0) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "68"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "65") (term "1,0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "65") (term "0,1") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "notRight" (formula "65"))
                           (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2"))
                           (rule "close" (formula "52") (ifseqformula "2"))
                        )
                        (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_0 ∧ (f_1 = Throwable::$cause ∨ f_1 = Throwable::$message) ∧ (f_1 = Throwable::$cause ∨ o_1 = self_0) ∧ (f_1 = Throwable::$message ∨ o_1 = self_0) FALSE"
                           (rule "close" (formula "65") (ifseqformula "1"))
                        )
                     )
                  )
                  (branch "CUT: verif.selectvoting.system.core.Tag.BALLOTS = null FALSE"
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "narrowSelectArrayType" (formula "25") (term "2,0,0,0") (ifseqformula "9") (ifseqformula "47"))
                     (rule "andRight" (formula "63"))
                     (branch "Case 1"
                        (rule "andRight" (formula "63"))
                        (branch "Case 1"
                           (rule "andRight" (formula "63"))
                           (branch "Case 1"
                              (rule "andRight" (formula "63"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "63"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "63"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "63") (inst "sk=i_5"))
                                       (rule "orRight" (formula "63"))
                                       (rule "notRight" (formula "64"))
                                       (rule "orRight" (formula "64"))
                                       (rule "inEqSimp_geqRight" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "65"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "33")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "63"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "63"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "allLeft" (formula "19") (inst "t=i_5"))
                                       (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "63") (inst "sk=i_4"))
                                       (rule "orRight" (formula "63"))
                                       (rule "notRight" (formula "64"))
                                       (rule "orRight" (formula "64"))
                                       (rule "inEqSimp_geqRight" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "65"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "21")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "62"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "62"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfUnion" (formula "3") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "allLeft" (formula "18") (inst "t=i_4"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "63") (inst "sk=i_3"))
                                    (rule "orRight" (formula "63"))
                                    (rule "orRight" (formula "63"))
                                    (rule "notRight" (formula "65"))
                                    (rule "inEqSimp_leqRight" (formula "64"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "65"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "30")))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "61"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "61"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "allLeft" (formula "17") (inst "t=i_3"))
                                    (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "63") (inst "sk=i_2"))
                                 (rule "orRight" (formula "63"))
                                 (rule "notRight" (formula "64"))
                                 (rule "orRight" (formula "64"))
                                 (rule "inEqSimp_geqRight" (formula "65"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "65"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                                 (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "54"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "54"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "allLeft" (formula "37") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                 (rule "leq_literals" (formula "37") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "37") (term "0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "closeFalse" (formula "37"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "63") (inst "sk=i_1"))
                              (rule "orRight" (formula "63"))
                              (rule "notRight" (formula "64"))
                              (rule "orRight" (formula "64"))
                              (rule "inEqSimp_geqRight" (formula "65"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "65"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "5")))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "55"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "55"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "ifEqualsNull" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "allLeft" (formula "39") (inst "t=i_1"))
                              (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "39") (term "0,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "63") (inst "sk=i_0"))
                           (rule "orRight" (formula "63"))
                           (rule "notRight" (formula "64"))
                           (rule "orRight" (formula "64"))
                           (rule "inEqSimp_leqRight" (formula "64"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "65"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "56"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "43") (ifseqformula "56"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "allLeft" (formula "41") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "41") (term "0,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "41"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "63") (inst "sk=f_0"))
                        (rule "allRight" (formula "63") (inst "sk=o_0"))
                        (rule "orRight" (formula "63"))
                        (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                        (rule "eqSymm" (formula "65"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self_0 ∧ (f_0 = Throwable::$cause ∨ f_0 = Throwable::$message) ∧ (f_0 = Throwable::$cause ∨ o_0 = self_0) ∧ (f_0 = Throwable::$message ∨ o_0 = self_0) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "69"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "66") (term "1,0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "notRight" (formula "66"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "close" (formula "53") (ifseqformula "1"))
                        )
                        (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self_0 ∧ (f_0 = Throwable::$cause ∨ f_0 = Throwable::$message) ∧ (f_0 = Throwable::$cause ∨ o_0 = self_0) ∧ (f_0 = Throwable::$message ∨ o_0 = self_0) FALSE"
                           (rule "close" (formula "66") (ifseqformula "1"))
                        )
                     )
                  )
               )
            )
            (branch "ClassCastException (!(n instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "66"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "closeTrue" (formula "65"))
            )
         )
         (branch "if n instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (NullPointerException)"
      (builtin "One Step Simplification" (formula "57"))
      (builtin "One Step Simplification" (formula "43"))
      (rule "andLeft" (formula "43"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0,0") (ifseqformula "43"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0,1,0") (ifseqformula "43"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "46"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "46"))
      (rule "andLeft" (formula "48"))
      (rule "notLeft" (formula "44"))
      (rule "close" (formula "50") (ifseqformula "49"))
   )
   (branch "Pre (NullPointerException)"
      (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "9")))
      (rule "closeTrue" (formula "55"))
   )
)
)

}
